/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the FilesystemSetDosmode0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesystemSetDosmode0{}

// FilesystemSetDosmode0 struct for FilesystemSetDosmode0
type FilesystemSetDosmode0 struct {
	Path    *string  `json:"path,omitempty"`
	Dosmode *Dosmode `json:"dosmode,omitempty"`
}

// NewFilesystemSetDosmode0 instantiates a new FilesystemSetDosmode0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesystemSetDosmode0() *FilesystemSetDosmode0 {
	this := FilesystemSetDosmode0{}
	var dosmode Dosmode
	this.Dosmode = &dosmode
	return &this
}

// NewFilesystemSetDosmode0WithDefaults instantiates a new FilesystemSetDosmode0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesystemSetDosmode0WithDefaults() *FilesystemSetDosmode0 {
	this := FilesystemSetDosmode0{}
	var dosmode Dosmode
	this.Dosmode = &dosmode
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *FilesystemSetDosmode0) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesystemSetDosmode0) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *FilesystemSetDosmode0) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *FilesystemSetDosmode0) SetPath(v string) {
	o.Path = &v
}

// GetDosmode returns the Dosmode field value if set, zero value otherwise.
func (o *FilesystemSetDosmode0) GetDosmode() Dosmode {
	if o == nil || IsNil(o.Dosmode) {
		var ret Dosmode
		return ret
	}
	return *o.Dosmode
}

// GetDosmodeOk returns a tuple with the Dosmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesystemSetDosmode0) GetDosmodeOk() (*Dosmode, bool) {
	if o == nil || IsNil(o.Dosmode) {
		return nil, false
	}
	return o.Dosmode, true
}

// HasDosmode returns a boolean if a field has been set.
func (o *FilesystemSetDosmode0) HasDosmode() bool {
	if o != nil && !IsNil(o.Dosmode) {
		return true
	}

	return false
}

// SetDosmode gets a reference to the given Dosmode and assigns it to the Dosmode field.
func (o *FilesystemSetDosmode0) SetDosmode(v Dosmode) {
	o.Dosmode = &v
}

func (o FilesystemSetDosmode0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesystemSetDosmode0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Dosmode) {
		toSerialize["dosmode"] = o.Dosmode
	}
	return toSerialize, nil
}

type NullableFilesystemSetDosmode0 struct {
	value *FilesystemSetDosmode0
	isSet bool
}

func (v NullableFilesystemSetDosmode0) Get() *FilesystemSetDosmode0 {
	return v.value
}

func (v *NullableFilesystemSetDosmode0) Set(val *FilesystemSetDosmode0) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesystemSetDosmode0) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesystemSetDosmode0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesystemSetDosmode0(val *FilesystemSetDosmode0) *NullableFilesystemSetDosmode0 {
	return &NullableFilesystemSetDosmode0{value: val, isSet: true}
}

func (v NullableFilesystemSetDosmode0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesystemSetDosmode0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
