/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the CronjobGetInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CronjobGetInstance{}

// CronjobGetInstance struct for CronjobGetInstance
type CronjobGetInstance struct {
	Id                   *CronjobGetInstance0 `json:"id,omitempty"`
	QueryOptions         *CronjobGetInstance1 `json:"query-options,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CronjobGetInstance CronjobGetInstance

// NewCronjobGetInstance instantiates a new CronjobGetInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCronjobGetInstance() *CronjobGetInstance {
	this := CronjobGetInstance{}
	var queryOptions CronjobGetInstance1
	this.QueryOptions = &queryOptions
	return &this
}

// NewCronjobGetInstanceWithDefaults instantiates a new CronjobGetInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCronjobGetInstanceWithDefaults() *CronjobGetInstance {
	this := CronjobGetInstance{}
	var queryOptions CronjobGetInstance1
	this.QueryOptions = &queryOptions
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CronjobGetInstance) GetId() CronjobGetInstance0 {
	if o == nil || IsNil(o.Id) {
		var ret CronjobGetInstance0
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronjobGetInstance) GetIdOk() (*CronjobGetInstance0, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CronjobGetInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given CronjobGetInstance0 and assigns it to the Id field.
func (o *CronjobGetInstance) SetId(v CronjobGetInstance0) {
	o.Id = &v
}

// GetQueryOptions returns the QueryOptions field value if set, zero value otherwise.
func (o *CronjobGetInstance) GetQueryOptions() CronjobGetInstance1 {
	if o == nil || IsNil(o.QueryOptions) {
		var ret CronjobGetInstance1
		return ret
	}
	return *o.QueryOptions
}

// GetQueryOptionsOk returns a tuple with the QueryOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CronjobGetInstance) GetQueryOptionsOk() (*CronjobGetInstance1, bool) {
	if o == nil || IsNil(o.QueryOptions) {
		return nil, false
	}
	return o.QueryOptions, true
}

// HasQueryOptions returns a boolean if a field has been set.
func (o *CronjobGetInstance) HasQueryOptions() bool {
	if o != nil && !IsNil(o.QueryOptions) {
		return true
	}

	return false
}

// SetQueryOptions gets a reference to the given CronjobGetInstance1 and assigns it to the QueryOptions field.
func (o *CronjobGetInstance) SetQueryOptions(v CronjobGetInstance1) {
	o.QueryOptions = &v
}

func (o CronjobGetInstance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CronjobGetInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.QueryOptions) {
		toSerialize["query-options"] = o.QueryOptions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CronjobGetInstance) UnmarshalJSON(bytes []byte) (err error) {
	varCronjobGetInstance := _CronjobGetInstance{}

	if err = json.Unmarshal(bytes, &varCronjobGetInstance); err == nil {
		*o = CronjobGetInstance(varCronjobGetInstance)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "query-options")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCronjobGetInstance struct {
	value *CronjobGetInstance
	isSet bool
}

func (v NullableCronjobGetInstance) Get() *CronjobGetInstance {
	return v.value
}

func (v *NullableCronjobGetInstance) Set(val *CronjobGetInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableCronjobGetInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableCronjobGetInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCronjobGetInstance(val *CronjobGetInstance) *NullableCronjobGetInstance {
	return &NullableCronjobGetInstance{value: val, isSet: true}
}

func (v NullableCronjobGetInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCronjobGetInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
