/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the IscsiInitiatorCreate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IscsiInitiatorCreate0{}

// IscsiInitiatorCreate0 struct for IscsiInitiatorCreate0
type IscsiInitiatorCreate0 struct {
	Initiators []interface{} `json:"initiators,omitempty"`
	Comment    *string       `json:"comment,omitempty"`
}

// NewIscsiInitiatorCreate0 instantiates a new IscsiInitiatorCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIscsiInitiatorCreate0() *IscsiInitiatorCreate0 {
	this := IscsiInitiatorCreate0{}
	return &this
}

// NewIscsiInitiatorCreate0WithDefaults instantiates a new IscsiInitiatorCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIscsiInitiatorCreate0WithDefaults() *IscsiInitiatorCreate0 {
	this := IscsiInitiatorCreate0{}
	return &this
}

// GetInitiators returns the Initiators field value if set, zero value otherwise.
func (o *IscsiInitiatorCreate0) GetInitiators() []interface{} {
	if o == nil || IsNil(o.Initiators) {
		var ret []interface{}
		return ret
	}
	return o.Initiators
}

// GetInitiatorsOk returns a tuple with the Initiators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiInitiatorCreate0) GetInitiatorsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Initiators) {
		return nil, false
	}
	return o.Initiators, true
}

// HasInitiators returns a boolean if a field has been set.
func (o *IscsiInitiatorCreate0) HasInitiators() bool {
	if o != nil && !IsNil(o.Initiators) {
		return true
	}

	return false
}

// SetInitiators gets a reference to the given []interface{} and assigns it to the Initiators field.
func (o *IscsiInitiatorCreate0) SetInitiators(v []interface{}) {
	o.Initiators = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *IscsiInitiatorCreate0) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiInitiatorCreate0) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *IscsiInitiatorCreate0) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *IscsiInitiatorCreate0) SetComment(v string) {
	o.Comment = &v
}

func (o IscsiInitiatorCreate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IscsiInitiatorCreate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Initiators) {
		toSerialize["initiators"] = o.Initiators
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableIscsiInitiatorCreate0 struct {
	value *IscsiInitiatorCreate0
	isSet bool
}

func (v NullableIscsiInitiatorCreate0) Get() *IscsiInitiatorCreate0 {
	return v.value
}

func (v *NullableIscsiInitiatorCreate0) Set(val *IscsiInitiatorCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableIscsiInitiatorCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableIscsiInitiatorCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIscsiInitiatorCreate0(val *IscsiInitiatorCreate0) *NullableIscsiInitiatorCreate0 {
	return &NullableIscsiInitiatorCreate0{value: val, isSet: true}
}

func (v NullableIscsiInitiatorCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIscsiInitiatorCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
