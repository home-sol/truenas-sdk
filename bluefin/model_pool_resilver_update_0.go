/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the PoolResilverUpdate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoolResilverUpdate0{}

// PoolResilverUpdate0 struct for PoolResilverUpdate0
type PoolResilverUpdate0 struct {
	// If `begin` time is greater than `end` time it means it will rollover the day, e.g. begin = \"19:00\", end = \"05:00\" will increase pool resilver priority from 19:00 of one day until 05:00 of the next day.
	Begin *string `json:"begin,omitempty"`
	// If `begin` time is greater than `end` time it means it will rollover the day, e.g. begin = \"19:00\", end = \"05:00\" will increase pool resilver priority from 19:00 of one day until 05:00 of the next day.
	End     *string `json:"end,omitempty"`
	Enabled *bool   `json:"enabled,omitempty"`
	// `weekday` follows crontab(5) values 0-7 (0 or 7 is Sun).
	Weekday []int32 `json:"weekday,omitempty"`
}

// NewPoolResilverUpdate0 instantiates a new PoolResilverUpdate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolResilverUpdate0() *PoolResilverUpdate0 {
	this := PoolResilverUpdate0{}
	return &this
}

// NewPoolResilverUpdate0WithDefaults instantiates a new PoolResilverUpdate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolResilverUpdate0WithDefaults() *PoolResilverUpdate0 {
	this := PoolResilverUpdate0{}
	return &this
}

// GetBegin returns the Begin field value if set, zero value otherwise.
func (o *PoolResilverUpdate0) GetBegin() string {
	if o == nil || IsNil(o.Begin) {
		var ret string
		return ret
	}
	return *o.Begin
}

// GetBeginOk returns a tuple with the Begin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolResilverUpdate0) GetBeginOk() (*string, bool) {
	if o == nil || IsNil(o.Begin) {
		return nil, false
	}
	return o.Begin, true
}

// HasBegin returns a boolean if a field has been set.
func (o *PoolResilverUpdate0) HasBegin() bool {
	if o != nil && !IsNil(o.Begin) {
		return true
	}

	return false
}

// SetBegin gets a reference to the given string and assigns it to the Begin field.
func (o *PoolResilverUpdate0) SetBegin(v string) {
	o.Begin = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *PoolResilverUpdate0) GetEnd() string {
	if o == nil || IsNil(o.End) {
		var ret string
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolResilverUpdate0) GetEndOk() (*string, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *PoolResilverUpdate0) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given string and assigns it to the End field.
func (o *PoolResilverUpdate0) SetEnd(v string) {
	o.End = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PoolResilverUpdate0) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolResilverUpdate0) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PoolResilverUpdate0) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PoolResilverUpdate0) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetWeekday returns the Weekday field value if set, zero value otherwise.
func (o *PoolResilverUpdate0) GetWeekday() []int32 {
	if o == nil || IsNil(o.Weekday) {
		var ret []int32
		return ret
	}
	return o.Weekday
}

// GetWeekdayOk returns a tuple with the Weekday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolResilverUpdate0) GetWeekdayOk() ([]int32, bool) {
	if o == nil || IsNil(o.Weekday) {
		return nil, false
	}
	return o.Weekday, true
}

// HasWeekday returns a boolean if a field has been set.
func (o *PoolResilverUpdate0) HasWeekday() bool {
	if o != nil && !IsNil(o.Weekday) {
		return true
	}

	return false
}

// SetWeekday gets a reference to the given []int32 and assigns it to the Weekday field.
func (o *PoolResilverUpdate0) SetWeekday(v []int32) {
	o.Weekday = v
}

func (o PoolResilverUpdate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoolResilverUpdate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Begin) {
		toSerialize["begin"] = o.Begin
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Weekday) {
		toSerialize["weekday"] = o.Weekday
	}
	return toSerialize, nil
}

type NullablePoolResilverUpdate0 struct {
	value *PoolResilverUpdate0
	isSet bool
}

func (v NullablePoolResilverUpdate0) Get() *PoolResilverUpdate0 {
	return v.value
}

func (v *NullablePoolResilverUpdate0) Set(val *PoolResilverUpdate0) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolResilverUpdate0) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolResilverUpdate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolResilverUpdate0(val *PoolResilverUpdate0) *NullablePoolResilverUpdate0 {
	return &NullablePoolResilverUpdate0{value: val, isSet: true}
}

func (v NullablePoolResilverUpdate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolResilverUpdate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
