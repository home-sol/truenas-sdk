/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the Nfs41Flags type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Nfs41Flags{}

// Nfs41Flags struct for Nfs41Flags
type Nfs41Flags struct {
	Autoinherit *bool `json:"autoinherit,omitempty"`
	Protected   *bool `json:"protected,omitempty"`
}

// NewNfs41Flags instantiates a new Nfs41Flags object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNfs41Flags() *Nfs41Flags {
	this := Nfs41Flags{}
	var autoinherit bool
	this.Autoinherit = &autoinherit
	var protected bool
	this.Protected = &protected
	return &this
}

// NewNfs41FlagsWithDefaults instantiates a new Nfs41Flags object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNfs41FlagsWithDefaults() *Nfs41Flags {
	this := Nfs41Flags{}
	var autoinherit bool
	this.Autoinherit = &autoinherit
	var protected bool
	this.Protected = &protected
	return &this
}

// GetAutoinherit returns the Autoinherit field value if set, zero value otherwise.
func (o *Nfs41Flags) GetAutoinherit() bool {
	if o == nil || IsNil(o.Autoinherit) {
		var ret bool
		return ret
	}
	return *o.Autoinherit
}

// GetAutoinheritOk returns a tuple with the Autoinherit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nfs41Flags) GetAutoinheritOk() (*bool, bool) {
	if o == nil || IsNil(o.Autoinherit) {
		return nil, false
	}
	return o.Autoinherit, true
}

// HasAutoinherit returns a boolean if a field has been set.
func (o *Nfs41Flags) HasAutoinherit() bool {
	if o != nil && !IsNil(o.Autoinherit) {
		return true
	}

	return false
}

// SetAutoinherit gets a reference to the given bool and assigns it to the Autoinherit field.
func (o *Nfs41Flags) SetAutoinherit(v bool) {
	o.Autoinherit = &v
}

// GetProtected returns the Protected field value if set, zero value otherwise.
func (o *Nfs41Flags) GetProtected() bool {
	if o == nil || IsNil(o.Protected) {
		var ret bool
		return ret
	}
	return *o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Nfs41Flags) GetProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Protected) {
		return nil, false
	}
	return o.Protected, true
}

// HasProtected returns a boolean if a field has been set.
func (o *Nfs41Flags) HasProtected() bool {
	if o != nil && !IsNil(o.Protected) {
		return true
	}

	return false
}

// SetProtected gets a reference to the given bool and assigns it to the Protected field.
func (o *Nfs41Flags) SetProtected(v bool) {
	o.Protected = &v
}

func (o Nfs41Flags) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Nfs41Flags) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Autoinherit) {
		toSerialize["autoinherit"] = o.Autoinherit
	}
	if !IsNil(o.Protected) {
		toSerialize["protected"] = o.Protected
	}
	return toSerialize, nil
}

type NullableNfs41Flags struct {
	value *Nfs41Flags
	isSet bool
}

func (v NullableNfs41Flags) Get() *Nfs41Flags {
	return v.value
}

func (v *NullableNfs41Flags) Set(val *Nfs41Flags) {
	v.value = val
	v.isSet = true
}

func (v NullableNfs41Flags) IsSet() bool {
	return v.isSet
}

func (v *NullableNfs41Flags) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNfs41Flags(val *Nfs41Flags) *NullableNfs41Flags {
	return &NullableNfs41Flags{value: val, isSet: true}
}

func (v NullableNfs41Flags) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNfs41Flags) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
