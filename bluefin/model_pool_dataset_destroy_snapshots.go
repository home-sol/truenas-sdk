/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the PoolDatasetDestroySnapshots type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoolDatasetDestroySnapshots{}

// PoolDatasetDestroySnapshots struct for PoolDatasetDestroySnapshots
type PoolDatasetDestroySnapshots struct {
	Name                 *string                       `json:"name,omitempty"`
	Snapshots            *PoolDatasetDestroySnapshots1 `json:"snapshots,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PoolDatasetDestroySnapshots PoolDatasetDestroySnapshots

// NewPoolDatasetDestroySnapshots instantiates a new PoolDatasetDestroySnapshots object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolDatasetDestroySnapshots() *PoolDatasetDestroySnapshots {
	this := PoolDatasetDestroySnapshots{}
	var snapshots PoolDatasetDestroySnapshots1
	this.Snapshots = &snapshots
	return &this
}

// NewPoolDatasetDestroySnapshotsWithDefaults instantiates a new PoolDatasetDestroySnapshots object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolDatasetDestroySnapshotsWithDefaults() *PoolDatasetDestroySnapshots {
	this := PoolDatasetDestroySnapshots{}
	var snapshots PoolDatasetDestroySnapshots1
	this.Snapshots = &snapshots
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PoolDatasetDestroySnapshots) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetDestroySnapshots) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PoolDatasetDestroySnapshots) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PoolDatasetDestroySnapshots) SetName(v string) {
	o.Name = &v
}

// GetSnapshots returns the Snapshots field value if set, zero value otherwise.
func (o *PoolDatasetDestroySnapshots) GetSnapshots() PoolDatasetDestroySnapshots1 {
	if o == nil || IsNil(o.Snapshots) {
		var ret PoolDatasetDestroySnapshots1
		return ret
	}
	return *o.Snapshots
}

// GetSnapshotsOk returns a tuple with the Snapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetDestroySnapshots) GetSnapshotsOk() (*PoolDatasetDestroySnapshots1, bool) {
	if o == nil || IsNil(o.Snapshots) {
		return nil, false
	}
	return o.Snapshots, true
}

// HasSnapshots returns a boolean if a field has been set.
func (o *PoolDatasetDestroySnapshots) HasSnapshots() bool {
	if o != nil && !IsNil(o.Snapshots) {
		return true
	}

	return false
}

// SetSnapshots gets a reference to the given PoolDatasetDestroySnapshots1 and assigns it to the Snapshots field.
func (o *PoolDatasetDestroySnapshots) SetSnapshots(v PoolDatasetDestroySnapshots1) {
	o.Snapshots = &v
}

func (o PoolDatasetDestroySnapshots) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoolDatasetDestroySnapshots) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Snapshots) {
		toSerialize["snapshots"] = o.Snapshots
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PoolDatasetDestroySnapshots) UnmarshalJSON(bytes []byte) (err error) {
	varPoolDatasetDestroySnapshots := _PoolDatasetDestroySnapshots{}

	if err = json.Unmarshal(bytes, &varPoolDatasetDestroySnapshots); err == nil {
		*o = PoolDatasetDestroySnapshots(varPoolDatasetDestroySnapshots)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "snapshots")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePoolDatasetDestroySnapshots struct {
	value *PoolDatasetDestroySnapshots
	isSet bool
}

func (v NullablePoolDatasetDestroySnapshots) Get() *PoolDatasetDestroySnapshots {
	return v.value
}

func (v *NullablePoolDatasetDestroySnapshots) Set(val *PoolDatasetDestroySnapshots) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolDatasetDestroySnapshots) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolDatasetDestroySnapshots) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolDatasetDestroySnapshots(val *PoolDatasetDestroySnapshots) *NullablePoolDatasetDestroySnapshots {
	return &NullablePoolDatasetDestroySnapshots{value: val, isSet: true}
}

func (v NullablePoolDatasetDestroySnapshots) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolDatasetDestroySnapshots) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
