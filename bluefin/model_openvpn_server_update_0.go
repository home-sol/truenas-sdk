/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the OpenvpnServerUpdate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenvpnServerUpdate0{}

// OpenvpnServerUpdate0 struct for OpenvpnServerUpdate0
type OpenvpnServerUpdate0 struct {
	TlsCryptAuthEnabled     *bool          `json:"tls_crypt_auth_enabled,omitempty"`
	Netmask                 *int32         `json:"netmask,omitempty"`
	ServerCertificate       NullableInt32  `json:"server_certificate,omitempty"`
	Port                    *int32         `json:"port,omitempty"`
	RootCa                  NullableInt32  `json:"root_ca,omitempty"`
	Server                  *string        `json:"server,omitempty"`
	AdditionalParameters    *string        `json:"additional_parameters,omitempty"`
	AuthenticationAlgorithm NullableString `json:"authentication_algorithm,omitempty"`
	Cipher                  NullableString `json:"cipher,omitempty"`
	Compression             NullableString `json:"compression,omitempty"`
	DeviceType              *string        `json:"device_type,omitempty"`
	Protocol                *string        `json:"protocol,omitempty"`
	TlsCryptAuth            NullableString `json:"tls_crypt_auth,omitempty"`
	Topology                NullableString `json:"topology,omitempty"`
	RemoveCertificates      *bool          `json:"remove_certificates,omitempty"`
}

// NewOpenvpnServerUpdate0 instantiates a new OpenvpnServerUpdate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenvpnServerUpdate0() *OpenvpnServerUpdate0 {
	this := OpenvpnServerUpdate0{}
	var removeCertificates bool
	this.RemoveCertificates = &removeCertificates
	return &this
}

// NewOpenvpnServerUpdate0WithDefaults instantiates a new OpenvpnServerUpdate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenvpnServerUpdate0WithDefaults() *OpenvpnServerUpdate0 {
	this := OpenvpnServerUpdate0{}
	var removeCertificates bool
	this.RemoveCertificates = &removeCertificates
	return &this
}

// GetTlsCryptAuthEnabled returns the TlsCryptAuthEnabled field value if set, zero value otherwise.
func (o *OpenvpnServerUpdate0) GetTlsCryptAuthEnabled() bool {
	if o == nil || IsNil(o.TlsCryptAuthEnabled) {
		var ret bool
		return ret
	}
	return *o.TlsCryptAuthEnabled
}

// GetTlsCryptAuthEnabledOk returns a tuple with the TlsCryptAuthEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnServerUpdate0) GetTlsCryptAuthEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TlsCryptAuthEnabled) {
		return nil, false
	}
	return o.TlsCryptAuthEnabled, true
}

// HasTlsCryptAuthEnabled returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasTlsCryptAuthEnabled() bool {
	if o != nil && !IsNil(o.TlsCryptAuthEnabled) {
		return true
	}

	return false
}

// SetTlsCryptAuthEnabled gets a reference to the given bool and assigns it to the TlsCryptAuthEnabled field.
func (o *OpenvpnServerUpdate0) SetTlsCryptAuthEnabled(v bool) {
	o.TlsCryptAuthEnabled = &v
}

// GetNetmask returns the Netmask field value if set, zero value otherwise.
func (o *OpenvpnServerUpdate0) GetNetmask() int32 {
	if o == nil || IsNil(o.Netmask) {
		var ret int32
		return ret
	}
	return *o.Netmask
}

// GetNetmaskOk returns a tuple with the Netmask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnServerUpdate0) GetNetmaskOk() (*int32, bool) {
	if o == nil || IsNil(o.Netmask) {
		return nil, false
	}
	return o.Netmask, true
}

// HasNetmask returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasNetmask() bool {
	if o != nil && !IsNil(o.Netmask) {
		return true
	}

	return false
}

// SetNetmask gets a reference to the given int32 and assigns it to the Netmask field.
func (o *OpenvpnServerUpdate0) SetNetmask(v int32) {
	o.Netmask = &v
}

// GetServerCertificate returns the ServerCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnServerUpdate0) GetServerCertificate() int32 {
	if o == nil || IsNil(o.ServerCertificate.Get()) {
		var ret int32
		return ret
	}
	return *o.ServerCertificate.Get()
}

// GetServerCertificateOk returns a tuple with the ServerCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnServerUpdate0) GetServerCertificateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerCertificate.Get(), o.ServerCertificate.IsSet()
}

// HasServerCertificate returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasServerCertificate() bool {
	if o != nil && o.ServerCertificate.IsSet() {
		return true
	}

	return false
}

// SetServerCertificate gets a reference to the given NullableInt32 and assigns it to the ServerCertificate field.
func (o *OpenvpnServerUpdate0) SetServerCertificate(v int32) {
	o.ServerCertificate.Set(&v)
}

// SetServerCertificateNil sets the value for ServerCertificate to be an explicit nil
func (o *OpenvpnServerUpdate0) SetServerCertificateNil() {
	o.ServerCertificate.Set(nil)
}

// UnsetServerCertificate ensures that no value is present for ServerCertificate, not even an explicit nil
func (o *OpenvpnServerUpdate0) UnsetServerCertificate() {
	o.ServerCertificate.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *OpenvpnServerUpdate0) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnServerUpdate0) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *OpenvpnServerUpdate0) SetPort(v int32) {
	o.Port = &v
}

// GetRootCa returns the RootCa field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnServerUpdate0) GetRootCa() int32 {
	if o == nil || IsNil(o.RootCa.Get()) {
		var ret int32
		return ret
	}
	return *o.RootCa.Get()
}

// GetRootCaOk returns a tuple with the RootCa field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnServerUpdate0) GetRootCaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RootCa.Get(), o.RootCa.IsSet()
}

// HasRootCa returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasRootCa() bool {
	if o != nil && o.RootCa.IsSet() {
		return true
	}

	return false
}

// SetRootCa gets a reference to the given NullableInt32 and assigns it to the RootCa field.
func (o *OpenvpnServerUpdate0) SetRootCa(v int32) {
	o.RootCa.Set(&v)
}

// SetRootCaNil sets the value for RootCa to be an explicit nil
func (o *OpenvpnServerUpdate0) SetRootCaNil() {
	o.RootCa.Set(nil)
}

// UnsetRootCa ensures that no value is present for RootCa, not even an explicit nil
func (o *OpenvpnServerUpdate0) UnsetRootCa() {
	o.RootCa.Unset()
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *OpenvpnServerUpdate0) GetServer() string {
	if o == nil || IsNil(o.Server) {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnServerUpdate0) GetServerOk() (*string, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *OpenvpnServerUpdate0) SetServer(v string) {
	o.Server = &v
}

// GetAdditionalParameters returns the AdditionalParameters field value if set, zero value otherwise.
func (o *OpenvpnServerUpdate0) GetAdditionalParameters() string {
	if o == nil || IsNil(o.AdditionalParameters) {
		var ret string
		return ret
	}
	return *o.AdditionalParameters
}

// GetAdditionalParametersOk returns a tuple with the AdditionalParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnServerUpdate0) GetAdditionalParametersOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalParameters) {
		return nil, false
	}
	return o.AdditionalParameters, true
}

// HasAdditionalParameters returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasAdditionalParameters() bool {
	if o != nil && !IsNil(o.AdditionalParameters) {
		return true
	}

	return false
}

// SetAdditionalParameters gets a reference to the given string and assigns it to the AdditionalParameters field.
func (o *OpenvpnServerUpdate0) SetAdditionalParameters(v string) {
	o.AdditionalParameters = &v
}

// GetAuthenticationAlgorithm returns the AuthenticationAlgorithm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnServerUpdate0) GetAuthenticationAlgorithm() string {
	if o == nil || IsNil(o.AuthenticationAlgorithm.Get()) {
		var ret string
		return ret
	}
	return *o.AuthenticationAlgorithm.Get()
}

// GetAuthenticationAlgorithmOk returns a tuple with the AuthenticationAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnServerUpdate0) GetAuthenticationAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationAlgorithm.Get(), o.AuthenticationAlgorithm.IsSet()
}

// HasAuthenticationAlgorithm returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasAuthenticationAlgorithm() bool {
	if o != nil && o.AuthenticationAlgorithm.IsSet() {
		return true
	}

	return false
}

// SetAuthenticationAlgorithm gets a reference to the given NullableString and assigns it to the AuthenticationAlgorithm field.
func (o *OpenvpnServerUpdate0) SetAuthenticationAlgorithm(v string) {
	o.AuthenticationAlgorithm.Set(&v)
}

// SetAuthenticationAlgorithmNil sets the value for AuthenticationAlgorithm to be an explicit nil
func (o *OpenvpnServerUpdate0) SetAuthenticationAlgorithmNil() {
	o.AuthenticationAlgorithm.Set(nil)
}

// UnsetAuthenticationAlgorithm ensures that no value is present for AuthenticationAlgorithm, not even an explicit nil
func (o *OpenvpnServerUpdate0) UnsetAuthenticationAlgorithm() {
	o.AuthenticationAlgorithm.Unset()
}

// GetCipher returns the Cipher field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnServerUpdate0) GetCipher() string {
	if o == nil || IsNil(o.Cipher.Get()) {
		var ret string
		return ret
	}
	return *o.Cipher.Get()
}

// GetCipherOk returns a tuple with the Cipher field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnServerUpdate0) GetCipherOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cipher.Get(), o.Cipher.IsSet()
}

// HasCipher returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasCipher() bool {
	if o != nil && o.Cipher.IsSet() {
		return true
	}

	return false
}

// SetCipher gets a reference to the given NullableString and assigns it to the Cipher field.
func (o *OpenvpnServerUpdate0) SetCipher(v string) {
	o.Cipher.Set(&v)
}

// SetCipherNil sets the value for Cipher to be an explicit nil
func (o *OpenvpnServerUpdate0) SetCipherNil() {
	o.Cipher.Set(nil)
}

// UnsetCipher ensures that no value is present for Cipher, not even an explicit nil
func (o *OpenvpnServerUpdate0) UnsetCipher() {
	o.Cipher.Unset()
}

// GetCompression returns the Compression field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnServerUpdate0) GetCompression() string {
	if o == nil || IsNil(o.Compression.Get()) {
		var ret string
		return ret
	}
	return *o.Compression.Get()
}

// GetCompressionOk returns a tuple with the Compression field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnServerUpdate0) GetCompressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Compression.Get(), o.Compression.IsSet()
}

// HasCompression returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasCompression() bool {
	if o != nil && o.Compression.IsSet() {
		return true
	}

	return false
}

// SetCompression gets a reference to the given NullableString and assigns it to the Compression field.
func (o *OpenvpnServerUpdate0) SetCompression(v string) {
	o.Compression.Set(&v)
}

// SetCompressionNil sets the value for Compression to be an explicit nil
func (o *OpenvpnServerUpdate0) SetCompressionNil() {
	o.Compression.Set(nil)
}

// UnsetCompression ensures that no value is present for Compression, not even an explicit nil
func (o *OpenvpnServerUpdate0) UnsetCompression() {
	o.Compression.Unset()
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *OpenvpnServerUpdate0) GetDeviceType() string {
	if o == nil || IsNil(o.DeviceType) {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnServerUpdate0) GetDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *OpenvpnServerUpdate0) SetDeviceType(v string) {
	o.DeviceType = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *OpenvpnServerUpdate0) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnServerUpdate0) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *OpenvpnServerUpdate0) SetProtocol(v string) {
	o.Protocol = &v
}

// GetTlsCryptAuth returns the TlsCryptAuth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnServerUpdate0) GetTlsCryptAuth() string {
	if o == nil || IsNil(o.TlsCryptAuth.Get()) {
		var ret string
		return ret
	}
	return *o.TlsCryptAuth.Get()
}

// GetTlsCryptAuthOk returns a tuple with the TlsCryptAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnServerUpdate0) GetTlsCryptAuthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TlsCryptAuth.Get(), o.TlsCryptAuth.IsSet()
}

// HasTlsCryptAuth returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasTlsCryptAuth() bool {
	if o != nil && o.TlsCryptAuth.IsSet() {
		return true
	}

	return false
}

// SetTlsCryptAuth gets a reference to the given NullableString and assigns it to the TlsCryptAuth field.
func (o *OpenvpnServerUpdate0) SetTlsCryptAuth(v string) {
	o.TlsCryptAuth.Set(&v)
}

// SetTlsCryptAuthNil sets the value for TlsCryptAuth to be an explicit nil
func (o *OpenvpnServerUpdate0) SetTlsCryptAuthNil() {
	o.TlsCryptAuth.Set(nil)
}

// UnsetTlsCryptAuth ensures that no value is present for TlsCryptAuth, not even an explicit nil
func (o *OpenvpnServerUpdate0) UnsetTlsCryptAuth() {
	o.TlsCryptAuth.Unset()
}

// GetTopology returns the Topology field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnServerUpdate0) GetTopology() string {
	if o == nil || IsNil(o.Topology.Get()) {
		var ret string
		return ret
	}
	return *o.Topology.Get()
}

// GetTopologyOk returns a tuple with the Topology field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnServerUpdate0) GetTopologyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Topology.Get(), o.Topology.IsSet()
}

// HasTopology returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasTopology() bool {
	if o != nil && o.Topology.IsSet() {
		return true
	}

	return false
}

// SetTopology gets a reference to the given NullableString and assigns it to the Topology field.
func (o *OpenvpnServerUpdate0) SetTopology(v string) {
	o.Topology.Set(&v)
}

// SetTopologyNil sets the value for Topology to be an explicit nil
func (o *OpenvpnServerUpdate0) SetTopologyNil() {
	o.Topology.Set(nil)
}

// UnsetTopology ensures that no value is present for Topology, not even an explicit nil
func (o *OpenvpnServerUpdate0) UnsetTopology() {
	o.Topology.Unset()
}

// GetRemoveCertificates returns the RemoveCertificates field value if set, zero value otherwise.
func (o *OpenvpnServerUpdate0) GetRemoveCertificates() bool {
	if o == nil || IsNil(o.RemoveCertificates) {
		var ret bool
		return ret
	}
	return *o.RemoveCertificates
}

// GetRemoveCertificatesOk returns a tuple with the RemoveCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnServerUpdate0) GetRemoveCertificatesOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoveCertificates) {
		return nil, false
	}
	return o.RemoveCertificates, true
}

// HasRemoveCertificates returns a boolean if a field has been set.
func (o *OpenvpnServerUpdate0) HasRemoveCertificates() bool {
	if o != nil && !IsNil(o.RemoveCertificates) {
		return true
	}

	return false
}

// SetRemoveCertificates gets a reference to the given bool and assigns it to the RemoveCertificates field.
func (o *OpenvpnServerUpdate0) SetRemoveCertificates(v bool) {
	o.RemoveCertificates = &v
}

func (o OpenvpnServerUpdate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenvpnServerUpdate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TlsCryptAuthEnabled) {
		toSerialize["tls_crypt_auth_enabled"] = o.TlsCryptAuthEnabled
	}
	if !IsNil(o.Netmask) {
		toSerialize["netmask"] = o.Netmask
	}
	if o.ServerCertificate.IsSet() {
		toSerialize["server_certificate"] = o.ServerCertificate.Get()
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if o.RootCa.IsSet() {
		toSerialize["root_ca"] = o.RootCa.Get()
	}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.AdditionalParameters) {
		toSerialize["additional_parameters"] = o.AdditionalParameters
	}
	if o.AuthenticationAlgorithm.IsSet() {
		toSerialize["authentication_algorithm"] = o.AuthenticationAlgorithm.Get()
	}
	if o.Cipher.IsSet() {
		toSerialize["cipher"] = o.Cipher.Get()
	}
	if o.Compression.IsSet() {
		toSerialize["compression"] = o.Compression.Get()
	}
	if !IsNil(o.DeviceType) {
		toSerialize["device_type"] = o.DeviceType
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if o.TlsCryptAuth.IsSet() {
		toSerialize["tls_crypt_auth"] = o.TlsCryptAuth.Get()
	}
	if o.Topology.IsSet() {
		toSerialize["topology"] = o.Topology.Get()
	}
	if !IsNil(o.RemoveCertificates) {
		toSerialize["remove_certificates"] = o.RemoveCertificates
	}
	return toSerialize, nil
}

type NullableOpenvpnServerUpdate0 struct {
	value *OpenvpnServerUpdate0
	isSet bool
}

func (v NullableOpenvpnServerUpdate0) Get() *OpenvpnServerUpdate0 {
	return v.value
}

func (v *NullableOpenvpnServerUpdate0) Set(val *OpenvpnServerUpdate0) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenvpnServerUpdate0) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenvpnServerUpdate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenvpnServerUpdate0(val *OpenvpnServerUpdate0) *NullableOpenvpnServerUpdate0 {
	return &NullableOpenvpnServerUpdate0{value: val, isSet: true}
}

func (v NullableOpenvpnServerUpdate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenvpnServerUpdate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
