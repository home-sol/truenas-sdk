/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the FilesystemAcltemplateByPath0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesystemAcltemplateByPath0{}

// FilesystemAcltemplateByPath0 struct for FilesystemAcltemplateByPath0
type FilesystemAcltemplateByPath0 struct {
	// Retrieve list of available ACL templates for a given `path`.
	Path          *string        `json:"path,omitempty"`
	QueryFilters  []interface{}  `json:"query-filters,omitempty"`
	QueryOptions  *QueryOptions  `json:"query-options,omitempty"`
	FormatOptions *FormatOptions `json:"format-options,omitempty"`
}

// NewFilesystemAcltemplateByPath0 instantiates a new FilesystemAcltemplateByPath0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesystemAcltemplateByPath0() *FilesystemAcltemplateByPath0 {
	this := FilesystemAcltemplateByPath0{}
	var path string
	this.Path = &path
	var queryOptions QueryOptions
	this.QueryOptions = &queryOptions
	var formatOptions FormatOptions
	this.FormatOptions = &formatOptions
	return &this
}

// NewFilesystemAcltemplateByPath0WithDefaults instantiates a new FilesystemAcltemplateByPath0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesystemAcltemplateByPath0WithDefaults() *FilesystemAcltemplateByPath0 {
	this := FilesystemAcltemplateByPath0{}
	var path string
	this.Path = &path
	var queryOptions QueryOptions
	this.QueryOptions = &queryOptions
	var formatOptions FormatOptions
	this.FormatOptions = &formatOptions
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *FilesystemAcltemplateByPath0) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesystemAcltemplateByPath0) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *FilesystemAcltemplateByPath0) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *FilesystemAcltemplateByPath0) SetPath(v string) {
	o.Path = &v
}

// GetQueryFilters returns the QueryFilters field value if set, zero value otherwise.
func (o *FilesystemAcltemplateByPath0) GetQueryFilters() []interface{} {
	if o == nil || IsNil(o.QueryFilters) {
		var ret []interface{}
		return ret
	}
	return o.QueryFilters
}

// GetQueryFiltersOk returns a tuple with the QueryFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesystemAcltemplateByPath0) GetQueryFiltersOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.QueryFilters) {
		return nil, false
	}
	return o.QueryFilters, true
}

// HasQueryFilters returns a boolean if a field has been set.
func (o *FilesystemAcltemplateByPath0) HasQueryFilters() bool {
	if o != nil && !IsNil(o.QueryFilters) {
		return true
	}

	return false
}

// SetQueryFilters gets a reference to the given []interface{} and assigns it to the QueryFilters field.
func (o *FilesystemAcltemplateByPath0) SetQueryFilters(v []interface{}) {
	o.QueryFilters = v
}

// GetQueryOptions returns the QueryOptions field value if set, zero value otherwise.
func (o *FilesystemAcltemplateByPath0) GetQueryOptions() QueryOptions {
	if o == nil || IsNil(o.QueryOptions) {
		var ret QueryOptions
		return ret
	}
	return *o.QueryOptions
}

// GetQueryOptionsOk returns a tuple with the QueryOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesystemAcltemplateByPath0) GetQueryOptionsOk() (*QueryOptions, bool) {
	if o == nil || IsNil(o.QueryOptions) {
		return nil, false
	}
	return o.QueryOptions, true
}

// HasQueryOptions returns a boolean if a field has been set.
func (o *FilesystemAcltemplateByPath0) HasQueryOptions() bool {
	if o != nil && !IsNil(o.QueryOptions) {
		return true
	}

	return false
}

// SetQueryOptions gets a reference to the given QueryOptions and assigns it to the QueryOptions field.
func (o *FilesystemAcltemplateByPath0) SetQueryOptions(v QueryOptions) {
	o.QueryOptions = &v
}

// GetFormatOptions returns the FormatOptions field value if set, zero value otherwise.
func (o *FilesystemAcltemplateByPath0) GetFormatOptions() FormatOptions {
	if o == nil || IsNil(o.FormatOptions) {
		var ret FormatOptions
		return ret
	}
	return *o.FormatOptions
}

// GetFormatOptionsOk returns a tuple with the FormatOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesystemAcltemplateByPath0) GetFormatOptionsOk() (*FormatOptions, bool) {
	if o == nil || IsNil(o.FormatOptions) {
		return nil, false
	}
	return o.FormatOptions, true
}

// HasFormatOptions returns a boolean if a field has been set.
func (o *FilesystemAcltemplateByPath0) HasFormatOptions() bool {
	if o != nil && !IsNil(o.FormatOptions) {
		return true
	}

	return false
}

// SetFormatOptions gets a reference to the given FormatOptions and assigns it to the FormatOptions field.
func (o *FilesystemAcltemplateByPath0) SetFormatOptions(v FormatOptions) {
	o.FormatOptions = &v
}

func (o FilesystemAcltemplateByPath0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesystemAcltemplateByPath0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.QueryFilters) {
		toSerialize["query-filters"] = o.QueryFilters
	}
	if !IsNil(o.QueryOptions) {
		toSerialize["query-options"] = o.QueryOptions
	}
	if !IsNil(o.FormatOptions) {
		toSerialize["format-options"] = o.FormatOptions
	}
	return toSerialize, nil
}

type NullableFilesystemAcltemplateByPath0 struct {
	value *FilesystemAcltemplateByPath0
	isSet bool
}

func (v NullableFilesystemAcltemplateByPath0) Get() *FilesystemAcltemplateByPath0 {
	return v.value
}

func (v *NullableFilesystemAcltemplateByPath0) Set(val *FilesystemAcltemplateByPath0) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesystemAcltemplateByPath0) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesystemAcltemplateByPath0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesystemAcltemplateByPath0(val *FilesystemAcltemplateByPath0) *NullableFilesystemAcltemplateByPath0 {
	return &NullableFilesystemAcltemplateByPath0{value: val, isSet: true}
}

func (v NullableFilesystemAcltemplateByPath0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesystemAcltemplateByPath0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
