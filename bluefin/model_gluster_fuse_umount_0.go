/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the GlusterFuseUmount0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlusterFuseUmount0{}

// GlusterFuseUmount0 struct for GlusterFuseUmount0
type GlusterFuseUmount0 struct {
	// `name` String representing the name of the gluster volume
	Name *string `json:"name,omitempty"`
	// `all` Boolean if True umount all locally detected FUSE         mounted gluster volumes
	All   *bool `json:"all,omitempty"`
	Raise *bool `json:"raise,omitempty"`
}

// NewGlusterFuseUmount0 instantiates a new GlusterFuseUmount0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlusterFuseUmount0() *GlusterFuseUmount0 {
	this := GlusterFuseUmount0{}
	var all bool
	this.All = &all
	var raise bool
	this.Raise = &raise
	return &this
}

// NewGlusterFuseUmount0WithDefaults instantiates a new GlusterFuseUmount0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlusterFuseUmount0WithDefaults() *GlusterFuseUmount0 {
	this := GlusterFuseUmount0{}
	var all bool
	this.All = &all
	var raise bool
	this.Raise = &raise
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GlusterFuseUmount0) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterFuseUmount0) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GlusterFuseUmount0) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GlusterFuseUmount0) SetName(v string) {
	o.Name = &v
}

// GetAll returns the All field value if set, zero value otherwise.
func (o *GlusterFuseUmount0) GetAll() bool {
	if o == nil || IsNil(o.All) {
		var ret bool
		return ret
	}
	return *o.All
}

// GetAllOk returns a tuple with the All field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterFuseUmount0) GetAllOk() (*bool, bool) {
	if o == nil || IsNil(o.All) {
		return nil, false
	}
	return o.All, true
}

// HasAll returns a boolean if a field has been set.
func (o *GlusterFuseUmount0) HasAll() bool {
	if o != nil && !IsNil(o.All) {
		return true
	}

	return false
}

// SetAll gets a reference to the given bool and assigns it to the All field.
func (o *GlusterFuseUmount0) SetAll(v bool) {
	o.All = &v
}

// GetRaise returns the Raise field value if set, zero value otherwise.
func (o *GlusterFuseUmount0) GetRaise() bool {
	if o == nil || IsNil(o.Raise) {
		var ret bool
		return ret
	}
	return *o.Raise
}

// GetRaiseOk returns a tuple with the Raise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterFuseUmount0) GetRaiseOk() (*bool, bool) {
	if o == nil || IsNil(o.Raise) {
		return nil, false
	}
	return o.Raise, true
}

// HasRaise returns a boolean if a field has been set.
func (o *GlusterFuseUmount0) HasRaise() bool {
	if o != nil && !IsNil(o.Raise) {
		return true
	}

	return false
}

// SetRaise gets a reference to the given bool and assigns it to the Raise field.
func (o *GlusterFuseUmount0) SetRaise(v bool) {
	o.Raise = &v
}

func (o GlusterFuseUmount0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlusterFuseUmount0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.All) {
		toSerialize["all"] = o.All
	}
	if !IsNil(o.Raise) {
		toSerialize["raise"] = o.Raise
	}
	return toSerialize, nil
}

type NullableGlusterFuseUmount0 struct {
	value *GlusterFuseUmount0
	isSet bool
}

func (v NullableGlusterFuseUmount0) Get() *GlusterFuseUmount0 {
	return v.value
}

func (v *NullableGlusterFuseUmount0) Set(val *GlusterFuseUmount0) {
	v.value = val
	v.isSet = true
}

func (v NullableGlusterFuseUmount0) IsSet() bool {
	return v.isSet
}

func (v *NullableGlusterFuseUmount0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlusterFuseUmount0(val *GlusterFuseUmount0) *NullableGlusterFuseUmount0 {
	return &NullableGlusterFuseUmount0{value: val, isSet: true}
}

func (v NullableGlusterFuseUmount0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlusterFuseUmount0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
