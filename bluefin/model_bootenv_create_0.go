/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the BootenvCreate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BootenvCreate0{}

// BootenvCreate0 struct for BootenvCreate0
type BootenvCreate0 struct {
	// Create a new boot environment using `name`. If a new boot environment is desired which is a clone of another boot environment, `source` can be passed. Then, a new boot environment of `name` is created using boot environment `source` by cloning it.
	Name *string `json:"name,omitempty"`
	// If a new boot environment is desired which is a clone of another boot environment, `source` can be passed. Then, a new boot environment of `name` is created using boot environment `source` by cloning it.
	Source *string `json:"source,omitempty"`
}

// NewBootenvCreate0 instantiates a new BootenvCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBootenvCreate0() *BootenvCreate0 {
	this := BootenvCreate0{}
	return &this
}

// NewBootenvCreate0WithDefaults instantiates a new BootenvCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBootenvCreate0WithDefaults() *BootenvCreate0 {
	this := BootenvCreate0{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BootenvCreate0) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BootenvCreate0) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BootenvCreate0) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BootenvCreate0) SetName(v string) {
	o.Name = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *BootenvCreate0) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BootenvCreate0) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *BootenvCreate0) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *BootenvCreate0) SetSource(v string) {
	o.Source = &v
}

func (o BootenvCreate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BootenvCreate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	return toSerialize, nil
}

type NullableBootenvCreate0 struct {
	value *BootenvCreate0
	isSet bool
}

func (v NullableBootenvCreate0) Get() *BootenvCreate0 {
	return v.value
}

func (v *NullableBootenvCreate0) Set(val *BootenvCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableBootenvCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableBootenvCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBootenvCreate0(val *BootenvCreate0) *NullableBootenvCreate0 {
	return &NullableBootenvCreate0{value: val, isSet: true}
}

func (v NullableBootenvCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBootenvCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
