/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the ChartReleaseCreate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChartReleaseCreate0{}

// ChartReleaseCreate0 struct for ChartReleaseCreate0
type ChartReleaseCreate0 struct {
	Values map[string]interface{} `json:"values,omitempty"`
	// `catalog` is a valid catalog id where system will look for catalog `item` details. `train` is which train to look for under `catalog` i.e stable / testing etc.
	Catalog *string `json:"catalog,omitempty"`
	// `catalog` is a valid catalog id where system will look for catalog `item` details. `version` specifies the catalog `item` version.
	Item *string `json:"item,omitempty"`
	// `release_name` is the name which will be used to identify the created chart release.
	ReleaseName *string `json:"release_name,omitempty"`
	// `train` is which train to look for under `catalog` i.e stable / testing etc.
	Train *string `json:"train,omitempty"`
	// `version` specifies the catalog `item` version.
	Version *string `json:"version,omitempty"`
}

// NewChartReleaseCreate0 instantiates a new ChartReleaseCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChartReleaseCreate0() *ChartReleaseCreate0 {
	this := ChartReleaseCreate0{}
	var train string
	this.Train = &train
	var version string
	this.Version = &version
	return &this
}

// NewChartReleaseCreate0WithDefaults instantiates a new ChartReleaseCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChartReleaseCreate0WithDefaults() *ChartReleaseCreate0 {
	this := ChartReleaseCreate0{}
	var train string
	this.Train = &train
	var version string
	this.Version = &version
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ChartReleaseCreate0) GetValues() map[string]interface{} {
	if o == nil || IsNil(o.Values) {
		var ret map[string]interface{}
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleaseCreate0) GetValuesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Values) {
		return map[string]interface{}{}, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ChartReleaseCreate0) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given map[string]interface{} and assigns it to the Values field.
func (o *ChartReleaseCreate0) SetValues(v map[string]interface{}) {
	o.Values = v
}

// GetCatalog returns the Catalog field value if set, zero value otherwise.
func (o *ChartReleaseCreate0) GetCatalog() string {
	if o == nil || IsNil(o.Catalog) {
		var ret string
		return ret
	}
	return *o.Catalog
}

// GetCatalogOk returns a tuple with the Catalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleaseCreate0) GetCatalogOk() (*string, bool) {
	if o == nil || IsNil(o.Catalog) {
		return nil, false
	}
	return o.Catalog, true
}

// HasCatalog returns a boolean if a field has been set.
func (o *ChartReleaseCreate0) HasCatalog() bool {
	if o != nil && !IsNil(o.Catalog) {
		return true
	}

	return false
}

// SetCatalog gets a reference to the given string and assigns it to the Catalog field.
func (o *ChartReleaseCreate0) SetCatalog(v string) {
	o.Catalog = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *ChartReleaseCreate0) GetItem() string {
	if o == nil || IsNil(o.Item) {
		var ret string
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleaseCreate0) GetItemOk() (*string, bool) {
	if o == nil || IsNil(o.Item) {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *ChartReleaseCreate0) HasItem() bool {
	if o != nil && !IsNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given string and assigns it to the Item field.
func (o *ChartReleaseCreate0) SetItem(v string) {
	o.Item = &v
}

// GetReleaseName returns the ReleaseName field value if set, zero value otherwise.
func (o *ChartReleaseCreate0) GetReleaseName() string {
	if o == nil || IsNil(o.ReleaseName) {
		var ret string
		return ret
	}
	return *o.ReleaseName
}

// GetReleaseNameOk returns a tuple with the ReleaseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleaseCreate0) GetReleaseNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseName) {
		return nil, false
	}
	return o.ReleaseName, true
}

// HasReleaseName returns a boolean if a field has been set.
func (o *ChartReleaseCreate0) HasReleaseName() bool {
	if o != nil && !IsNil(o.ReleaseName) {
		return true
	}

	return false
}

// SetReleaseName gets a reference to the given string and assigns it to the ReleaseName field.
func (o *ChartReleaseCreate0) SetReleaseName(v string) {
	o.ReleaseName = &v
}

// GetTrain returns the Train field value if set, zero value otherwise.
func (o *ChartReleaseCreate0) GetTrain() string {
	if o == nil || IsNil(o.Train) {
		var ret string
		return ret
	}
	return *o.Train
}

// GetTrainOk returns a tuple with the Train field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleaseCreate0) GetTrainOk() (*string, bool) {
	if o == nil || IsNil(o.Train) {
		return nil, false
	}
	return o.Train, true
}

// HasTrain returns a boolean if a field has been set.
func (o *ChartReleaseCreate0) HasTrain() bool {
	if o != nil && !IsNil(o.Train) {
		return true
	}

	return false
}

// SetTrain gets a reference to the given string and assigns it to the Train field.
func (o *ChartReleaseCreate0) SetTrain(v string) {
	o.Train = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ChartReleaseCreate0) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleaseCreate0) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ChartReleaseCreate0) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ChartReleaseCreate0) SetVersion(v string) {
	o.Version = &v
}

func (o ChartReleaseCreate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChartReleaseCreate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	if !IsNil(o.Catalog) {
		toSerialize["catalog"] = o.Catalog
	}
	if !IsNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	if !IsNil(o.ReleaseName) {
		toSerialize["release_name"] = o.ReleaseName
	}
	if !IsNil(o.Train) {
		toSerialize["train"] = o.Train
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableChartReleaseCreate0 struct {
	value *ChartReleaseCreate0
	isSet bool
}

func (v NullableChartReleaseCreate0) Get() *ChartReleaseCreate0 {
	return v.value
}

func (v *NullableChartReleaseCreate0) Set(val *ChartReleaseCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableChartReleaseCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableChartReleaseCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChartReleaseCreate0(val *ChartReleaseCreate0) *NullableChartReleaseCreate0 {
	return &NullableChartReleaseCreate0{value: val, isSet: true}
}

func (v NullableChartReleaseCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChartReleaseCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
