/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the CatalogGetItemDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogGetItemDetails{}

// CatalogGetItemDetails struct for CatalogGetItemDetails
type CatalogGetItemDetails struct {
	ItemName             *string                 `json:"item_name,omitempty"`
	ItemVersionDetails   *CatalogGetItemDetails1 `json:"item_version_details,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CatalogGetItemDetails CatalogGetItemDetails

// NewCatalogGetItemDetails instantiates a new CatalogGetItemDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogGetItemDetails() *CatalogGetItemDetails {
	this := CatalogGetItemDetails{}
	var itemVersionDetails CatalogGetItemDetails1
	this.ItemVersionDetails = &itemVersionDetails
	return &this
}

// NewCatalogGetItemDetailsWithDefaults instantiates a new CatalogGetItemDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogGetItemDetailsWithDefaults() *CatalogGetItemDetails {
	this := CatalogGetItemDetails{}
	var itemVersionDetails CatalogGetItemDetails1
	this.ItemVersionDetails = &itemVersionDetails
	return &this
}

// GetItemName returns the ItemName field value if set, zero value otherwise.
func (o *CatalogGetItemDetails) GetItemName() string {
	if o == nil || IsNil(o.ItemName) {
		var ret string
		return ret
	}
	return *o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogGetItemDetails) GetItemNameOk() (*string, bool) {
	if o == nil || IsNil(o.ItemName) {
		return nil, false
	}
	return o.ItemName, true
}

// HasItemName returns a boolean if a field has been set.
func (o *CatalogGetItemDetails) HasItemName() bool {
	if o != nil && !IsNil(o.ItemName) {
		return true
	}

	return false
}

// SetItemName gets a reference to the given string and assigns it to the ItemName field.
func (o *CatalogGetItemDetails) SetItemName(v string) {
	o.ItemName = &v
}

// GetItemVersionDetails returns the ItemVersionDetails field value if set, zero value otherwise.
func (o *CatalogGetItemDetails) GetItemVersionDetails() CatalogGetItemDetails1 {
	if o == nil || IsNil(o.ItemVersionDetails) {
		var ret CatalogGetItemDetails1
		return ret
	}
	return *o.ItemVersionDetails
}

// GetItemVersionDetailsOk returns a tuple with the ItemVersionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogGetItemDetails) GetItemVersionDetailsOk() (*CatalogGetItemDetails1, bool) {
	if o == nil || IsNil(o.ItemVersionDetails) {
		return nil, false
	}
	return o.ItemVersionDetails, true
}

// HasItemVersionDetails returns a boolean if a field has been set.
func (o *CatalogGetItemDetails) HasItemVersionDetails() bool {
	if o != nil && !IsNil(o.ItemVersionDetails) {
		return true
	}

	return false
}

// SetItemVersionDetails gets a reference to the given CatalogGetItemDetails1 and assigns it to the ItemVersionDetails field.
func (o *CatalogGetItemDetails) SetItemVersionDetails(v CatalogGetItemDetails1) {
	o.ItemVersionDetails = &v
}

func (o CatalogGetItemDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogGetItemDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemName) {
		toSerialize["item_name"] = o.ItemName
	}
	if !IsNil(o.ItemVersionDetails) {
		toSerialize["item_version_details"] = o.ItemVersionDetails
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CatalogGetItemDetails) UnmarshalJSON(bytes []byte) (err error) {
	varCatalogGetItemDetails := _CatalogGetItemDetails{}

	if err = json.Unmarshal(bytes, &varCatalogGetItemDetails); err == nil {
		*o = CatalogGetItemDetails(varCatalogGetItemDetails)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "item_name")
		delete(additionalProperties, "item_version_details")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCatalogGetItemDetails struct {
	value *CatalogGetItemDetails
	isSet bool
}

func (v NullableCatalogGetItemDetails) Get() *CatalogGetItemDetails {
	return v.value
}

func (v *NullableCatalogGetItemDetails) Set(val *CatalogGetItemDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogGetItemDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogGetItemDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogGetItemDetails(val *CatalogGetItemDetails) *NullableCatalogGetItemDetails {
	return &NullableCatalogGetItemDetails{value: val, isSet: true}
}

func (v NullableCatalogGetItemDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogGetItemDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
