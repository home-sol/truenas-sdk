/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the SystemGeneralUpdate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemGeneralUpdate0{}

// SystemGeneralUpdate0 struct for SystemGeneralUpdate0
type SystemGeneralUpdate0 struct {
	UiHttpsport *int32 `json:"ui_httpsport,omitempty"`
	// `ui_httpsredirect` when set, makes sure that all HTTP requests are converted to HTTPS requests to better enhance security.
	UiHttpsredirect  *bool    `json:"ui_httpsredirect,omitempty"`
	UiHttpsprotocols []string `json:"ui_httpsprotocols,omitempty"`
	UiPort           *int32   `json:"ui_port,omitempty"`
	// `ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will listen on.
	UiAddress []string `json:"ui_address,omitempty"`
	// `ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will listen on.
	UiV6address []string `json:"ui_v6address,omitempty"`
	// `ui_allowlist` is a list of IP addresses and networks that are allow to use API and UI. If this list is empty, then all IP addresses are allowed to use API and UI.
	UiAllowlist     []string     `json:"ui_allowlist,omitempty"`
	UiConsolemsg    *bool        `json:"ui_consolemsg,omitempty"`
	UiXFrameOptions *string      `json:"ui_x_frame_options,omitempty"`
	Kbdmap          *string      `json:"kbdmap,omitempty"`
	Language        *string      `json:"language,omitempty"`
	Timezone        *string      `json:"timezone,omitempty"`
	CrashReporting  NullableBool `json:"crash_reporting,omitempty"`
	UsageCollection NullableBool `json:"usage_collection,omitempty"`
	Birthday        *string      `json:"birthday,omitempty"`
	// `ds_auth` controls whether configured Directory Service users that are granted with Privileges are allowed to log in to the Web UI or use TrueNAS API.
	DsAuth *bool `json:"ds_auth,omitempty"`
	// `ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate` is not configured on boot, it is automatically created by the system.
	UiCertificate   NullableInt32 `json:"ui_certificate,omitempty"`
	RollbackTimeout NullableInt32 `json:"rollback_timeout,omitempty"`
	// HTTP connections will be aborted) or specify `ui_restart_delay` (in seconds) to automatically apply them after some small amount of time necessary you might need to receive the response for your settings update request.
	UiRestartDelay NullableInt32 `json:"ui_restart_delay,omitempty"`
}

// NewSystemGeneralUpdate0 instantiates a new SystemGeneralUpdate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemGeneralUpdate0() *SystemGeneralUpdate0 {
	this := SystemGeneralUpdate0{}
	return &this
}

// NewSystemGeneralUpdate0WithDefaults instantiates a new SystemGeneralUpdate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemGeneralUpdate0WithDefaults() *SystemGeneralUpdate0 {
	this := SystemGeneralUpdate0{}
	return &this
}

// GetUiHttpsport returns the UiHttpsport field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetUiHttpsport() int32 {
	if o == nil || IsNil(o.UiHttpsport) {
		var ret int32
		return ret
	}
	return *o.UiHttpsport
}

// GetUiHttpsportOk returns a tuple with the UiHttpsport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetUiHttpsportOk() (*int32, bool) {
	if o == nil || IsNil(o.UiHttpsport) {
		return nil, false
	}
	return o.UiHttpsport, true
}

// HasUiHttpsport returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiHttpsport() bool {
	if o != nil && !IsNil(o.UiHttpsport) {
		return true
	}

	return false
}

// SetUiHttpsport gets a reference to the given int32 and assigns it to the UiHttpsport field.
func (o *SystemGeneralUpdate0) SetUiHttpsport(v int32) {
	o.UiHttpsport = &v
}

// GetUiHttpsredirect returns the UiHttpsredirect field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetUiHttpsredirect() bool {
	if o == nil || IsNil(o.UiHttpsredirect) {
		var ret bool
		return ret
	}
	return *o.UiHttpsredirect
}

// GetUiHttpsredirectOk returns a tuple with the UiHttpsredirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetUiHttpsredirectOk() (*bool, bool) {
	if o == nil || IsNil(o.UiHttpsredirect) {
		return nil, false
	}
	return o.UiHttpsredirect, true
}

// HasUiHttpsredirect returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiHttpsredirect() bool {
	if o != nil && !IsNil(o.UiHttpsredirect) {
		return true
	}

	return false
}

// SetUiHttpsredirect gets a reference to the given bool and assigns it to the UiHttpsredirect field.
func (o *SystemGeneralUpdate0) SetUiHttpsredirect(v bool) {
	o.UiHttpsredirect = &v
}

// GetUiHttpsprotocols returns the UiHttpsprotocols field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetUiHttpsprotocols() []string {
	if o == nil || IsNil(o.UiHttpsprotocols) {
		var ret []string
		return ret
	}
	return o.UiHttpsprotocols
}

// GetUiHttpsprotocolsOk returns a tuple with the UiHttpsprotocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetUiHttpsprotocolsOk() ([]string, bool) {
	if o == nil || IsNil(o.UiHttpsprotocols) {
		return nil, false
	}
	return o.UiHttpsprotocols, true
}

// HasUiHttpsprotocols returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiHttpsprotocols() bool {
	if o != nil && !IsNil(o.UiHttpsprotocols) {
		return true
	}

	return false
}

// SetUiHttpsprotocols gets a reference to the given []string and assigns it to the UiHttpsprotocols field.
func (o *SystemGeneralUpdate0) SetUiHttpsprotocols(v []string) {
	o.UiHttpsprotocols = v
}

// GetUiPort returns the UiPort field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetUiPort() int32 {
	if o == nil || IsNil(o.UiPort) {
		var ret int32
		return ret
	}
	return *o.UiPort
}

// GetUiPortOk returns a tuple with the UiPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetUiPortOk() (*int32, bool) {
	if o == nil || IsNil(o.UiPort) {
		return nil, false
	}
	return o.UiPort, true
}

// HasUiPort returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiPort() bool {
	if o != nil && !IsNil(o.UiPort) {
		return true
	}

	return false
}

// SetUiPort gets a reference to the given int32 and assigns it to the UiPort field.
func (o *SystemGeneralUpdate0) SetUiPort(v int32) {
	o.UiPort = &v
}

// GetUiAddress returns the UiAddress field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetUiAddress() []string {
	if o == nil || IsNil(o.UiAddress) {
		var ret []string
		return ret
	}
	return o.UiAddress
}

// GetUiAddressOk returns a tuple with the UiAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetUiAddressOk() ([]string, bool) {
	if o == nil || IsNil(o.UiAddress) {
		return nil, false
	}
	return o.UiAddress, true
}

// HasUiAddress returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiAddress() bool {
	if o != nil && !IsNil(o.UiAddress) {
		return true
	}

	return false
}

// SetUiAddress gets a reference to the given []string and assigns it to the UiAddress field.
func (o *SystemGeneralUpdate0) SetUiAddress(v []string) {
	o.UiAddress = v
}

// GetUiV6address returns the UiV6address field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetUiV6address() []string {
	if o == nil || IsNil(o.UiV6address) {
		var ret []string
		return ret
	}
	return o.UiV6address
}

// GetUiV6addressOk returns a tuple with the UiV6address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetUiV6addressOk() ([]string, bool) {
	if o == nil || IsNil(o.UiV6address) {
		return nil, false
	}
	return o.UiV6address, true
}

// HasUiV6address returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiV6address() bool {
	if o != nil && !IsNil(o.UiV6address) {
		return true
	}

	return false
}

// SetUiV6address gets a reference to the given []string and assigns it to the UiV6address field.
func (o *SystemGeneralUpdate0) SetUiV6address(v []string) {
	o.UiV6address = v
}

// GetUiAllowlist returns the UiAllowlist field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetUiAllowlist() []string {
	if o == nil || IsNil(o.UiAllowlist) {
		var ret []string
		return ret
	}
	return o.UiAllowlist
}

// GetUiAllowlistOk returns a tuple with the UiAllowlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetUiAllowlistOk() ([]string, bool) {
	if o == nil || IsNil(o.UiAllowlist) {
		return nil, false
	}
	return o.UiAllowlist, true
}

// HasUiAllowlist returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiAllowlist() bool {
	if o != nil && !IsNil(o.UiAllowlist) {
		return true
	}

	return false
}

// SetUiAllowlist gets a reference to the given []string and assigns it to the UiAllowlist field.
func (o *SystemGeneralUpdate0) SetUiAllowlist(v []string) {
	o.UiAllowlist = v
}

// GetUiConsolemsg returns the UiConsolemsg field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetUiConsolemsg() bool {
	if o == nil || IsNil(o.UiConsolemsg) {
		var ret bool
		return ret
	}
	return *o.UiConsolemsg
}

// GetUiConsolemsgOk returns a tuple with the UiConsolemsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetUiConsolemsgOk() (*bool, bool) {
	if o == nil || IsNil(o.UiConsolemsg) {
		return nil, false
	}
	return o.UiConsolemsg, true
}

// HasUiConsolemsg returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiConsolemsg() bool {
	if o != nil && !IsNil(o.UiConsolemsg) {
		return true
	}

	return false
}

// SetUiConsolemsg gets a reference to the given bool and assigns it to the UiConsolemsg field.
func (o *SystemGeneralUpdate0) SetUiConsolemsg(v bool) {
	o.UiConsolemsg = &v
}

// GetUiXFrameOptions returns the UiXFrameOptions field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetUiXFrameOptions() string {
	if o == nil || IsNil(o.UiXFrameOptions) {
		var ret string
		return ret
	}
	return *o.UiXFrameOptions
}

// GetUiXFrameOptionsOk returns a tuple with the UiXFrameOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetUiXFrameOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.UiXFrameOptions) {
		return nil, false
	}
	return o.UiXFrameOptions, true
}

// HasUiXFrameOptions returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiXFrameOptions() bool {
	if o != nil && !IsNil(o.UiXFrameOptions) {
		return true
	}

	return false
}

// SetUiXFrameOptions gets a reference to the given string and assigns it to the UiXFrameOptions field.
func (o *SystemGeneralUpdate0) SetUiXFrameOptions(v string) {
	o.UiXFrameOptions = &v
}

// GetKbdmap returns the Kbdmap field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetKbdmap() string {
	if o == nil || IsNil(o.Kbdmap) {
		var ret string
		return ret
	}
	return *o.Kbdmap
}

// GetKbdmapOk returns a tuple with the Kbdmap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetKbdmapOk() (*string, bool) {
	if o == nil || IsNil(o.Kbdmap) {
		return nil, false
	}
	return o.Kbdmap, true
}

// HasKbdmap returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasKbdmap() bool {
	if o != nil && !IsNil(o.Kbdmap) {
		return true
	}

	return false
}

// SetKbdmap gets a reference to the given string and assigns it to the Kbdmap field.
func (o *SystemGeneralUpdate0) SetKbdmap(v string) {
	o.Kbdmap = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *SystemGeneralUpdate0) SetLanguage(v string) {
	o.Language = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *SystemGeneralUpdate0) SetTimezone(v string) {
	o.Timezone = &v
}

// GetCrashReporting returns the CrashReporting field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemGeneralUpdate0) GetCrashReporting() bool {
	if o == nil || IsNil(o.CrashReporting.Get()) {
		var ret bool
		return ret
	}
	return *o.CrashReporting.Get()
}

// GetCrashReportingOk returns a tuple with the CrashReporting field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemGeneralUpdate0) GetCrashReportingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CrashReporting.Get(), o.CrashReporting.IsSet()
}

// HasCrashReporting returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasCrashReporting() bool {
	if o != nil && o.CrashReporting.IsSet() {
		return true
	}

	return false
}

// SetCrashReporting gets a reference to the given NullableBool and assigns it to the CrashReporting field.
func (o *SystemGeneralUpdate0) SetCrashReporting(v bool) {
	o.CrashReporting.Set(&v)
}

// SetCrashReportingNil sets the value for CrashReporting to be an explicit nil
func (o *SystemGeneralUpdate0) SetCrashReportingNil() {
	o.CrashReporting.Set(nil)
}

// UnsetCrashReporting ensures that no value is present for CrashReporting, not even an explicit nil
func (o *SystemGeneralUpdate0) UnsetCrashReporting() {
	o.CrashReporting.Unset()
}

// GetUsageCollection returns the UsageCollection field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemGeneralUpdate0) GetUsageCollection() bool {
	if o == nil || IsNil(o.UsageCollection.Get()) {
		var ret bool
		return ret
	}
	return *o.UsageCollection.Get()
}

// GetUsageCollectionOk returns a tuple with the UsageCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemGeneralUpdate0) GetUsageCollectionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UsageCollection.Get(), o.UsageCollection.IsSet()
}

// HasUsageCollection returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUsageCollection() bool {
	if o != nil && o.UsageCollection.IsSet() {
		return true
	}

	return false
}

// SetUsageCollection gets a reference to the given NullableBool and assigns it to the UsageCollection field.
func (o *SystemGeneralUpdate0) SetUsageCollection(v bool) {
	o.UsageCollection.Set(&v)
}

// SetUsageCollectionNil sets the value for UsageCollection to be an explicit nil
func (o *SystemGeneralUpdate0) SetUsageCollectionNil() {
	o.UsageCollection.Set(nil)
}

// UnsetUsageCollection ensures that no value is present for UsageCollection, not even an explicit nil
func (o *SystemGeneralUpdate0) UnsetUsageCollection() {
	o.UsageCollection.Unset()
}

// GetBirthday returns the Birthday field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetBirthday() string {
	if o == nil || IsNil(o.Birthday) {
		var ret string
		return ret
	}
	return *o.Birthday
}

// GetBirthdayOk returns a tuple with the Birthday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetBirthdayOk() (*string, bool) {
	if o == nil || IsNil(o.Birthday) {
		return nil, false
	}
	return o.Birthday, true
}

// HasBirthday returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasBirthday() bool {
	if o != nil && !IsNil(o.Birthday) {
		return true
	}

	return false
}

// SetBirthday gets a reference to the given string and assigns it to the Birthday field.
func (o *SystemGeneralUpdate0) SetBirthday(v string) {
	o.Birthday = &v
}

// GetDsAuth returns the DsAuth field value if set, zero value otherwise.
func (o *SystemGeneralUpdate0) GetDsAuth() bool {
	if o == nil || IsNil(o.DsAuth) {
		var ret bool
		return ret
	}
	return *o.DsAuth
}

// GetDsAuthOk returns a tuple with the DsAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGeneralUpdate0) GetDsAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.DsAuth) {
		return nil, false
	}
	return o.DsAuth, true
}

// HasDsAuth returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasDsAuth() bool {
	if o != nil && !IsNil(o.DsAuth) {
		return true
	}

	return false
}

// SetDsAuth gets a reference to the given bool and assigns it to the DsAuth field.
func (o *SystemGeneralUpdate0) SetDsAuth(v bool) {
	o.DsAuth = &v
}

// GetUiCertificate returns the UiCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemGeneralUpdate0) GetUiCertificate() int32 {
	if o == nil || IsNil(o.UiCertificate.Get()) {
		var ret int32
		return ret
	}
	return *o.UiCertificate.Get()
}

// GetUiCertificateOk returns a tuple with the UiCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemGeneralUpdate0) GetUiCertificateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UiCertificate.Get(), o.UiCertificate.IsSet()
}

// HasUiCertificate returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiCertificate() bool {
	if o != nil && o.UiCertificate.IsSet() {
		return true
	}

	return false
}

// SetUiCertificate gets a reference to the given NullableInt32 and assigns it to the UiCertificate field.
func (o *SystemGeneralUpdate0) SetUiCertificate(v int32) {
	o.UiCertificate.Set(&v)
}

// SetUiCertificateNil sets the value for UiCertificate to be an explicit nil
func (o *SystemGeneralUpdate0) SetUiCertificateNil() {
	o.UiCertificate.Set(nil)
}

// UnsetUiCertificate ensures that no value is present for UiCertificate, not even an explicit nil
func (o *SystemGeneralUpdate0) UnsetUiCertificate() {
	o.UiCertificate.Unset()
}

// GetRollbackTimeout returns the RollbackTimeout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemGeneralUpdate0) GetRollbackTimeout() int32 {
	if o == nil || IsNil(o.RollbackTimeout.Get()) {
		var ret int32
		return ret
	}
	return *o.RollbackTimeout.Get()
}

// GetRollbackTimeoutOk returns a tuple with the RollbackTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemGeneralUpdate0) GetRollbackTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RollbackTimeout.Get(), o.RollbackTimeout.IsSet()
}

// HasRollbackTimeout returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasRollbackTimeout() bool {
	if o != nil && o.RollbackTimeout.IsSet() {
		return true
	}

	return false
}

// SetRollbackTimeout gets a reference to the given NullableInt32 and assigns it to the RollbackTimeout field.
func (o *SystemGeneralUpdate0) SetRollbackTimeout(v int32) {
	o.RollbackTimeout.Set(&v)
}

// SetRollbackTimeoutNil sets the value for RollbackTimeout to be an explicit nil
func (o *SystemGeneralUpdate0) SetRollbackTimeoutNil() {
	o.RollbackTimeout.Set(nil)
}

// UnsetRollbackTimeout ensures that no value is present for RollbackTimeout, not even an explicit nil
func (o *SystemGeneralUpdate0) UnsetRollbackTimeout() {
	o.RollbackTimeout.Unset()
}

// GetUiRestartDelay returns the UiRestartDelay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemGeneralUpdate0) GetUiRestartDelay() int32 {
	if o == nil || IsNil(o.UiRestartDelay.Get()) {
		var ret int32
		return ret
	}
	return *o.UiRestartDelay.Get()
}

// GetUiRestartDelayOk returns a tuple with the UiRestartDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemGeneralUpdate0) GetUiRestartDelayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UiRestartDelay.Get(), o.UiRestartDelay.IsSet()
}

// HasUiRestartDelay returns a boolean if a field has been set.
func (o *SystemGeneralUpdate0) HasUiRestartDelay() bool {
	if o != nil && o.UiRestartDelay.IsSet() {
		return true
	}

	return false
}

// SetUiRestartDelay gets a reference to the given NullableInt32 and assigns it to the UiRestartDelay field.
func (o *SystemGeneralUpdate0) SetUiRestartDelay(v int32) {
	o.UiRestartDelay.Set(&v)
}

// SetUiRestartDelayNil sets the value for UiRestartDelay to be an explicit nil
func (o *SystemGeneralUpdate0) SetUiRestartDelayNil() {
	o.UiRestartDelay.Set(nil)
}

// UnsetUiRestartDelay ensures that no value is present for UiRestartDelay, not even an explicit nil
func (o *SystemGeneralUpdate0) UnsetUiRestartDelay() {
	o.UiRestartDelay.Unset()
}

func (o SystemGeneralUpdate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemGeneralUpdate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UiHttpsport) {
		toSerialize["ui_httpsport"] = o.UiHttpsport
	}
	if !IsNil(o.UiHttpsredirect) {
		toSerialize["ui_httpsredirect"] = o.UiHttpsredirect
	}
	if !IsNil(o.UiHttpsprotocols) {
		toSerialize["ui_httpsprotocols"] = o.UiHttpsprotocols
	}
	if !IsNil(o.UiPort) {
		toSerialize["ui_port"] = o.UiPort
	}
	if !IsNil(o.UiAddress) {
		toSerialize["ui_address"] = o.UiAddress
	}
	if !IsNil(o.UiV6address) {
		toSerialize["ui_v6address"] = o.UiV6address
	}
	if !IsNil(o.UiAllowlist) {
		toSerialize["ui_allowlist"] = o.UiAllowlist
	}
	if !IsNil(o.UiConsolemsg) {
		toSerialize["ui_consolemsg"] = o.UiConsolemsg
	}
	if !IsNil(o.UiXFrameOptions) {
		toSerialize["ui_x_frame_options"] = o.UiXFrameOptions
	}
	if !IsNil(o.Kbdmap) {
		toSerialize["kbdmap"] = o.Kbdmap
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if o.CrashReporting.IsSet() {
		toSerialize["crash_reporting"] = o.CrashReporting.Get()
	}
	if o.UsageCollection.IsSet() {
		toSerialize["usage_collection"] = o.UsageCollection.Get()
	}
	if !IsNil(o.Birthday) {
		toSerialize["birthday"] = o.Birthday
	}
	if !IsNil(o.DsAuth) {
		toSerialize["ds_auth"] = o.DsAuth
	}
	if o.UiCertificate.IsSet() {
		toSerialize["ui_certificate"] = o.UiCertificate.Get()
	}
	if o.RollbackTimeout.IsSet() {
		toSerialize["rollback_timeout"] = o.RollbackTimeout.Get()
	}
	if o.UiRestartDelay.IsSet() {
		toSerialize["ui_restart_delay"] = o.UiRestartDelay.Get()
	}
	return toSerialize, nil
}

type NullableSystemGeneralUpdate0 struct {
	value *SystemGeneralUpdate0
	isSet bool
}

func (v NullableSystemGeneralUpdate0) Get() *SystemGeneralUpdate0 {
	return v.value
}

func (v *NullableSystemGeneralUpdate0) Set(val *SystemGeneralUpdate0) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemGeneralUpdate0) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemGeneralUpdate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemGeneralUpdate0(val *SystemGeneralUpdate0) *NullableSystemGeneralUpdate0 {
	return &NullableSystemGeneralUpdate0{value: val, isSet: true}
}

func (v NullableSystemGeneralUpdate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemGeneralUpdate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
