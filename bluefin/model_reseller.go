/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the Reseller type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Reseller{}

// Reseller struct for Reseller
type Reseller struct {
	Company     *string `json:"company,omitempty"`
	FirstName   *string `json:"first_name,omitempty"`
	LastName    *string `json:"last_name,omitempty"`
	Title       *string `json:"title,omitempty"`
	OfficePhone *string `json:"office_phone,omitempty"`
	MobilePhone *string `json:"mobile_phone,omitempty"`
}

// NewReseller instantiates a new Reseller object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReseller() *Reseller {
	this := Reseller{}
	return &this
}

// NewResellerWithDefaults instantiates a new Reseller object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResellerWithDefaults() *Reseller {
	this := Reseller{}
	return &this
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *Reseller) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reseller) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *Reseller) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *Reseller) SetCompany(v string) {
	o.Company = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *Reseller) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reseller) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *Reseller) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *Reseller) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *Reseller) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reseller) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *Reseller) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *Reseller) SetLastName(v string) {
	o.LastName = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Reseller) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reseller) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Reseller) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Reseller) SetTitle(v string) {
	o.Title = &v
}

// GetOfficePhone returns the OfficePhone field value if set, zero value otherwise.
func (o *Reseller) GetOfficePhone() string {
	if o == nil || IsNil(o.OfficePhone) {
		var ret string
		return ret
	}
	return *o.OfficePhone
}

// GetOfficePhoneOk returns a tuple with the OfficePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reseller) GetOfficePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.OfficePhone) {
		return nil, false
	}
	return o.OfficePhone, true
}

// HasOfficePhone returns a boolean if a field has been set.
func (o *Reseller) HasOfficePhone() bool {
	if o != nil && !IsNil(o.OfficePhone) {
		return true
	}

	return false
}

// SetOfficePhone gets a reference to the given string and assigns it to the OfficePhone field.
func (o *Reseller) SetOfficePhone(v string) {
	o.OfficePhone = &v
}

// GetMobilePhone returns the MobilePhone field value if set, zero value otherwise.
func (o *Reseller) GetMobilePhone() string {
	if o == nil || IsNil(o.MobilePhone) {
		var ret string
		return ret
	}
	return *o.MobilePhone
}

// GetMobilePhoneOk returns a tuple with the MobilePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reseller) GetMobilePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.MobilePhone) {
		return nil, false
	}
	return o.MobilePhone, true
}

// HasMobilePhone returns a boolean if a field has been set.
func (o *Reseller) HasMobilePhone() bool {
	if o != nil && !IsNil(o.MobilePhone) {
		return true
	}

	return false
}

// SetMobilePhone gets a reference to the given string and assigns it to the MobilePhone field.
func (o *Reseller) SetMobilePhone(v string) {
	o.MobilePhone = &v
}

func (o Reseller) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Reseller) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.OfficePhone) {
		toSerialize["office_phone"] = o.OfficePhone
	}
	if !IsNil(o.MobilePhone) {
		toSerialize["mobile_phone"] = o.MobilePhone
	}
	return toSerialize, nil
}

type NullableReseller struct {
	value *Reseller
	isSet bool
}

func (v NullableReseller) Get() *Reseller {
	return v.value
}

func (v *NullableReseller) Set(val *Reseller) {
	v.value = val
	v.isSet = true
}

func (v NullableReseller) IsSet() bool {
	return v.isSet
}

func (v *NullableReseller) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReseller(val *Reseller) *NullableReseller {
	return &NullableReseller{value: val, isSet: true}
}

func (v NullableReseller) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReseller) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
