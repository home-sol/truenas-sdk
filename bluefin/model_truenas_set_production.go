/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the TruenasSetProduction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TruenasSetProduction{}

// TruenasSetProduction struct for TruenasSetProduction
type TruenasSetProduction struct {
	Production           *bool `json:"production,omitempty"`
	AttachDebug          *bool `json:"attach_debug,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TruenasSetProduction TruenasSetProduction

// NewTruenasSetProduction instantiates a new TruenasSetProduction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTruenasSetProduction() *TruenasSetProduction {
	this := TruenasSetProduction{}
	var attachDebug bool
	this.AttachDebug = &attachDebug
	return &this
}

// NewTruenasSetProductionWithDefaults instantiates a new TruenasSetProduction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTruenasSetProductionWithDefaults() *TruenasSetProduction {
	this := TruenasSetProduction{}
	var attachDebug bool
	this.AttachDebug = &attachDebug
	return &this
}

// GetProduction returns the Production field value if set, zero value otherwise.
func (o *TruenasSetProduction) GetProduction() bool {
	if o == nil || IsNil(o.Production) {
		var ret bool
		return ret
	}
	return *o.Production
}

// GetProductionOk returns a tuple with the Production field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasSetProduction) GetProductionOk() (*bool, bool) {
	if o == nil || IsNil(o.Production) {
		return nil, false
	}
	return o.Production, true
}

// HasProduction returns a boolean if a field has been set.
func (o *TruenasSetProduction) HasProduction() bool {
	if o != nil && !IsNil(o.Production) {
		return true
	}

	return false
}

// SetProduction gets a reference to the given bool and assigns it to the Production field.
func (o *TruenasSetProduction) SetProduction(v bool) {
	o.Production = &v
}

// GetAttachDebug returns the AttachDebug field value if set, zero value otherwise.
func (o *TruenasSetProduction) GetAttachDebug() bool {
	if o == nil || IsNil(o.AttachDebug) {
		var ret bool
		return ret
	}
	return *o.AttachDebug
}

// GetAttachDebugOk returns a tuple with the AttachDebug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruenasSetProduction) GetAttachDebugOk() (*bool, bool) {
	if o == nil || IsNil(o.AttachDebug) {
		return nil, false
	}
	return o.AttachDebug, true
}

// HasAttachDebug returns a boolean if a field has been set.
func (o *TruenasSetProduction) HasAttachDebug() bool {
	if o != nil && !IsNil(o.AttachDebug) {
		return true
	}

	return false
}

// SetAttachDebug gets a reference to the given bool and assigns it to the AttachDebug field.
func (o *TruenasSetProduction) SetAttachDebug(v bool) {
	o.AttachDebug = &v
}

func (o TruenasSetProduction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TruenasSetProduction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Production) {
		toSerialize["production"] = o.Production
	}
	if !IsNil(o.AttachDebug) {
		toSerialize["attach_debug"] = o.AttachDebug
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TruenasSetProduction) UnmarshalJSON(bytes []byte) (err error) {
	varTruenasSetProduction := _TruenasSetProduction{}

	if err = json.Unmarshal(bytes, &varTruenasSetProduction); err == nil {
		*o = TruenasSetProduction(varTruenasSetProduction)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "production")
		delete(additionalProperties, "attach_debug")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTruenasSetProduction struct {
	value *TruenasSetProduction
	isSet bool
}

func (v NullableTruenasSetProduction) Get() *TruenasSetProduction {
	return v.value
}

func (v *NullableTruenasSetProduction) Set(val *TruenasSetProduction) {
	v.value = val
	v.isSet = true
}

func (v NullableTruenasSetProduction) IsSet() bool {
	return v.isSet
}

func (v *NullableTruenasSetProduction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTruenasSetProduction(val *TruenasSetProduction) *NullableTruenasSetProduction {
	return &NullableTruenasSetProduction{value: val, isSet: true}
}

func (v NullableTruenasSetProduction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTruenasSetProduction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
