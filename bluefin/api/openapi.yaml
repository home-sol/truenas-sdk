openapi: 3.0.0
info:
  title: TrueNAS RESTful API
  version: v2.0
servers:
- url: https://192.168.40.2/api/v2.0
security:
- basic: []
paths:
  /core/bulk:
    post:
      description: |-
        Will sequentially call `method` with arguments from the `params` list. For example, running

            call("core.bulk", "zfs.snapshot.delete", [["tank@snap-1", true], ["tank@snap-2", false]])

        will call

            call("zfs.snapshot.delete", "tank@snap-1", true)
            call("zfs.snapshot.delete", "tank@snap-2", false)

        If the first call fails and the seconds succeeds (returning `true`), the result of the overall call will be:

            [
                {"result": null, "error": "Error deleting snapshot"},
                {"result": true, "error": null}
            ]

        Important note: the execution status of `core.bulk` will always be a `SUCCESS` (unless an unlikely internal
        error occurs). Caller must check for individual call results to ensure the absence of any call errors.

        `description` contains format string for job progress (e.g. "Deleting snapshot {0[dataset]}@{0[name]}")
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_bulk'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/debug:
    post:
      description: |-
        Setup middlewared for remote debugging.

        engines:
          - PTVS: Python Visual Studio
          - PYDEV: Python Dev (Eclipse/PyCharm)
          - REMOTE_PDB: Remote vanilla PDB (over TCP sockets)

        options:
          - secret: password for PTVS
          - host: required for PYDEV, hostname of local computer (developer workstation)
          - local_path: required for PYDEV, path for middlewared source in local computer
                        (e.g. /home/user/freenas/src/middlewared/middlewared
          - threaded: run debugger in a new thread instead of event loop
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_debug'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/debug_mode_enabled:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/download:
    post:
      description: |-
        Core helper to call a job marked for download.

        Non-`buffered` downloads will allow job to write to pipe as soon as download URL is requested, job will stay
        blocked meanwhile. `buffered` downloads must wait for job to complete before requesting download URL, job's
        pipe output will be buffered to ramfs.

        Returns the job id and the URL for download.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_download'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/get_events:
    get:
      description: Returns metadata for every possible event emitted from websocket
        server.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/get_jobs:
    get:
      description: |-
        Get the long running jobs.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/get_websocket_messages:
    get:
      description: Retrieve last 1000 incoming/outgoing message(s) logged over websocket.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/job_abort:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_job_abort_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/job_update:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_job_update'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/job_wait:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_job_wait_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/ping:
    get:
      description: |-
        Utility method which just returns "pong".
        Can be used to keep connection/authtoken alive instead of using
        "ping" protocol message.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/ping_remote:
    post:
      description: |-
        Method that will send an ICMP echo request to "hostname"
        and will wait up to "timeout" for a reply.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_ping_remote_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/resize_shell:
    post:
      description: Resize terminal session (/websocket/shell) to cols x rows
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_resize_shell'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/sessions:
    get:
      description: |-
        Get currently open websocket sessions.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /core/set_debug_mode:
    post:
      description: Set `debug_mode` for middleware.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/core_set_debug_mode_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - core
  /acme/dns/authenticator:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - acme.dns.authenticator
    post:
      description: |+
        Create a DNS Authenticator

        Create a specific DNS Authenticator containing required authentication details for the said
        provider to successfully connect with it

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acme_dns_authenticator_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - acme.dns.authenticator
  /acme/dns/authenticator/id/{id}:
    delete:
      description: |+
        Delete DNS Authenticator of `id`

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - acme.dns.authenticator
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - acme.dns.authenticator
    put:
      description: |+
        Update DNS Authenticator of `id`

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - acme.dns.authenticator
  /acme/dns/authenticator/authenticator_schemas:
    get:
      description: |-
        Get the schemas for all DNS providers we support for ACME DNS Challenge and the respective attributes
        required for connecting to them while validating a DNS Challenge
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - acme.dns.authenticator
  /acme/dns/authenticator/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acme_dns_authenticator_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - acme.dns.authenticator
  /activedirectory:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - activedirectory
    put:
      description: "Update active directory configuration.\n`domainname` full DNS\
        \ domain name of the Active Directory domain.\n\n`bindname` username used\
        \ to perform the intial domain join.\n\n`bindpw` password used to perform\
        \ the initial domain join. User-\nprovided credentials are used to obtain\
        \ a kerberos ticket, which\nis used to perform the actual domain join.\n\n\
        `verbose_logging` increase logging during the domain join process.\n\n`use_default_domain`\
        \ controls whether domain users and groups have\nthe pre-windows 2000 domain\
        \ name prepended to the user account. When\nenabled, the user appears as \"\
        administrator\" rather than\n\"EXAMPLE\administrator\"\n\n`allow_trusted_doms`\
        \ enable support for trusted domains. If this\nparameter is enabled, then\
        \ separate idmap backends _must_ be configured\nfor each trusted domain, and\
        \ the idmap cache should be cleared.\n\n`allow_dns_updates` during the domain\
        \ join process, automatically\ngenerate DNS entries in the AD domain for the\
        \ NAS. If this is disabled,\nthen a domain administrator must manually add\
        \ appropriate DNS entries\nfor the NAS. This parameter is recommended for\
        \ TrueNAS HA servers.\n\n`disable_freenas_cache` disables active caching of\
        \ AD users and groups.\nWhen disabled, only users cached in winbind's internal\
        \ cache are\nvisible in GUI dropdowns. Disabling active caching is recommended\n\
        in environments with a large amount of users.\n\n`site` AD site of which the\
        \ NAS is a member. This parameter is auto-\ndetected during the domain join\
        \ process. If no AD site is configured\nfor the subnet in which the NAS is\
        \ configured, then this parameter\nappears as 'Default-First-Site-Name'. Auto-detection\
        \ is only performed\nduring the initial domain join.\n\n`kerberos_realm` in\
        \ which the server is located. This parameter is\nautomatically populated\
        \ during the initial domain join. If the NAS has\nan AD site configured and\
        \ that site has multiple kerberos servers, then\nthe kerberos realm is automatically\
        \ updated with a site-specific\nconfiguration to use those servers. Auto-detection\
        \ is only performed\nduring initial domain join.\n\n`kerberos_principal` kerberos\
        \ principal to use for AD-related\noperations outside of Samba. After intial\
        \ domain join, this field is\nupdated with the kerberos principal associated\
        \ with the AD machine\naccount for the NAS.\n\n`nss_info` controls how Winbind\
        \ retrieves Name Service Information to\nconstruct a user's home directory\
        \ and login shell. This parameter\nis only effective if the Active Directory\
        \ Domain Controller supports\nthe Microsoft Services for Unix (SFU) LDAP schema.\n\
        \n`timeout` timeout value for winbind-related operations. This value may\n\
        need to be increased in  environments with high latencies for\ncommunications\
        \ with domain controllers or a large number of domain\ncontrollers. Lowering\
        \ the value may cause status checks to fail.\n\n`dns_timeout` timeout value\
        \ for DNS queries during the initial domain\njoin. This value is also set\
        \ as the NETWORK_TIMEOUT in the ldap config\nfile.\n\n`createcomputer` Active\
        \ Directory Organizational Unit in which new\ncomputer accounts are created.\n\
        \nThe OU string is read from top to bottom without RDNs. Slashes (\"/\")\n\
        are used as delimiters, like `Computers/Servers/NAS`. The backslash\n(\"\\\
        \") is used to escape characters but not as a separator. Backslashes\nare\
        \ interpreted at multiple levels and might require doubling or even\nquadrupling\
        \ to take effect.\n\nWhen this field is blank, new computer accounts are created\
        \ in the\nActive Directory default OU.\n\nThe Active Directory service is\
        \ started after a configuration\nupdate if the service was initially disabled,\
        \ and the updated\nconfiguration sets `enable` to `True`. The Active Directory\n\
        service is stopped if `enable` is changed to `False`. If the\nconfiguration\
        \ is updated, but the initial `enable` state is `True`, and\nremains unchanged,\
        \ then the samba server is only restarted.\n\nDuring the domain join, a kerberos\
        \ keytab for the newly-created AD\nmachine account is generated. It is used\
        \ for all future\nLDAP / AD interaction and the user-provided credentials\
        \ are removed."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/activedirectory_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - activedirectory
  /activedirectory/domain_info:
    post:
      description: |-
        Returns the following information about the currently joined domain:

        `LDAP server` IP address of current LDAP server to which TrueNAS is connected.

        `LDAP server name` DNS name of LDAP server to which TrueNAS is connected

        `Realm` Kerberos realm

        `LDAP port`

        `Server time` timestamp.

        `KDC server` Kerberos KDC to which TrueNAS is connected

        `Server time offset` current time offset from DC.

        `Last machine account password change`. timestamp
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/activedirectory_domain_info_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - activedirectory
  /activedirectory/get_state:
    get:
      description: |-
        Wrapper function for 'directoryservices.get_state'. Returns only the state of the
        Active Directory service.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - activedirectory
  /activedirectory/leave:
    post:
      description: |-
        Leave Active Directory domain. This will remove computer
        object from AD and clear relevant configuration data from
        the NAS.
        This requires credentials for appropriately-privileged user.
        Credentials are used to obtain a kerberos ticket, which is
        used to perform the actual removal from the domain.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/activedirectory_leave_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - activedirectory
  /activedirectory/nss_info_choices:
    get:
      description: Returns list of available LDAP schema choices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - activedirectory
  /activedirectory/started:
    get:
      description: |-
        Issue a no-effect command to our DC. This checks if our secure channel connection to our
        domain controller is still alive. It has much less impact than wbinfo -t.
        Default winbind request timeout is 60 seconds, and can be adjusted by the smb4.conf parameter
        'winbind request timeout ='
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - activedirectory
  /alert/dismiss:
    post:
      description: Dismiss `id` alert.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alert_dismiss_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alert
  /alert/list:
    get:
      description: List all types of alerts including active/dismissed currently in
        the system.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alert
  /alert/list_categories:
    get:
      description: List all types of alerts which the system can issue.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alert
  /alert/list_policies:
    get:
      description: List all alert policies which indicate the frequency of the alerts.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alert
  /alert/restore:
    post:
      description: Restore `id` alert which had been dismissed.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alert_restore_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alert
  /alertclasses:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alertclasses
    put:
      description: |+
        Update default Alert settings.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alertclasses_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alertclasses
  /alertservice:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alertservice
    post:
      description: |+
        Create an Alert Service of specified `type`.

        If `enabled`, it sends alerts to the configured `type` of Alert Service.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alertservice_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alertservice
  /alertservice/id/{id}:
    delete:
      description: Delete Alert Service of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alertservice
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alertservice
    put:
      description: Update Alert Service of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alertservice
  /alertservice/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alertservice_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alertservice
  /alertservice/list_types:
    get:
      description: List all types of supported Alert services which can be configured
        with the system.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alertservice
  /alertservice/test:
    post:
      description: |+
        Send a test alert using `type` of Alert Service.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alertservice_test_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - alertservice
  /api_key:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - api_key
    post:
      description: |-
        Creates API Key.

        `name` is a user-readable name for key.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_key_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - api_key
  /api_key/id/{id}:
    delete:
      description: Delete API Key `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - api_key
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - api_key
    put:
      description: |-
        Update API Key `id`.

        Specify `reset: true` to reset this API Key.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - api_key
  /api_key/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_key_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - api_key
  /auth/check_password:
    post:
      description: Verify username and password
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_check_password'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - auth
  /auth/check_user:
    post:
      description: Verify username and password
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_check_user'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - auth
  /auth/generate_token:
    post:
      description: |-
        Generate a token to be used for authentication.

        `ttl` stands for Time To Live, in seconds. The token will be invalidated if the connection
        has been inactive for a time greater than this.

        `attrs` is a general purpose object/dictionary to hold information about the token.

        `match_origin` will only allow using this token from the same IP address or with the same user UID.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_generate_token'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - auth
  /auth/terminate_session:
    post:
      description: Terminates session `id`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_terminate_session_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - auth
  /auth/two_factor_auth:
    get:
      description: Returns true if two factor authorization is required for authorizing
        user's login.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - auth
  /auth/twofactor:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - auth.twofactor
    put:
      description: |-
        `otp_digits` represents number of allowed digits in the OTP.

        `window` extends the validity to `window` many counter ticks before and after the current one.

        `interval` is time duration in seconds specifying OTP expiration time from it's creation time.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_twofactor_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - auth.twofactor
  /auth/twofactor/provisioning_uri:
    get:
      description: |-
        Returns the provisioning URI for the OTP. This can then be encoded in a QR Code and used to
        provision an OTP app like Google Authenticator.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - auth.twofactor
  /auth/twofactor/renew_secret:
    get:
      description: Generates a new secret for Two Factor Authentication. Returns boolean
        true on success.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - auth.twofactor
  /auth/twofactor/verify:
    post:
      description: Returns boolean true if provided `token` is successfully authenticated.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_twofactor_verify_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - auth.twofactor
  /boot/attach:
    post:
      description: |-
        Attach a disk to the boot pool, turning a stripe into a mirror.

        `expand` option will determine whether the new disk partition will be
                 the maximum available or the same size as the current disk.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boot_attach'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - boot
  /boot/detach:
    post:
      description: Detach given `dev` from boot pool.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boot_detach_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - boot
  /boot/get_disks:
    get:
      description: Returns disks of the boot pool.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - boot
  /boot/get_scrub_interval:
    get:
      description: Get Automatic Scrub Interval value in days.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - boot
  /boot/get_state:
    get:
      description: "Returns the current state of the boot pool, including all vdevs,\
        \ properties and datasets."
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - boot
  /boot/replace:
    post:
      description: Replace device `label` on boot pool with `dev`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boot_replace'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - boot
  /boot/scrub:
    get:
      description: Scrub on boot pool.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - boot
  /boot/set_scrub_interval:
    post:
      description: Set Automatic Scrub Interval value in days.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boot_set_scrub_interval_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - boot
  /bootenv:
    get:
      description: |-
        Query all Boot Environments with `query-filters` and `query-options`.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - bootenv
    post:
      description: |-
        Create a new boot environment using `name`.

        If a new boot environment is desired which is a clone of another boot environment, `source` can be passed.
        Then, a new boot environment of `name` is created using boot environment `source` by cloning it.

        Ensure that `name` and `source` are valid boot environment names.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bootenv_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - bootenv
  /bootenv/id/{id}:
    delete:
      description: Delete `id` boot environment. This removes the clone from the system.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - bootenv
    get:
      description: |-
        Query all Boot Environments with `query-filters` and `query-options`.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - bootenv
    put:
      description: Update `id` boot environment name with a new provided valid `name`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - bootenv
  /bootenv/id/{id}/activate:
    post:
      description: Activates boot environment `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - bootenv
  /bootenv/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bootenv_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - bootenv
  /bootenv/id/{id}/set_attribute:
    post:
      description: |-
        Sets attributes boot environment `id`.

        Currently only `keep` attribute is allowed.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - bootenv
  /catalog:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
    post:
      description: '`catalog_create.preferred_trains` specifies trains which will
        be displayed in the UI directly for a user.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/catalog_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
  /catalog/id/{id}:
    delete:
      description: ""
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
    put:
      description: ""
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
  /catalog/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/catalog_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
  /catalog/get_item_details:
    post:
      description: Retrieve information of `item_name` `item_version_details.catalog`
        catalog item.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/catalog_get_item_details'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
  /catalog/items:
    post:
      description: |-
        Retrieve item details for `label` catalog.

        `options.cache` is a boolean which when set will try to get items details for `label` catalog from cache
        if available.

        `options.cache_only` is a boolean which when set will force usage of cache only for retrieving catalog
        information. If the content for the catalog in question is not cached, no content would be returned. If
        `options.cache` is unset, this attribute has no effect.

        `options.retrieve_all_trains` is a boolean value which when set will retrieve information for all the trains
        present in the catalog ( it is set by default ).

        `options.trains` is a list of train name(s) which will allow selective filtering to retrieve only information
        of desired trains in a catalog. If `options.retrieve_all_trains` is set, it has precedence over `options.train`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/catalog_items'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
  /catalog/sync:
    post:
      description: Sync `label` catalog to retrieve latest changes from upstream.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/catalog_sync_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
  /catalog/sync_all:
    get:
      description: Refresh all available catalogs from upstream.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
  /catalog/validate:
    post:
      description: |-
        Validates `label` catalog format which includes validating trains and applications with their versions.

        This does not test if an app version is valid in terms of kubernetes resources but instead ensures it has
        the correct format and files necessary for TrueNAS to use it.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/catalog_validate_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - catalog
  /certificate:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
    post:
      description: |+
        Create a new Certificate

        Certificates are classified under following types and the necessary keywords to be passed
        for `create_type` attribute to create the respective type of certificate

        1) Internal Certificate                 -  CERTIFICATE_CREATE_INTERNAL

        2) Imported Certificate                 -  CERTIFICATE_CREATE_IMPORTED

        3) Certificate Signing Request          -  CERTIFICATE_CREATE_CSR

        4) Imported Certificate Signing Request -  CERTIFICATE_CREATE_IMPORTED_CSR

        5) ACME Certificate                     -  CERTIFICATE_CREATE_ACME

        By default, created certs use RSA keys. If an Elliptic Curve Key is desired, it can be specified with the
        `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to
        using "BrainpoolP384R1" curve.

        A type is selected by the Certificate Service based on `create_type`. The rest of the values in `data` are
        validated accordingly and finally a certificate is made based on the selected type.

        `cert_extensions` can be specified to set X509v3 extensions.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificate_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
  /certificate/id/{id}:
    delete:
      description: |+
        Delete certificate of `id`.

        If the certificate is an ACME based certificate, certificate service will try to
        revoke the certificate by updating it's status with the ACME server, if it fails an exception is raised
        and the certificate is not deleted from the system. However, if `force` is set to True, certificate is deleted
        from the system even if some error occurred while revoking the certificate with the ACME Server

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
    put:
      description: |+
        Update certificate of `id`

        Only name and revoked attribute can be updated.

        When `revoked` is enabled, the specified cert `id` is revoked and if it belongs to a CA chain which
        exists on this system, its serial number is added to the CA's certificate revocation list.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
  /certificate/acme_server_choices:
    get:
      description: |-
        Dictionary of popular ACME Servers with their directory URI endpoints which we display automatically
        in UI
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
  /certificate/certificate_signing_requests_profiles:
    get:
      description: |-
        Returns a dictionary of predefined options for specific use cases i.e openvpn client/server
        configurations which can be used for creating certificate signing requests.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
  /certificate/country_choices:
    get:
      description: Returns country choices for creating a certificate/csr.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
  /certificate/ec_curve_choices:
    get:
      description: Dictionary of supported EC curves.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
  /certificate/extended_key_usage_choices:
    get:
      description: Dictionary of choices for `ExtendedKeyUsage` extension which can
        be passed over to `usages` attribute.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
  /certificate/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificate_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
  /certificate/key_type_choices:
    get:
      description: Dictionary of supported key types for certificates.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
  /certificate/profiles:
    get:
      description: |-
        Returns a dictionary of predefined options for specific use cases i.e openvpn client/server
        configurations which can be used for creating certificates.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificate
  /certificateauthority:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificateauthority
    post:
      description: |+
        Create a new Certificate Authority

        Certificate Authorities are classified under following types with the necessary keywords to be passed
        for `create_type` attribute to create the respective type of certificate authority

        1) Internal Certificate Authority       -  CA_CREATE_INTERNAL

        2) Imported Certificate Authority       -  CA_CREATE_IMPORTED

        3) Intermediate Certificate Authority   -  CA_CREATE_INTERMEDIATE

        Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be
        specified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic
        Curve Key, default to using "BrainpoolP384R1" curve.

        A type is selected by the Certificate Authority Service based on `create_type`. The rest of the values
        are validated accordingly and finally a certificate is made based on the selected type.

        `cert_extensions` can be specified to set X509v3 extensions.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificateauthority_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificateauthority
  /certificateauthority/id/{id}:
    delete:
      description: |+
        Delete a Certificate Authority of `id`

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificateauthority
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificateauthority
    put:
      description: |+
        Update Certificate Authority of `id`

        Only `name` and `revoked` attribute can be updated.

        If `revoked` is enabled, the CA and its complete chain is marked as revoked and added to the CA's
        certificate revocation list.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificateauthority
  /certificateauthority/ca_sign_csr:
    post:
      description: |+
        Sign CSR by Certificate Authority of `ca_id`

        Sign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing
        a CSR of `csr_cert_id` which exists in the system

        `cert_extensions` can be specified if specific extensions are to be set in the newly signed certificate.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificateauthority_ca_sign_csr_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificateauthority
  /certificateauthority/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificateauthority_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificateauthority
  /certificateauthority/profiles:
    get:
      description: |-
        Returns a dictionary of predefined options for specific use cases i.e OpenVPN certificate authority
        configurations which can be used for creating certificate authorities.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - certificateauthority
  /chart/release:
    get:
      description: |-
        Query available chart releases.

        `query-options.extra.retrieve_resources` is a boolean when set will retrieve existing kubernetes resources
        in the chart namespace.

        `query-options.extra.history` is a boolean when set will retrieve all chart version upgrades
        for a chart release.

        `query-options.extra.include_chart_schema` is a boolean when set will retrieve the schema being used by
        the chart release in question.

        `query-options.extra.resource_events` is a boolean when set will retrieve individual events of each resource.
        This only has effect if `query-options.extra.retrieve_resources` is set.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
    post:
      description: |-
        Create a chart release for a catalog item.

        `release_name` is the name which will be used to identify the created chart release.

        `catalog` is a valid catalog id where system will look for catalog `item` details.

        `train` is which train to look for under `catalog` i.e stable / testing etc.

        `version` specifies the catalog `item` version.

        `values` is configuration specified for the catalog item version in question which will be used to
        create the chart release.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/id/{id}:
    delete:
      description: |-
        Delete existing chart release.

        This will delete the chart release from the kubernetes cluster and also remove any associated volumes / data.
        To clarify, host path volumes will not be deleted which live outside the chart release dataset.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
    get:
      description: |-
        Query available chart releases.

        `query-options.extra.retrieve_resources` is a boolean when set will retrieve existing kubernetes resources
        in the chart namespace.

        `query-options.extra.history` is a boolean when set will retrieve all chart version upgrades
        for a chart release.

        `query-options.extra.include_chart_schema` is a boolean when set will retrieve the schema being used by
        the chart release in question.

        `query-options.extra.resource_events` is a boolean when set will retrieve individual events of each resource.
        This only has effect if `query-options.extra.retrieve_resources` is set.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
    put:
      description: |-
        Update an existing chart release.

        `values` is configuration specified for the catalog item version in question which will be used to
        create the chart release.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/certificate_authority_choices:
    get:
      description: Returns certificate authorities which can be used by applications.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/certificate_choices:
    get:
      description: Returns certificates which can be used by applications.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/events:
    post:
      description: Returns kubernetes events for `release_name` Chart Release.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_events_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/get_chart_releases_using_chart_release_images:
    post:
      description: Retrieve chart releases which are consuming any images in use by
        `chart_release_name`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_get_chart_releases_using_chart_release_images_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/nic_choices:
    get:
      description: Available choices for NIC which can be added to a pod in a chart
        release.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/pod_console_choices:
    post:
      description: |-
        Returns choices for console access to a chart release.

        Output is a dictionary with names of pods as keys and containing names of containers which the pod
        comprises of.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_pod_console_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/pod_logs:
    post:
      description: |-
        Export logs of `options.container_name` container in `options.pod_name` pod in `release_name` chart release.

        `options.tail_lines` is an option to select how many lines of logs to retrieve for the said container. It
        defaults to 500. If set to `null`, it will retrieve complete logs of the container.

        `options.limit_bytes` is an option to select how many bytes to retrieve from the tail lines selected. If set
        to null ( which is the default ), it will not limit the bytes returned. To clarify, `options.tail_lines`
        is applied first and the required number of lines are retrieved and then `options.limit_bytes` is applied.

        Please refer to websocket documentation for downloading the file.

        A file will be downloaded from this endpoint.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_pod_logs'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/pod_logs_choices:
    post:
      description: Returns choices for accessing logs of any container in any pod
        in a chart release.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_pod_logs_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/pod_status:
    post:
      description: Retrieve available/desired pods status for a chart release and
        it's current state.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_pod_status_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/pull_container_images:
    post:
      description: |-
        Update container images being used by `release_name` chart release.

        `redeploy` when set will redeploy pods which will result in chart release using newer updated versions of
        the container images.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_pull_container_images'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/redeploy:
    post:
      description: |-
        Redeploy will initiate a new rollout of the Helm chart according to upgrade strategy defined by the chart
        release workloads. A good example for redeploying is updating kubernetes pods with an updated container image.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_redeploy_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/remove_ix_volume:
    post:
      description: Remove `volume_name` ix_volume from `release_name` chart release.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_remove_ix_volume'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/rollback:
    post:
      description: |-
        Rollback a chart release to a previous chart version.

        `item_version` is version which we want to rollback a chart release to.

        `rollback_snapshot` is a boolean value which when set will rollback snapshots of any PVC's or ix volumes being
        consumed by the chart release.

        `force_rollback` is a boolean which when set will force rollback operation to move forward even if no
        snapshots are found. This is only useful when `rollback_snapshot` is set.

        `recreate_resources` is a boolean which will delete and then create the kubernetes resources on rollback
        of chart release. This should be used with caution as if chart release is consuming immutable objects like
        a PVC, the rollback operation can't be performed and will fail as helm tries to do a 3 way patch for rollback.

        Rollback is functional for the actual configuration of the release at the `item_version` specified and
        any associated `ix_volumes` with any PVC's which were consuming chart release storage class.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_rollback'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/scale:
    post:
      description: |-
        Scale a `release_name` chart release to `scale_options.replica_count` specified.

        This will scale deployments/statefulset to replica count specified.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_scale'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/scale_workloads:
    post:
      description: Scale workloads in a chart release to specified `replica_count`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_scale_workloads'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/scaleable_resources:
    get:
      description: Returns choices for types of workloads which can be scaled up/down.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/upgrade:
    post:
      description: |-
        Upgrade `release_name` chart release.

        `upgrade_options.item_version` specifies to which item version chart release should be upgraded to.

        System will update container images being used by `release_name` chart release as a chart release
        upgrade is not considered complete until the images in use have also been updated to latest versions.

        During upgrade, `upgrade_options.values` can be specified to apply configuration changes for configuration
        changes for the chart release in question.

        When chart version is upgraded, system will automatically take a snapshot of `ix_volumes` in question
        which can be used to rollback later on.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_upgrade'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/upgrade_summary:
    post:
      description: |-
        Retrieve upgrade summary for `release_name` which will include which container images will be updated
        and changelog for `options.item_version` chart version specified if applicable. If only container images
        need to be updated, changelog will be `null`.

        If chart release `release_name` does not require an upgrade, an error will be raised.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chart_release_upgrade_summary'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /chart/release/used_ports:
    get:
      description: Returns ports in use by applications.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - chart.release
  /cloudsync:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
    post:
      description: |+
        Creates a new cloud_sync entry.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/id/{id}:
    delete:
      description: Deletes cloud_sync entry `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
    put:
      description: Updates the cloud_sync entry `id` with `data`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/id/{id}/abort:
    post:
      description: Aborts cloud sync task.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/create_bucket:
    post:
      description: Creates a new bucket `name` using ` credentials_id`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_create_bucket'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/list_buckets:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_list_buckets_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/list_directory:
    post:
      description: |-
        List contents of a remote bucket / directory.

        If remote supports buckets, path is constructed by two keys "bucket"/"folder" in `attributes`.
        If remote does not support buckets, path is constructed using "folder" key only in `attributes`.
        "folder" is directory name and "bucket" is bucket name for remote.

        Path examples:

        S3 Service
        `bucketname/directory/name`

        Dropbox Service
        `directory/name`

        `credentials` is a valid id of a Cloud Sync Credential which will be used to connect to the provider.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_list_directory_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/onedrive_list_drives:
    post:
      description: |+
        Lists all available drives and their types for given Microsoft OneDrive credentials.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_onedrive_list_drives_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/providers:
    get:
      description: |-
        Returns a list of dictionaries of supported providers for Cloud Sync Tasks.

        `credentials_schema` is JSON schema for credentials attributes.

        `task_schema` is JSON schema for task attributes.

        `buckets` is a boolean value which is set to "true" if provider supports buckets.

        Example of a single provider:

        [
            {
                "name": "AMAZON_CLOUD_DRIVE",
                "title": "Amazon Cloud Drive",
                "credentials_schema": [
                    {
                        "property": "client_id",
                        "schema": {
                            "title": "Amazon Application Client ID",
                            "_required_": true,
                            "type": "string"
                        }
                    },
                    {
                        "property": "client_secret",
                        "schema": {
                            "title": "Application Key",
                            "_required_": true,
                            "type": "string"
                        }
                    }
                ],
                "credentials_oauth": null,
                "buckets": false,
                "bucket_title": "Bucket",
                "task_schema": []
            }
        ]
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/id/{id}/restore:
    post:
      description: Create the opposite of cloud sync task `id` (PULL if it was PUSH
        and vice versa).
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/id/{id}/sync:
    post:
      description: "Run the cloud_sync job `id`, syncing the local data to remote."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/sync_onetime:
    post:
      description: Run cloud sync task without creating it.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_sync_onetime'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync
  /cloudsync/credentials:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync.credentials
    post:
      description: |-
        Create Cloud Sync Credentials.

        `attributes` is a dictionary of valid values which will be used to authorize with the `provider`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_credentials_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync.credentials
  /cloudsync/credentials/id/{id}:
    delete:
      description: Delete Cloud Sync Credentials of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync.credentials
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync.credentials
    put:
      description: Update Cloud Sync Credentials of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync.credentials
  /cloudsync/credentials/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_credentials_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync.credentials
  /cloudsync/credentials/verify:
    post:
      description: Verify if `attributes` provided for `provider` are authorized by
        the `provider`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudsync_credentials_verify_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cloudsync.credentials
  /cluster/utils/is_clustered:
    get:
      description: |-
        Returns a boolean value on whether this system is clustered.
        `True` means this system is clustered
        `False` means this system is not clustered.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cluster.utils
  /config/reset:
    post:
      description: |-
        Reset database to configuration defaults.

        If `reboot` is true this job will reboot the system after its completed with a delay of 10
        seconds.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_reset_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - config
  /config/save:
    post:
      description: |-
        Create a tar file of security-sensitive information. These options select which information
        is included in the tar file:

        `secretseed` bool: When true, include password secret seed.
        `pool_keys` bool: IGNORED and DEPRECATED as it does not apply on SCALE systems.
        `root_authorized_keys` bool: When true, include "/root/.ssh/authorized_keys" file for the root user.
        `gluster_config` bool: When true, include the directory that stores the gluster configuration files.

        If none of these options are set, the tar file is not generated and the database file is returned.

        A file will be downloaded from this endpoint.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config_save_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - config
  /config/upload:
    post:
      description: |-
        Accepts a configuration file via job pipe.

        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - config
  /container:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - container
    put:
      description: |-
        When `enable_image_updates` is set, system will check if existing container images need to be updated. System
        will basically check if we have an updated image hash available for the same tag available and if we do,
        user is alerted to update the image.
        A use case for unsetting this variable can be rate limits for docker registries, as each time we check if a
        single image needs update, we consume the rate limit and eventually it can hinder operations if the number
        of images to be checked is a lot.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - container
  /container/prune:
    post:
      description: |-
        Prune unused images/containers. This will by default remove any dangling images.

        `prune_options.remove_unused_images` when set will remove any docker image which is not being used by any
        container.

        `prune_options.remove_stopped_containers` when set will remove any containers which are stopped.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_prune_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - container
  /container/image:
    get:
      description: |-
        Retrieve container images present in the system.

        `query-options.extra.parse_tags` is a boolean which when set will have normalized tags to be retrieved
        for container images.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - container.image
  /container/image/id/{id}:
    delete:
      description: '`options.force` should be used to force delete an image even if
        it''s in use by a stopped container.'
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - container.image
    get:
      description: |-
        Retrieve container images present in the system.

        `query-options.extra.parse_tags` is a boolean which when set will have normalized tags to be retrieved
        for container images.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - container.image
  /container/image/get_chart_releases_consuming_image:
    post:
      description: Retrieve chart releases consuming `image_tag` image.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_image_get_chart_releases_consuming_image_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - container.image
  /container/image/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_image_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - container.image
  /container/image/pull:
    post:
      description: |-
        `from_image` is the name of the image to pull. Format for the name is "registry/repo/image" where
        registry may be omitted and it will default to docker registry in this case.

        `tag` specifies tag of the image and defaults to `null`. In case of `null` it will retrieve all the tags
        of the image.

        `docker_authentication` should be specified if image to be retrieved is under a private repository.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_image_pull_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - container.image
  /cronjob:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cronjob
    post:
      description: |+
        Create a new cron job.

        `stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress
        standard error / standard output respectively.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cronjob_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cronjob
  /cronjob/id/{id}:
    delete:
      description: Delete cronjob of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cronjob
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cronjob
    put:
      description: Update cronjob of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cronjob
  /cronjob/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cronjob_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cronjob
  /cronjob/run:
    post:
      description: Job to run cronjob task of `id`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cronjob_run'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - cronjob
  /ctdb/general/healthy:
    get:
      description: Returns a boolean if the ctdb cluster is healthy.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.general
  /ctdb/general/ips:
    post:
      description: |-
        Return a list of public ip addresses in the ctdb cluster.

        Public IPs will float between nodes in the cluster and
        should automatically rebalance as nodes become available.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ctdb_general_ips_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.general
  /ctdb/general/listnodes:
    get:
      description: Return a list of nodes in the ctdb cluster.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.general
  /ctdb/general/pnn:
    get:
      description: |-
        Return node number for this node.
        This value should be static for life of cluster.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.general
  /ctdb/general/recovery_master:
    get:
      description: Return node number for the recovery master for the cluster.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.general
  /ctdb/general/status:
    post:
      description: |-
        List the status of the ctdb cluster.

        `all_nodes`: Boolean if True, return status
            for all nodes in the cluster else return
            status of this node.

        `nodemap` contains the current nodemap in-memory for ctdb daemon on
        this particular cluster node.

        `vnnmap` list of all nodes in the cluster that are participating in
        hosting the cluster databases. BANNED nodes are excluded from vnnmap.

        `recovery_master` the node number of the cluster node that currently
        holds the cluster recovery lock in the ctdb shared volume. This node
        is responsible for performing full cluster checks and cluster node
        consistency. It is also responsible for performing databse recovery
        procedures. Database recovery related logs will be primarily located
        on this node and so troubleshooting cluster health and recovery
        operations should start here.

        `recovery_mode_str` will be either 'NORMAL' or 'RECOVERY' depending
        on whether database recovery is in progress in the cluster.

        `recovery_mode_raw` provides raw the internal raw recovery_state of
        ctdbd. Currently defined values are:
        CTDB_RECOVERY_NORMAL 0
        CTDB_RECOVERY_ACTIVE 1

        `all_healthy` provides a summary of whether all nodes in internal
        nodelist are healthy. This is a convenience feature and not an
        explicit ctdb client response.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ctdb_general_status_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.general
  /ctdb/private/ips:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.private.ips
    post:
      description: |-
        Add a ctdb private address to the cluster

        `ip` string representing an IP v4/v6 address
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ctdb_private_ips_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.private.ips
  /ctdb/private/ips/id/{id}:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.private.ips
    put:
      description: |-
        Update Private IP address from the ctdb cluster with pnn value of `id`.

        `id` integer representing the PNN value for the node.
        `enable` boolean. When True, enable the node else disable the node.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.private.ips
  /ctdb/private/ips/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ctdb_private_ips_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.private.ips
  /ctdb/public/ips:
    get:
      description: |-
        Retrieve information about configured public IP addresses for the
        ctdb cluster. This call raise a CallError with errno set to ENXIO
        if this node is not in a state where it can provide accurate
        information about cluster. Examples problematic states are:

        - ctdb or glusterd are not running on this node

        - ctdb shared volume is not mounted

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.public.ips
    post:
      description: |-
        Add a ctdb public address to the cluster

        `pnn` node number of record to adjust
        `ip` string representing an IP v4/v6 address
        `netmask` integer representing a cidr notated netmask (i.e. 16/24/48/64 etc)
        `interface` string representing a network interface to apply the `ip`
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ctdb_public_ips_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.public.ips
  /ctdb/public/ips/id/{id}:
    delete:
      description: |-
        Remove the specified `address` from the configuration for the node specified by `pnn`.
        If `pnn` is not specified, then the operation applies to the current node.
        In order to remove an address cluster-wide, this method must be called on
        every node where the public IP address is configured.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.public.ips
    get:
      description: |-
        Retrieve information about configured public IP addresses for the
        ctdb cluster. This call raise a CallError with errno set to ENXIO
        if this node is not in a state where it can provide accurate
        information about cluster. Examples problematic states are:

        - ctdb or glusterd are not running on this node

        - ctdb shared volume is not mounted

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.public.ips
  /ctdb/public/ips/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ctdb_public_ips_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.public.ips
  /ctdb/public/ips/interface_choices:
    post:
      description: Retrieve list of available interface choices that can be used for
        assigning a ctdbd public ip.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ctdb_public_ips_interface_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ctdb.public.ips
  /device/get_info:
    post:
      description: Get info for SERIAL/DISK/GPU device types.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/device_get_info_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - device
  /device/gpu_pci_ids_choices:
    get:
      description: Retrieve choices for GPU PCI ids located in the system.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - device
  /directoryservices/cache_refresh:
    get:
      description: |-
        This method refreshes the directory services cache for users and groups that is
        used as a backing for `user.query` and `group.query` methods. The first cache fill in
        an Active Directory domain may take a significant amount of time to complete and
        so it is performed as within a job. The most likely situation in which a user may
        desire to refresh the directory services cache is after new users or groups  to a remote
        directory server with the intention to have said users or groups appear in the
        results of the aforementioned account-related methods.

        A cache refresh is not required in order to use newly-added users and groups for in
        permissions and ACL related methods. Likewise, a cache refresh will not resolve issues
        with users being unable to authenticate to shares.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - directoryservices
  /directoryservices/get_state:
    get:
      description: |-
        `DISABLED` Directory Service is disabled.

        `FAULTED` Directory Service is enabled, but not HEALTHY. Review logs and generated alert
        messages to debug the issue causing the service to be in a FAULTED state.

        `LEAVING` Directory Service is in process of stopping.

        `JOINING` Directory Service is in process of starting.

        `HEALTHY` Directory Service is enabled, and last status check has passed.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - directoryservices
  /disk:
    get:
      description: |-
        Query disks.

        The following extra options are supported:

             include_expired: true - will also include expired disks (default: false)
             passwords: true - will not hide KMIP password for the disks (default: false)
             supports_smart: true - will query if disks support S.M.A.R.T. Only supported if resulting disks count is
                                    not larger than one; otherwise, raises an error.
             pools: true - will join pool name for each disk (default: false)

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/id/{id}:
    get:
      description: |-
        Query disks.

        The following extra options are supported:

             include_expired: true - will also include expired disks (default: false)
             passwords: true - will not hide KMIP password for the disks (default: false)
             supports_smart: true - will query if disks support S.M.A.R.T. Only supported if resulting disks count is
                                    not larger than one; otherwise, raises an error.
             pools: true - will join pool name for each disk (default: false)

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
    put:
      description: |-
        Update disk of `id`.

        If extra options need to be passed to SMART which we don't already support, they can be passed by
        `smartoptions`.

        `critical`, `informational` and `difference` are integer values on which alerts for SMART are configured
        if the disk temperature crosses the assigned threshold for each respective attribute.
        If they are set to null, then SMARTD config values are used as defaults.

        Email of log level LOG_CRIT is issued when disk temperature crosses `critical`.

        Email of log level LOG_INFO is issued when disk temperature crosses `informational`.

        If temperature of a disk changes by `difference` degree Celsius since the last report, SMART reports this.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/get_unused:
    post:
      description: |-
        Return disks that are not in use by any zpool that is currently imported. It will
        also return disks that are in use by any zpool that is exported.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_get_unused_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/resize:
    post:
      description: |-
        Takes a list of disks. Each list entry is a dict that requires a key, value pair.
        `name`: string (the name of the disk (i.e. sda))
        `size`: integer (given in gigabytes)
        `sync`: boolean, when true (default) will synchronize the new size of the disk(s)
            with the database cache.
        `raise_error`: boolean
            when true, will raise a `CallError` if any failures occur
            when false, will will log the errors if any failures occur

        NOTE:
            if `size` is given, the disk with `name` will be resized
                to `size` (overprovision).
            if `size` is not given, the disk with `name` will be resized
                to it's original size (unoverprovision).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_resize'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/retaste:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_retaste_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/smart_attributes:
    post:
      description: Returns S.M.A.R.T. attributes values for specified disk name.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_smart_attributes_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/temperature:
    post:
      description: |-
        Returns temperature for device `name` using specified S.M.A.R.T. `powermode`. If `cache` is not null
        then the last cached within `cache` seconds value is used.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_temperature'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/temperature_agg:
    post:
      description: Returns min/max/avg temperature for `names` disks for the last
        `days` days.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_temperature_agg'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/temperature_alerts:
    post:
      description: Returns existing temperature alerts for specified disk `names.`
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_temperature_alerts_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/temperatures:
    post:
      description: |-
        Returns temperatures for a list of devices (runs in parallel).
        See `disk.temperature` documentation for more details.
        If `only_cached` is specified then this method only returns disk temperatures that exist in cache.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_temperatures'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /disk/wipe:
    post:
      description: |-
        Performs a wipe of a disk `dev`.
        It can be of the following modes:
          - QUICK: clean the first and last 32 megabytes on `dev`
          - FULL: write whole disk with zero's
          - FULL_RANDOM: write whole disk with random bytes
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disk_wipe'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - disk
  /dns/query:
    get:
      description: |-
        Query Name Servers with `query-filters` and `query-options`.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - dns
  /dyndns:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - dyndns
    put:
      description: |-
        Update dynamic dns service configuration.

        `period` indicates how often the IP is checked in seconds.

        `ssl` if set to true, makes sure that HTTPS is used for the connection to the server which updates the
        DNS record.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dyndns_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - dyndns
  /dyndns/provider_choices:
    get:
      description: List supported Dynamic DNS Service Providers.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - dyndns
  /enclosure:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - enclosure
  /enclosure/id/{id}:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - enclosure
    put:
      description: ""
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - enclosure
  /enclosure/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enclosure_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - enclosure
  /enclosure/set_slot_status:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enclosure_set_slot_status'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - enclosure
  /failover:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
    put:
      description: |-
        Update failover state.

        `disabled` When true indicates that HA will be disabled.
        `master`  Marks the particular node in the chassis as the master node.
                    The standby node will have the opposite value.

        `timeout` is the time to WAIT until a failover occurs when a network
            event occurs on an interface that is marked critical for failover AND
            HA is enabled and working appropriately.

            The default time to wait is 2 seconds.
            **NOTE**
                This setting does NOT effect the `disabled` or `master` parameters.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/become_passive:
    get:
      description: |-
        This method is only called manually by the end-user so we fully expect that they
        know what they're doing. Furthermore, this method will only run if failover has NOT
        been administratively disabled. The reason why we only allow this in that scenario
        is because the failover logic (on the other node) will ignore any failover "event"
        that comes in if failover has been administratively disabled. This immediately causes
        the HA system to go into a "faulted" state because the other node will get the VIPs
        but it will not import the zpool and it will not start fenced. Only way out of that
        situation is to manually fix things (import zpool, migrate VIPs, start fenced, etc).

        NOTE: The only "safe" way to "become passive" is to use the STCNITH method (similar to STONITH).
        (i.e. Shoot The Current Node In The Head)

        This ensures that the current node gets out of the way _completely_ so there is no chance
        of the zpool being imported at the same time on both nodes (which can ultimately end in data corruption).
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/call_remote:
    post:
      description: |-
        Call a method on the other node.

        `method` name of the method to be called
        `args` list of arguments to be passed to `method`
        `options` dictionary with following keys
            `timeout`: time to wait for `method` to return
                NOTE: This parameter _ONLY_ applies if the remote
                    client is connected to the other node.
            `job`: whether or not the `method` being called is a job
            `job_return`: if true, will return immediately and not wait
                for the job to complete, otherwise will wait for the
                job to complete
            `callback`: a function that will be called as a callback
                on completion/failure of `method`.
                NOTE: Only applies if `method` is a job
            `connect_timeout`: Maximum amount of time in seconds to wait
                for remote connection to become available.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_call_remote'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/control:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_control'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/force_master:
    get:
      description: "Force this controller to become MASTER, if it's not already."
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/get_ips:
    get:
      description: Get a list of IPs for which the webUI can be accessed.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/hardware:
    get:
      description: |-
        Returns the hardware type for an HA system.
          ECHOSTREAM
          ECHOWARP
          PUMA
          BHYVE
          MANUAL
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/in_progress:
    get:
      description: Returns True if there is an ongoing failover event.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/licensed:
    get:
      description: Checks whether this instance is licensed as a HA unit.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/node:
    get:
      description: |-
        Returns the slot position in the chassis that
        the controller is located.
          A - First node
          B - Seconde Node
          MANUAL - slot position in chassis could not be determined
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/status:
    get:
      description: |-
        Get the current HA status.

        Returns:
            MASTER
            BACKUP
            ELECTING
            IMPORTING
            ERROR
            SINGLE
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/sync_from_peer:
    get:
      description: Sync database and files from the other controller.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/sync_to_peer:
    post:
      description: |-
        Sync database and files to the other controller.

        `reboot` as true will reboot the other controller after syncing.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_sync_to_peer_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/unlock:
    post:
      description: |-
        Unlock datasets in HA, syncing passphrase between controllers and forcing this controller
        to be MASTER importing the pools.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_unlock_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/upgrade:
    post:
      description: |-
        Upgrades both controllers.

        Files will be downloaded to the Active Controller and then transferred to the Standby
        Controller.

        Upgrade process will start concurrently on both nodes.

        Once both upgrades are applied, the Standby Controller will reboot. This job will wait for
        that job to complete before finalizing.

        A file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/failover_upgrade_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/upgrade_finish:
    get:
      description: |-
        Perform the last stage of an HA upgrade.

        This will activate the new boot environment on the
        Standby Controller and reboot it.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /failover/upgrade_pending:
    get:
      description: |-
        Verify if HA upgrade is pending.

        `upgrade_finish` needs to be called to finish
        the HA upgrade process if this method returns true.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - failover
  /filesystem/acl_is_trivial:
    post:
      description: |-
        Returns True if the ACL can be fully expressed as a file mode without losing
        any access rules.

        Paths on clustered volumes may be specifed with the path prefix
        `CLUSTER:<volume name>`. For example, to list directories
        in the directory 'data' in the clustered volume `smb01`, the
        path should be specified as `CLUSTER:smb01/data`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_acl_is_trivial_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/can_access_as_user:
    post:
      description: |-
        Check if `username` is able to access `path` with specific `permissions`. At least one of `read/write/execute`
        permission must be specified for checking with each of these defaulting to `null`. `null` for
        `read/write/execute` represents that the permission should not be checked.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_can_access_as_user'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/chown:
    post:
      description: |-
        Change owner or group of file at `path`.

        `uid` and `gid` specify new owner of the file. If either
        key is absent or None, then existing value on the file is not
        changed.

        `recursive` performs action recursively, but does
        not traverse filesystem mount points.

        If `traverse` and `recursive` are specified, then the chown
        operation will traverse filesystem mount points.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_chown_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/default_acl_choices:
    post:
      description: |-
        `DEPRECATED`
        Returns list of names of ACL templates. Wrapper around
        filesystem.acltemplate.query.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_default_acl_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/get:
    post:
      description: |-
        Job to get contents of `path`.

        A file will be downloaded from this endpoint.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_get_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/get_default_acl:
    post:
      description: |-
        `DEPRECATED`
        Returns a default ACL depending on the usage specified by `acl_type`.
        If an admin group is defined, then an entry granting it full control will
        be placed at the top of the ACL. Optionally may pass `share_type` to argument
        to get share-specific template ACL.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_get_default_acl'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/get_dosmode:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_get_dosmode_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/getacl:
    post:
      description: |-
        Return ACL of a given path. This may return a POSIX1e ACL or a NFSv4 ACL. The acl type is indicated
        by the `acltype` key.

        `simplified` - effect of this depends on ACL type on underlying filesystem. In the case of
        NFSv4 ACLs simplified permissions and flags are returned for ACL entries where applicable.
        NFSv4 errata below. In the case of POSIX1E ACls, this setting has no impact on returned ACL.

        `resolve_ids` - adds additional `who` key to each ACL entry, that converts the numeric id to
        a user name or group name. In the case of owner@ and group@ (NFSv4) or USER_OBJ and GROUP_OBJ
        (POSIX1E), st_uid or st_gid will be converted from stat() return for file. In the case of
        MASK (POSIX1E), OTHER (POSIX1E), everyone@ (NFSv4), key `who` will be included, but set to null.
        In case of failure to resolve the id to a name, `who` will be set to null. This option should
        only be used if resolving ids to names is required.

        Errata about ACLType NFSv4:

        `simplified` returns a shortened form of the ACL permset and flags where applicable. If permissions
        have been simplified, then the `perms` object will contain only a single `BASIC` key with a string
        describing the underlying permissions set.

        `TRAVERSE` sufficient rights to traverse a directory, but not read contents.

        `READ` sufficient rights to traverse a directory, and read file contents.

        `MODIFIY` sufficient rights to traverse, read, write, and modify a file.

        `FULL_CONTROL` all permissions.

        If the permisssions do not fit within one of the pre-defined simplified permissions types, then
        the full ACL entry will be returned.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_getacl'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/is_immutable:
    post:
      description: Retrieves boolean which is set when immutable flag is set on `path`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_is_immutable_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/listdir:
    post:
      description: |-
        Get the contents of a directory.

        Paths on clustered volumes may be specifed with the path prefix
        `CLUSTER:<volume name>`. For example, to list directories
        in the directory 'data' in the clustered volume `smb01`, the
        path should be specified as `CLUSTER:smb01/data`.

        Each entry of the list consists of:
          name(str): name of the file
          path(str): absolute path of the entry
          realpath(str): absolute real path of the entry (if SYMLINK)
          type(str): DIRECTORY | FILE | SYMLINK | OTHER
          size(int): size of the entry
          mode(int): file mode/permission
          uid(int): user id of entry owner
          gid(int): group id of entry onwer
          acl(bool): extended ACL is present on file
          is_mountpoint(bool): path is a mountpoint
          is_ctldir(bool): path is within special .zfs directory
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_listdir'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/mkdir:
    post:
      description: Create a directory at the specified path.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_mkdir_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/put:
    post:
      description: |-
        Job to put contents to `path`.

        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_put'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/set_dosmode:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_set_dosmode_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/set_immutable:
    post:
      description: |-
        Set/Unset immutable flag at `path`.

        `set_flag` when set will set immutable flag and when unset will unset immutable flag at `path`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_set_immutable'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/setacl:
    post:
      description: |-
        Set ACL of a given path. Takes the following parameters:
        `path` full path to directory or file.

        Paths on clustered volumes may be specifed with the path prefix
        `CLUSTER:<volume name>`. For example, to list directories
        in the directory 'data' in the clustered volume `smb01`, the
        path should be specified as `CLUSTER:smb01/data`.

        `dacl` ACL entries. Formatting depends on the underlying `acltype`. NFS4ACL requires
        NFSv4 entries. POSIX1e requires POSIX1e entries.

        `uid` the desired UID of the file user. If set to None (the default), then user is not changed.

        `gid` the desired GID of the file group. If set to None (the default), then group is not changed.

        `recursive` apply the ACL recursively

        `traverse` traverse filestem boundaries (ZFS datasets)

        `strip` convert ACL to trivial. ACL is trivial if it can be expressed as a file mode without
        losing any access rules.

        `canonicalize` reorder ACL entries so that they are in concanical form as described
        in the Microsoft documentation MS-DTYP 2.4.5 (ACL). This only applies to NFSv4 ACLs.

        For case of NFSv4 ACLs  USER_OBJ, GROUP_OBJ, and EVERYONE with owner@, group@, everyone@ for
        consistency with getfacl and setfacl. If one of aforementioned special tags is used, 'id' must
        be set to None.

        An inheriting empty everyone@ ACE is appended to non-trivial ACLs in order to enforce Windows
        expectations regarding permissions inheritance. This entry is removed from NT ACL returned
        to SMB clients when 'ixnas' samba VFS module is enabled.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_setacl_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/setperm:
    post:
      description: |-
        Set unix permissions on given `path`.

        Paths on clustered volumes may be specifed with the path prefix
        `CLUSTER:<volume name>`. For example, to list directories
        in the directory 'data' in the clustered volume `smb01`, the
        path should be specified as `CLUSTER:smb01/data`.

        If `mode` is specified then the mode will be applied to the
        path and files and subdirectories depending on which `options` are
        selected. Mode should be formatted as string representation of octal
        permissions bits.

        `uid` the desired UID of the file user. If set to None (the default), then user is not changed.

        `gid` the desired GID of the file group. If set to None (the default), then group is not changed.

        `stripacl` setperm will fail if an extended ACL is present on `path`,
        unless `stripacl` is set to True.

        `recursive` remove ACLs recursively, but do not traverse dataset
        boundaries.

        `traverse` remove ACLs from child datasets.

        If no `mode` is set, and `stripacl` is True, then non-trivial ACLs
        will be converted to trivial ACLs. An ACL is trivial if it can be
        expressed as a file mode without losing any access rules.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_setperm_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/stat:
    post:
      description: |-
        Return the filesystem stat(2) for a given `path`.

        Paths on clustered volumes may be specifed with the path prefix
        `CLUSTER:<volume name>`. For example, to list directories
        in the directory 'data' in the clustered volume `smb01`, the
        path should be specified as `CLUSTER:smb01/data`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_stat_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/statfs:
    post:
      description: |-
        Return stats from the filesystem of a given path.

        Paths on clustered volumes may be specifed with the path prefix
        `CLUSTER:<volume name>`. For example, to list directories
        in the directory 'data' in the clustered volume `smb01`, the
        path should be specified as `CLUSTER:smb01/data`.

        Raises:
            CallError(ENOENT) - Path not found
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_statfs_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem
  /filesystem/acltemplate:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem.acltemplate
    post:
      description: Create a new filesystem ACL template.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_acltemplate_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem.acltemplate
  /filesystem/acltemplate/id/{id}:
    delete:
      description: ""
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem.acltemplate
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem.acltemplate
    put:
      description: update filesystem ACL template with `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem.acltemplate
  /filesystem/acltemplate/by_path:
    post:
      description: |-
        Retrieve list of available ACL templates for a given `path`.

        Supports `query-filters` and `query-options`.
        `format-options` gives additional options to alter the results of
        the template query:

        `canonicalize` - place ACL entries for NFSv4 ACLs in Microsoft canonical order.
        `ensure_builtins` - ensure all results contain entries for `builtin_users` and `builtin_administrators`
        groups.
        `resolve_names` - convert ids in ACL entries into names.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_acltemplate_by_path_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem.acltemplate
  /filesystem/acltemplate/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filesystem_acltemplate_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - filesystem.acltemplate
  /ftp:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ftp
    put:
      description: |-
        Update ftp service configuration.

        `clients` is an integer value which sets the maximum number of simultaneous clients allowed. It defaults to 32.

        `ipconnections` is an integer value which shows the maximum number of connections per IP address. It defaults
        to 0 which equals to unlimited.

        `timeout` is the maximum number of seconds that proftpd will allow clients to stay connected without receiving
        any data on either the control or data connection.

        `timeout_notransfer` is the maximum number of seconds a client is allowed to spend connected, after
        authentication, without issuing a command which results in creating an active or passive data connection
        (i.e. sending/receiving a file, or receiving a directory listing).

        `rootlogin` is a boolean value which when configured to true enables login as root. This is generally
        discouraged because of the security risks.

        `onlyanonymous` allows anonymous FTP logins with access to the directory specified by `anonpath`.

        `banner` is a message displayed to local login users after they successfully authenticate. It is not displayed
        to anonymous login users.

        `filemask` sets the default permissions for newly created files which by default are 077.

        `dirmask` sets the default permissions for newly created directories which by default are 077.

        `resume` if set allows FTP clients to resume interrupted transfers.

        `fxp` if set to true indicates that File eXchange Protocol is enabled. Generally it is discouraged as it
        makes the server vulnerable to FTP bounce attacks.

        `defaultroot` when set ensures that for local users, home directory access is only granted if the user
        is a member of group wheel.

        `ident` is a boolean value which when set to true indicates that IDENT authentication is required. If identd
        is not running on the client, this can result in timeouts.

        `masqaddress` is the public IP address or hostname which is set if FTP clients cannot connect through a
        NAT device.

        `localuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for local user.
        Default of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).

        `localuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for local user.
        Default of zero indicates unlimited download bandwidth ( from the FTP server configuration ).

        `anonuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for anonymous user.
        Default of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).

        `anonuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for anonymous
        user. Default of zero indicates unlimited download bandwidth ( from the FTP server configuration ).

        `tls` is a boolean value which when set indicates that encrypted connections are enabled. This requires a
        certificate to be configured first with the certificate service and the id of certificate is passed on in
        `ssltls_certificate`.

        `tls_policy` defines whether the control channel, data channel, both channels, or neither channel of an FTP
        session must occur over SSL/TLS.

        `tls_opt_enable_diags` is a boolean value when set, logs verbosely. This is helpful when troubleshooting a
        connection.

        `options` is a string used to add proftpd(8) parameters not covered by ftp service.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ftp_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ftp
  /gluster/eventsd/create:
    post:
      description: |-
        Add `url` webhook that will be called
        with a JSON formatted POST request that
        will include the event that was triggered
        along with the relevant data.

        `url` is a http address (i.e. http://192.168.1.50/endpoint)
        `bearer_token` is a bearer token
        `secret` secret to encode the JWT message

        NOTE: This webhook will be synchronized to all
        peers in the trusted storage pool.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_eventsd_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.eventsd
  /gluster/eventsd/delete:
    post:
      description: |-
        Delete `url` webhook

        `url` is a http address (i.e. http://192.168.1.50/endpoint)
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_eventsd_delete_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.eventsd
  /gluster/eventsd/sync:
    get:
      description: |-
        Sync the webhooks config file to all peers in the
        trusted storage pool
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.eventsd
  /gluster/eventsd/webhooks:
    get:
      description: List the current webhooks (if any)
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.eventsd
  /gluster/fuse/is_mounted:
    post:
      description: |-
        Check if gluster volume is FUSE mounted locally.

        `name` String representing name of the gluster volume
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_fuse_is_mounted_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.fuse
  /gluster/fuse/mount:
    post:
      description: |-
        Mount a gluster volume using the gluster FUSE client.

        `name` String representing the name of the gluster volume
        `all` Boolean if True locally FUSE mount all detected
                gluster volumes
        `raise` Boolean if True raise a CallError if the FUSE mount
                fails
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_fuse_mount_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.fuse
  /gluster/fuse/umount:
    post:
      description: |-
        Unmount a locally FUSE mounted gluster volume.

        `name` String representing the name of the gluster volume
        `all` Boolean if True umount all locally detected FUSE
                mounted gluster volumes
        `raise` Boolean if True raise a CallError if the FUSE mount
                fails
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_fuse_umount_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.fuse
  /gluster/localevents/add_jwt_secret:
    post:
      description: |-
        Add a `secret` key used to encode/decode
        JWT messages for sending/receiving gluster
        events.

        `secret` String representing the key to be used
                    to encode/decode JWT messages
        `force` Boolean if set to True, will forcefully
                    wipe any existing jwt key for this
                    peer. Note, if forcefully adding a
                    new key, the other peers in the TSP
                    will also need to be sent this key.

        Note: this secret is only used for messages
        that are destined for the api endpoint at
        http://*:6000/_clusterevents for each peer
        in the trusted storage pool.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_localevents_add_jwt_secret_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.localevents
  /gluster/localevents/get_set_jwt_secret:
    get:
      description: |-
        Return the secret key used to encode/decode
        JWT messages for sending/receiving gluster
        events.

        Note: this secret is only used for messages
        that are destined for the api endpoint at
        http://*:6000/_clusterevents for each peer
        in the trusted storage pool.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.localevents
  /gluster/peer:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.peer
    post:
      description: |-
        Add peer to the Trusted Storage Pool.

        `hostname` String representing an IP(v4/v6) address or DNS name
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_peer_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.peer
  /gluster/peer/id/{id}:
    delete:
      description: |-
        Remove peer of `id` from the Trusted Storage Pool.

        `id` String representing the uuid of the peer
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.peer
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.peer
  /gluster/peer/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_peer_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.peer
  /gluster/peer/ips_available:
    get:
      description: Return list of VIP(v4/v6) addresses available on the system
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.peer
  /gluster/peer/status:
    post:
      description: |-
        List the status of peers in the Trusted Storage Pool.

        `localhost` Boolean if True, include localhost else exclude localhost
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_peer_status_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.peer
  /gluster/volume:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
    post:
      description: |-
        Create a gluster volume.

        `name` String representing name to be given to the volume
        `bricks` List representing the brick paths
            `peer_name` String representing IP or DNS name of the peer
            `peer_path` String representing the full path of the brick

        `replica` Integer representing number of replica bricks
        `arbiter` Integer representing number of arbiter bricks
        `disperse` Integer representing number of disperse bricks
        `disperse_data` Integer representing number of disperse data bricks
        `redundancy` Integer representing number of redundancy bricks
        `force` Boolean, if True ignore potential warnings
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_volume_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/id/{id}:
    delete:
      description: |-
        Delete a gluster volume.

        `id` String representing name of gluster volume
                to be deleted
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_volume_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/info:
    post:
      description: |-
        Return information about gluster volume(s).

        `name` String representing name of gluster volume
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_volume_info_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/list:
    get:
      description: Return list of gluster volumes.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/optreset:
    post:
      description: |-
        Reset volumes options.
            If `opt` is not provided, then all options
            will be reset.

        `name` String representing name of gluster volume
        `opt` String representing name of the option to reset
        `force` Boolean, if True forcefully reset option(s)
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_volume_optreset_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/optset:
    post:
      description: |-
        Set gluster volume options.

        `name` String representing name of gluster volume
        `opts` Dict where
            --key-- is the name of the option
            --value-- is the value to be given to the option
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_volume_optset_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/quota:
    post:
      description: |-
        Enable/Disable the quota for a given gluster volume.

        `name` String representing name of gluster volume
        `enable` Boolean, if True enable quota else disable it
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_volume_quota_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/restart:
    post:
      description: |-
        Restart a gluster volume.

        `name` String representing name of gluster volume
        `force` Boolean, if True forcefully restart the gluster volume
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_volume_restart_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/start:
    post:
      description: |-
        Start a gluster volume.

        `name` String representing name of gluster volume
        `force` Boolean, if True forcefully start the gluster volume
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_volume_start_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/status:
    post:
      description: |-
        Return detailed information about gluster volume.

        `name` String representing name of gluster volume
        `verbose` Boolean, If False, only return brick information
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_volume_status_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /gluster/volume/stop:
    post:
      description: |-
        Stop a gluster volume.

        `name` String representing name of gluster volume
        `force` Boolean, if True forcefully stop the gluster volume
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gluster_volume_stop_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - gluster.volume
  /group:
    get:
      description: |-
        Query groups with `query-filters` and `query-options`. As a performance optimization, only local groups
        will be queried by default.

        Expanded information may be requested by specifying the extra option `"extra": {"additional_information": []}`.

        The following `additional_information` options are supported:
        `SMB` - include Windows SID and NT Name for group. If this option is not specified, then these
            keys will have `null` value.
        `DS` - include groups from Directory Service (LDAP or Active Directory) in results

        `"extra": {"search_dscache": true}` is a legacy method of querying for directory services groups.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - group
    post:
      description: |-
        Create a new group.

        If `gid` is not provided it is automatically filled with the next one available.

        `allow_duplicate_gid` allows distinct group names to share the same gid.

        `users` is a list of user ids (`id` attribute from `user.query`).

        `smb` specifies whether the group should be mapped into an NT group.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - group
  /group/id/{id}:
    delete:
      description: |-
        Delete group `id`.

        The `delete_users` option deletes all users that have this group as their primary group.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - group
    get:
      description: |-
        Query groups with `query-filters` and `query-options`. As a performance optimization, only local groups
        will be queried by default.

        Expanded information may be requested by specifying the extra option `"extra": {"additional_information": []}`.

        The following `additional_information` options are supported:
        `SMB` - include Windows SID and NT Name for group. If this option is not specified, then these
            keys will have `null` value.
        `DS` - include groups from Directory Service (LDAP or Active Directory) in results

        `"extra": {"search_dscache": true}` is a legacy method of querying for directory services groups.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - group
    put:
      description: Update attributes of an existing group.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - group
  /group/get_group_obj:
    post:
      description: |-
        Returns dictionary containing information from struct grp for the group specified by either
        the groupname or gid. Bypasses group cache.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_get_group_obj_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - group
  /group/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - group
  /group/get_next_gid:
    get:
      description: Get the next available/free gid.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - group
  /group/has_password_enabled_user:
    post:
      description: Checks whether at least one local user with a password is a member
        of any of the `group_ids`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group_has_password_enabled_user'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - group
  /idmap:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - idmap
    post:
      description: |-
        Create a new IDMAP domain. These domains must be unique. This table
        will be automatically populated after joining an Active Directory domain
        if "allow trusted domains" is set to True in the AD service configuration.
        There are three default system domains: DS_TYPE_ACTIVEDIRECTORY, DS_TYPE_LDAP, DS_TYPE_DEFAULT_DOMAIN.
        The system domains correspond with the idmap settings under Active Directory, LDAP, and SMB
        respectively.

        `name` the pre-windows 2000 domain name.

        `DNS_domain_name` DNS name of the domain.

        `idmap_backend` provides a plugin interface for Winbind to use varying
        backends to store SID/uid/gid mapping tables. The correct setting
        depends on the environment in which the NAS is deployed.

        `range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.

        `certificate_id` references the certificate ID of the SSL certificate to use for certificate-based
        authentication to a remote LDAP server. This parameter is not supported for all idmap backends as some
        backends will generate SID to ID mappings algorithmically without causing network traffic.

        `options` are additional parameters that are backend-dependent:

        `AD` idmap backend options:
        `unix_primary_group` If True, the primary group membership is fetched from the LDAP attributes (gidNumber).
        If False, the primary group membership is calculated via the "primaryGroupID" LDAP attribute.

        `unix_nss_info` if True winbind will retrieve the login shell and home directory from the LDAP attributes.
        If False or if the AD LDAP entry lacks the SFU attributes the smb4.conf parameters `template shell` and `template homedir` are used.

        `schema_mode` Defines the schema that idmap_ad should use when querying Active Directory regarding user and group information.
        This can be either the RFC2307 schema support included in Windows 2003 R2 or the Service for Unix (SFU) schema.
        For SFU 3.0 or 3.5 please choose "SFU", for SFU 2.0 please choose "SFU20". The behavior of primary group membership is
        controlled by the unix_primary_group option.

        `AUTORID` idmap backend options:
        `readonly` sets the module to read-only mode. No new ranges will be allocated and new mappings
        will not be created in the idmap pool.

        `ignore_builtin` ignores mapping requests for the BUILTIN domain.

        `LDAP` idmap backend options:
        `ldap_base_dn` defines the directory base suffix to use for SID/uid/gid mapping entries.

        `ldap_user_dn` defines the user DN to be used for authentication.

        `ldap_url` specifies the LDAP server to use for SID/uid/gid map entries.

        `ssl` specifies whether to encrypt the LDAP transport for the idmap backend.

        `NSS` idmap backend options:
        `linked_service` specifies the auxiliary directory service ID provider.

        `RFC2307` idmap backend options:
        `domain` specifies the domain for which the idmap backend is being created. Numeric id, short-form
        domain name, or long-form DNS domain name of the domain may be specified. Entry must be entered as
        it appears in `idmap.domain`.

        `range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.

        `ldap_server` defines the type of LDAP server to use. This can either be an LDAP server provided
        by the Active Directory Domain (ad) or a stand-alone LDAP server.

        `bind_path_user` specfies the search base where user objects can be found in the LDAP server.

        `bind_path_group` specifies the search base where group objects can be found in the LDAP server.

        `user_cn` query cn attribute instead of uid attribute for the user name in LDAP.

        `realm` append @realm to cn for groups (and users if user_cn is set) in LDAP queries.

        `ldmap_domain` when using the LDAP server in the Active Directory server, this allows one to
        specify the domain where to access the Active Directory server. This allows using trust relationships
        while keeping all RFC 2307 records in one place. This parameter is optional, the default is to access
        the AD server in the current domain to query LDAP records.

        `ldap_url` when using a stand-alone LDAP server, this parameter specifies the LDAP URL for accessing the LDAP server.

        `ldap_user_dn` defines the user DN to be used for authentication.

        `ldap_user_dn_password` is the password to be used for LDAP authentication.

        `realm` defines the realm to use in the user and group names. This is only required when using cn_realm together with
         a stand-alone ldap server.

        `RID` backend options:
        `sssd_compat` generate idmap low range based on same algorithm that SSSD uses by default.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/idmap_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - idmap
  /idmap/id/{id}:
    delete:
      description: |-
        Delete a domain by id. Deletion of default system domains is not permitted.
        In case of registry config for clustered server, this will remove all smb4.conf
        entries for the domain associated with the id.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - idmap
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - idmap
    put:
      description: Update a domain by id.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - idmap
  /idmap/backend_choices:
    get:
      description: Returns array of valid idmap backend choices per directory service.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - idmap
  /idmap/backend_options:
    get:
      description: |-
        This returns full information about idmap backend options. Not all
        `options` are valid for every backend.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - idmap
  /idmap/clear_idmap_cache:
    get:
      description: |-
        Stop samba, remove the winbindd_cache.tdb file, start samba, flush samba's cache.
        This should be performed after finalizing idmap changes.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - idmap
  /idmap/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/idmap_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - idmap
  /idmap/options_choices:
    post:
      description: Returns a list of supported keys for the specified idmap backend.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/idmap_options_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - idmap
  /initshutdownscript:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - initshutdownscript
    post:
      description: |-
        Create an initshutdown script task.

        `type` indicates if a command or script should be executed at `when`.

        There are three choices for `when`:

        1) PREINIT - This is early in the boot process before all the services / rc scripts have started
        2) POSTINIT - This is late in the boot process when most of the services / rc scripts have started
        3) SHUTDOWN - This is on shutdown

        `timeout` is an integer value which indicates time in seconds which the system should wait for the execution
        of script/command. It should be noted that a hard limit for a timeout is configured by the base OS, so when
        a script/command is set to execute on SHUTDOWN, the hard limit configured by the base OS is changed adding
        the timeout specified by script/command so it can be ensured that it executes as desired and is not interrupted
        by the base OS's limit.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initshutdownscript_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - initshutdownscript
  /initshutdownscript/id/{id}:
    delete:
      description: Delete init/shutdown task of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - initshutdownscript
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - initshutdownscript
    put:
      description: Update initshutdown script task of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - initshutdownscript
  /initshutdownscript/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initshutdownscript_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - initshutdownscript
  /interface:
    get:
      description: |-
        Query Interfaces with `query-filters` and `query-options`

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
    post:
      description: |+
        Create virtual interfaces (Link Aggregation, VLAN)

        For BRIDGE `type` the following attribute is required: bridge_members.

        For LINK_AGGREGATION `type` the following attributes are required: lag_ports,
        lag_protocol.

        For VLAN `type` the following attributes are required: vlan_parent_interface,
        vlan_tag and vlan_pcp.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/id/{id}:
    delete:
      description: Delete Interface of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
    get:
      description: |-
        Query Interfaces with `query-filters` and `query-options`

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
    put:
      description: |+
        Update Interface of `id`.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/bridge_members_choices:
    post:
      description: |-
        Return available interface choices that can be added to a `br` (bridge) interface.

        `id` is name of existing bridge interface on the system that will have its member
                interfaces included.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_bridge_members_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/cancel_rollback:
    get:
      description: |-
        If this method is called after interface changes have been committed and within the checkin timeout,
        then the task that automatically rollsback any interface changes is cancelled and the in-memory snapshot
        of database tables for the various interface tables will NOT be cleared.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/checkin:
    get:
      description: |-
        If this method is called after interface changes have been committed and within the checkin timeout,
        then the task that automatically rollsback any interface changes is cancelled and the in-memory snapshot
        of database tables for the various interface tables will be cleared. The idea is that the end-user has
        verified the changes work as intended and need to be committed permanently.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/checkin_waiting:
    get:
      description: |-
        Returns whether or not we are waiting user to checkin the applied network changes
        before they are rolled back.
        Value is in number of seconds or null.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/choices:
    post:
      description: |-
        Choices of available network interfaces.

        `bridge_members` will include BRIDGE members.
        `lag_ports` will include LINK_AGGREGATION ports.
        `vlan_parent` will include VLAN parent interface.
        `exclude` is a list of interfaces prefix to remove.
        `include` is a list of interfaces that should not be removed.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/commit:
    post:
      description: |-
        Commit/apply pending interfaces changes.

        `rollback` as true (default) will rollback changes in case they fail to apply.
        `checkin_timeout` is the time in seconds it will wait for the checkin call to acknowledge
        the interfaces changes happened as planned from the user. If checkin does not happen
        within this period of time the changes will get reverted.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_commit_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/default_route_will_be_removed:
    get:
      description: |-
        On a fresh install of SCALE, dhclient is started for every interface so IP
        addresses/routes could be installed via that program. However, when the
        end-user goes to configure the first interface we tear down all other interfaces
        configs AND delete the default route. We also remove the default route if the
        configured gateway doesn't match the one currently installed in kernel.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/has_pending_changes:
    get:
      description: Returns whether there are pending interfaces changes to be applied
        or not.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/ip_in_use:
    post:
      description: |-
        Get all IPv4 / Ipv6 from all valid interfaces, excluding tap and epair.

        `loopback` will return loopback interface addresses.

        `any` will return wildcard addresses (0.0.0.0 and ::).

        `static` when enabled will ensure we only return static ip's configured.

        Returns a list of dicts - eg -

        [
            {
                "type": "INET6",
                "address": "fe80::5054:ff:fe16:4aac",
                "netmask": 64
            },
            {
                "type": "INET",
                "address": "192.168.122.148",
                "netmask": 24,
                "broadcast": "192.168.122.255"
            },
        ]
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_ip_in_use_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/lacpdu_rate_choices:
    get:
      description: Available lacpdu rate policies for the LACP lagg type interfaces.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/lag_ports_choices:
    post:
      description: |-
        Return available interface choices that can be added to a `bond` (lag) interface.

        `id` is name of existing bond interface on the system that will have its member
                interfaces included.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_lag_ports_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/rollback:
    get:
      description: Rollback pending interfaces changes.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/save_default_route:
    post:
      description: |-
        This method exists _solely_ to provide a "warning" and therefore
        a path for remediation for when an end-user modifies an interface
        and we rip the default gateway out from underneath them without
        any type of warning.

        NOTE: This makes 2 assumptions
        1. interface.create/update/delete must have been called before
            calling this method
        2. this method must be called before `interface.sync` is called

        This method exists for the predominant scenario for new users...
        1. fresh install SCALE
        2. all interfaces start DHCPv4 (v6 is ignored for now)
        3. 1 of the interfaces receives an IP address
        4. along with the IP, the kernel receives a default route
            (by design, of course)
        5. user goes to configure this interface as having a static
            IP address
        6. as we go through and "sync" the changes, we remove the default
            route because it exists in the kernel FIB but doesn't exist
            in the database.
        7. IF the user is connecting via layer3, then they will lose all
            access to the TrueNAS and never be able to finalize the changes
            to the network because we ripped out the default route which
            is how they were communicating to begin with.

        In the above scenario, we're going to try and prevent this by doing
        the following:
        1. fresh install SCALE
        2. all interfaces start DHCPv4
        3. default route is received
        4. user configures an interface
        5. When user pushes "Test Changes" (interface.sync), webUI will call
            network.configuration.default_route_will_be_removed BEFORE interface.sync
        6. if network.configuration.default_route_will_be_removed returns True,
            then webUI will open a new modal dialog that gives the end-user
            ample warning/verbiage describing the situation. Furthermore, the
            modal will allow the user to input a default gateway
        7. if user gives gateway, webUI will call this method providing the info
            and we'll validate accordingly
        8. OR if user doesn't give gateway, they will need to "confirm" this is
            desired
        9. the default gateway provided to us (if given by end-user) will be stored
            in the same in-memory cache that we use for storing the interface changes
            and will be rolledback accordingly in this plugin just like everything else

        There are a few other scenarios where this is beneficial, but the one listed above
        is seen most often by end-users/support team.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_save_default_route_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/services_restarted_on_sync:
    get:
      description: |-
        Returns which services will be set to listen on 0.0.0.0 (and, thus, restarted) on sync.

        Example result:
        [
            // Samba service will be set ot listen on 0.0.0.0 and restarted because it was set up to listen on
            // 192.168.0.1 which is being removed.
            {"type": "SYSTEM_SERVICE", "service": "cifs", "ips": ["192.168.0.1"]},
        ]
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/vlan_parent_interface_choices:
    get:
      description: Return available interface choices for `vlan_parent_interface`
        attribute.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/xmit_hash_policy_choices:
    get:
      description: |-
        Available transmit hash policies for the LACP or LOADBALANCE
        lagg type interfaces.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface
  /interface/capabilities/get:
    post:
      description: |-
        Return enabled, disabled and supported capabilities (also known as features)
        on a given interface.

        `name` String representing name of the interface
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_capabilities_get_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface.capabilities
  /interface/capabilities/set:
    post:
      description: |-
        Enable or Disable capabilties (also known as features) on a given interface.

        `name` String representing name of the interface
        `capabilities` List representing capabilities to be acted upon
        `action` String when set to 'ENABLE' will enable `capabilities` else if set
                    to `DISABLE` will disable `capabilities`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interface_capabilities_set_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - interface.capabilities
  /ipmi:
    get:
      description: |-
        Query available IPMI Channels with `query-filters` and `query-options`.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ipmi
  /ipmi/id/{id}:
    get:
      description: |-
        Query available IPMI Channels with `query-filters` and `query-options`.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ipmi
    put:
      description: |-
        Update IPMI configuration on channel number `id`.

        `ipaddress` is an IPv4 address to be assigned to channel number `id`.
        `netmask` is the subnet mask associated with `ipaddress`.
        `gateway` is an IPv4 address used by `ipaddress` to reach outside the local subnet.
        `password` is a password to be assigned to channel number `id`
        `dhcp` is a boolean. If False, `ipaddress`, `netmask` and `gateway` must be set.
        `vlan` is an integer representing the vlan tag number.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ipmi
  /ipmi/channels:
    get:
      description: Return a list of available IPMI channels.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ipmi
  /ipmi/clear_sel:
    get:
      description: Clear IPMI system event log.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ipmi
  /ipmi/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ipmi_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ipmi
  /ipmi/identify:
    post:
      description: |-
        Turn on chassis identify light.

        `seconds` is an integer representing the number of seconds to leave the chassis identify light turned on.
            - default is 15 seconds
            - to turn it off, specify `seconds` as 0
        `force` is a boolean. When True, turn on chassis identify light indefinitely.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ipmi_identify_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ipmi
  /ipmi/is_loaded:
    get:
      description: Returns a boolean value indicating if `IPMI_DEV` is loaded.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ipmi
  /ipmi/query_sel:
    get:
      description: |-
        Query IPMI system extended event log.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ipmi
  /iscsi/auth:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.auth
    post:
      description: |-
        Create an iSCSI Authorized Access.

        `tag` should be unique among all configured iSCSI Authorized Accesses.

        `secret` and `peersecret` should have length between 12-16 letters inclusive.

        `peeruser` and `peersecret` are provided only when configuring mutual CHAP. `peersecret` should not be
        similar to `secret`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_auth_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.auth
  /iscsi/auth/id/{id}:
    delete:
      description: Delete iSCSI Authorized Access of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.auth
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.auth
    put:
      description: Update iSCSI Authorized Access of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.auth
  /iscsi/auth/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_auth_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.auth
  /iscsi/extent:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.extent
    post:
      description: |-
        Create an iSCSI Extent.

        When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if
        not zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.

        With `type` being set to DISK, a valid ZFS volume is required.

        `insecure_tpc` when enabled allows an initiator to bypass normal access control and access any scannable
        target. This allows xcopy operations otherwise blocked by access control.

        `xen` is a boolean value which is set to true if Xen is being used as the iSCSI initiator.

        `ro` when set to true prevents the initiator from writing to this LUN.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_extent_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.extent
  /iscsi/extent/id/{id}:
    delete:
      description: |-
        Delete iSCSI Extent of `id`.

        If `id` iSCSI Extent's `type` was configured to FILE, `remove` can be set to remove the configured file.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.extent
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.extent
    put:
      description: Update iSCSI Extent of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.extent
  /iscsi/extent/disk_choices:
    get:
      description: |-
        Return a dict of available zvols that can be used
        when creating an extent.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.extent
  /iscsi/extent/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_extent_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.extent
  /iscsi/global:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.global
    put:
      description: '`alua` is a no-op for FreeNAS.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_global_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.global
  /iscsi/global/alua_enabled:
    get:
      description: Returns whether iSCSI ALUA is enabled or not.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.global
  /iscsi/global/client_count:
    get:
      description: Return currently connected clients count.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.global
  /iscsi/global/sessions:
    get:
      description: |-
        Get a list of currently running iSCSI sessions. This includes initiator and target names
        and the unique connection IDs.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.global
  /iscsi/host:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.host
    post:
      description: |-
        Creates iSCSI host.

        `ip` indicates an IP address of the host.
        `description` is a human-readable name for the host.
        `iqns` is a list of initiator iSCSI Qualified Names.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_host_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.host
  /iscsi/host/id/{id}:
    delete:
      description: Update iSCSI host `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.host
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.host
    put:
      description: Update iSCSI host `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.host
  /iscsi/host/get_initiators:
    post:
      description: Returns initiator groups associated with host `id`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_host_get_initiators_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.host
  /iscsi/host/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_host_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.host
  /iscsi/host/get_targets:
    post:
      description: Returns targets associated with host `id`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_host_get_targets_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.host
  /iscsi/host/set_initiators:
    post:
      description: |-
        Associates initiator groups `ids` with host `id`.
        Use `force` if you want to allow adding first or removing last initiator from initiator groups.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_host_set_initiators'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.host
  /iscsi/host/set_targets:
    post:
      description: Associates targets `ids` with host `id`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_host_set_targets'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.host
  /iscsi/initiator:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.initiator
    post:
      description: |-
        Create an iSCSI Initiator.

        `initiators` is a list of initiator hostnames which are authorized to access an iSCSI Target. To allow all
        possible initiators, `initiators` can be left empty.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_initiator_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.initiator
  /iscsi/initiator/id/{id}:
    delete:
      description: Delete iSCSI initiator of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.initiator
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.initiator
    put:
      description: Update iSCSI initiator of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.initiator
  /iscsi/initiator/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_initiator_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.initiator
  /iscsi/portal:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.portal
    post:
      description: |-
        Create a new iSCSI Portal.

        `discovery_authgroup` is required for CHAP and CHAP_MUTUAL.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_portal_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.portal
  /iscsi/portal/id/{id}:
    delete:
      description: Delete iSCSI Portal `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.portal
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.portal
    put:
      description: Update iSCSI Portal `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.portal
  /iscsi/portal/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_portal_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.portal
  /iscsi/portal/listen_ip_choices:
    get:
      description: Returns possible choices for `listen.ip` attribute of portal create
        and update.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.portal
  /iscsi/target:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.target
    post:
      description: |-
        Create an iSCSI Target.

        `groups` is a list of group dictionaries which provide information related to using a `portal`, `initiator`,
        `authmethod` and `auth` with this target. `auth` represents a valid iSCSI Authorized Access and defaults to
        null.

        `auth_networks` is a list of IP/CIDR addresses which are allowed to use this initiator. If all networks are
        to be allowed, this field should be left empty.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_target_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.target
  /iscsi/target/id/{id}:
    delete:
      description: |-
        Delete iSCSI Target of `id`.

        Deleting an iSCSI Target makes sure we delete all Associated Targets which use `id` iSCSI Target.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.target
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.target
    put:
      description: Update iSCSI Target of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.target
  /iscsi/target/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_target_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.target
  /iscsi/targetextent:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.targetextent
    post:
      description: |-
        Create an Associated Target.

        `lunid` will be automatically assigned if it is not provided based on the `target`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_targetextent_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.targetextent
  /iscsi/targetextent/id/{id}:
    delete:
      description: Delete Associated Target of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.targetextent
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.targetextent
    put:
      description: Update Associated Target of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.targetextent
  /iscsi/targetextent/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iscsi_targetextent_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - iscsi.targetextent
  /kerberos:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos
    put:
      description: |-
        `appdefaults_aux` add parameters to "appdefaults" section of the krb5.conf file.

        `libdefaults_aux` add parameters to "libdefaults" section of the krb5.conf file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos
  /kerberos/keytab:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.keytab
    post:
      description: |-
        Create a kerberos keytab. Uploaded keytab files will be merged with the system
        keytab under /etc/krb5.keytab.

        `file` b64encoded kerberos keytab
        `name` name for kerberos keytab
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_keytab_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.keytab
  /kerberos/keytab/id/{id}:
    delete:
      description: |-
        Delete kerberos keytab by id, and force regeneration of
        system keytab.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.keytab
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.keytab
    put:
      description: Update kerberos keytab by id.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.keytab
  /kerberos/keytab/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_keytab_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.keytab
  /kerberos/keytab/system_keytab_list:
    get:
      description: Returns content of system keytab (/etc/krb5.keytab).
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.keytab
  /kerberos/keytab/upload_keytab:
    post:
      description: |-
        Upload a keytab file. This method expects the keytab file to be uploaded using
        the /_upload/ endpoint.

        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_keytab_upload_keytab_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.keytab
  /kerberos/realm:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.realm
    post:
      description: |-
        Create a new kerberos realm. This will be automatically populated during the
        domain join process in an Active Directory environment. Kerberos realm names
        are case-sensitive, but convention is to only use upper-case.

        Entries for kdc, admin_server, and kpasswd_server are not required.
        If they are unpopulated, then kerberos will use DNS srv records to
        discover the correct servers. The option to hard-code them is provided
        due to AD site discovery. Kerberos has no concept of Active Directory
        sites. This means that middleware performs the site discovery and
        sets the kerberos configuration based on the AD site.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_realm_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.realm
  /kerberos/realm/id/{id}:
    delete:
      description: Delete a kerberos realm by ID.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.realm
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.realm
    put:
      description: |-
        Update a kerberos realm by id. This will be automatically populated during the
        domain join process in an Active Directory environment. Kerberos realm names
        are case-sensitive, but convention is to only use upper-case.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.realm
  /kerberos/realm/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberos_realm_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kerberos.realm
  /keychaincredential:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
    post:
      description: |+
        Create a Keychain Credential

        Create a Keychain Credential of any type.
        Every Keychain Credential has a `name` which is used to distinguish it from others.
        The following `type`s are supported:
         * `SSH_KEY_PAIR`
           Which `attributes` are:
           * `private_key`
           * `public_key` (which can be omitted and thus automatically derived from private key)
           At least one attribute is required.

         * `SSH_CREDENTIALS`
           Which `attributes` are:
           * `host`
           * `port` (default 22)
           * `username` (default root)
           * `private_key` (Keychain Credential ID)
           * `remote_host_key` (you can use `keychaincredential.remote_ssh_host_key_scan` do discover it)
           * `cipher`: one of `STANDARD`, `FAST`, or `DISABLED` (last requires special support from both SSH server and
             client)
           * `connect_timeout` (default 10)

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
  /keychaincredential/id/{id}:
    delete:
      description: |+
        Delete Keychain Credential with specific `id`

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
    put:
      description: |+
        Update a Keychain Credential with specific `id`

        Please note that you can't change `type`

        Also you must specify full `attributes` value

        See the documentation for `create` method for information on payload contents

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
  /keychaincredential/generate_ssh_key_pair:
    get:
      description: |+
        Generate a public/private key pair

        Generate a public/private key pair (useful for `SSH_KEY_PAIR` type)

      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
  /keychaincredential/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
  /keychaincredential/remote_ssh_host_key_scan:
    post:
      description: |+
        Discover a remote host key

        Discover a remote host key (useful for `SSH_CREDENTIALS`)

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_remote_ssh_host_key_scan_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
  /keychaincredential/remote_ssh_semiautomatic_setup:
    post:
      description: |+
        Perform semi-automatic SSH connection setup with other FreeNAS machine

        Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`
        credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and
        temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
        `SSH_CREDENTIALS` attributes such as `cipher` and `connect_timeout` can be specified as well.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_remote_ssh_semiautomatic_setup_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
  /keychaincredential/setup_ssh_connection:
    post:
      description: |-
        Creates a SSH Connection performing the following steps:

        1) Generating SSH Key Pair if required
        2) Setting up SSH Credentials based on `setup_type`

        In case (2) fails, it will be ensured that SSH Key Pair generated ( if applicable ) in the process is
        removed.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_setup_ssh_connection_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
  /keychaincredential/used_by:
    post:
      description: Returns list of objects that use this credential.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keychaincredential_used_by_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - keychaincredential
  /kmip:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kmip
    put:
      description: |-
        Update KMIP Server Configuration.

        System currently authenticates connection with remote KMIP Server with a TLS handshake. `certificate` and
        `certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.

        `validate` is enabled by default. When enabled, system will test connection to `server` making sure
        it's reachable.

        `manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.
        When disabled, if there are any keys left to be retrieved from the KMIP server,
        it will sync them back to local database.

        `enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users
        can still perform this action by enabling `force_clear`.

        `ssl_version` can be specified to match the ssl configuration being used by KMIP server.

        `change_server` is a boolean field which allows users to migrate data between two KMIP servers. System
        will first migrate keys from old KMIP server to local database and then migrate the keys from local database
        to new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass
        this by enabling `force_clear`.

        `force_clear` is a boolean option which when enabled will in this case remove all
        pending keys to be synced from database. It should be used with extreme caution as users may end up with
        not having ZFS dataset or SED disks keys leaving them locked forever. It is disabled by default.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kmip_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kmip
  /kmip/clear_sync_pending_keys:
    get:
      description: |-
        Clear all keys which are pending to be synced between KMIP server and TN database.

        For ZFS/SED keys, we remove the UID from local database with which we are able to retrieve ZFS/SED keys.
        It should be used with caution.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kmip
  /kmip/kmip_sync_pending:
    get:
      description: |-
        Returns true or false based on if there are keys which are to be synced from local database to remote KMIP
        server or vice versa.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kmip
  /kmip/ssl_version_choices:
    get:
      description: Retrieve valid SSL version choices to be used when configuring
        kmip service.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kmip
  /kmip/sync_keys:
    get:
      description: Sync ZFS/SED keys between KMIP Server and TN database.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kmip
  /kubernetes:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kubernetes
    put:
      description: |-
        `pool` must be a valid ZFS pool configured in the system. Kubernetes service will initialise the pool by
        creating datasets under `pool_name/ix-applications`.

        `configure_gpus` is a boolean to enable or disable to prevent automatically loading any GPU Support
        into kubernetes. This includes not loading any daemonsets for Intel and NVIDIA support.

        `servicelb` is a boolean to enable or disable the integrated k3s Service Loadbalancer called "Klipper".
        This can be set to disabled to enable the user to run another LoadBalancer or no LoadBalancer at all.

        `cluster_cidr` is the CIDR to be used for default NAT network between workloads.

        `service_cidr` is the CIDR to be used for kubernetes services which are an abstraction and refer to a
        logically set of kubernetes pods.

        `cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range
        of `service_cidr`.

        Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change
        requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset
        and any data within it when any of the values for the above configuration change.

        `node_ip` is the IP address which the kubernetes cluster will assign to the TrueNAS node. It defaults to
        0.0.0.0 and the cluster in this case will automatically manage which IP address to use for managing traffic
        for default NAT network.

        By default kubernetes pods will be using default gateway of the system for outward traffic. This might
        not be desirable for certain users who want to separate NAT traffic over a specific interface / route. System
        will create a L3 network which will be routing the traffic towards default gateway for NAT.

        If users want to restrict traffic over a certain gateway / interface, they can specify a default route
        for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes
        cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default
        route for IPv6 traffic.

        In case user is switching pools and the new desired pool has not been configured for kubernetes before, it
        is possible to replicate data from old pool to new pool with setting `migrate_applications` attribute. This
        will replicate contents of old pool's ix-applications dataset to the new pool.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kubernetes
  /kubernetes/backup_chart_releases:
    post:
      description: |-
        Create a backup of existing chart releases.

        The backup will save helm configuration with history for each chart release and then take a
        snapshot of `ix-applications` dataset.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes_backup_chart_releases_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kubernetes
  /kubernetes/bindip_choices:
    get:
      description: Returns ip choices for Kubernetes service to use.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kubernetes
  /kubernetes/delete_backup:
    post:
      description: Delete `backup_name` chart releases backup.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes_delete_backup_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kubernetes
  /kubernetes/events:
    get:
      description: Returns events for kubernetes node.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kubernetes
  /kubernetes/list_backups:
    get:
      description: List existing chart releases backups.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kubernetes
  /kubernetes/node_ip:
    get:
      description: Returns IP used by kubernetes which kubernetes uses to allow incoming
        connections.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kubernetes
  /kubernetes/restore_backup:
    post:
      description: |-
        Restore `backup_name` chart releases backup.

        It should be noted that a rollback will be initiated which will destroy any newer snapshots/clones
        of `ix-applications` dataset then the snapshot in question of `backup_name`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubernetes_restore_backup'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kubernetes
  /kubernetes/route_interface_choices:
    get:
      description: Returns Interface choices for Kubernetes service to use for ipv4
        connections.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - kubernetes
  /ldap:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ldap
    put:
      description: |-
        `hostname` list of ip addresses or hostnames of LDAP servers with
        which to communicate in order of preference. Failover only occurs
        if the current LDAP server is unresponsive.

        `basedn` specifies the default base DN to use when performing ldap
        operations. The base must be specified as a Distinguished Name in LDAP
        format.

        `binddn` specifies the default bind DN to use when performing ldap
        operations. The bind DN must be specified as a Distinguished Name in
        LDAP format.

        `anonbind` use anonymous authentication.

        `ssl` establish SSL/TLS-protected connections to the LDAP server(s).
        GSSAPI signing is disabled on SSL/TLS-protected connections if
        kerberos authentication is used.

        `certificate` LDAPs client certificate to be used for certificate-
        based authentication.

        `validate_certificates` specifies whether to perform checks on server
        certificates in a TLS session. If enabled, TLS_REQCERT demand is set.
        The server certificate is requested. If no certificate is provided or
        if a bad certificate is provided, the session is immediately terminated.
        If disabled, TLS_REQCERT allow is set. The server certificate is
        requested, but all errors are ignored.

        `kerberos_realm` in which the server is located. This parameter is
        only required for SASL GSSAPI authentication to the remote LDAP server.

        `kerberos_principal` kerberos principal to use for SASL GSSAPI
        authentication to the remote server. If `kerberos_realm` is specified
        without a keytab, then the `binddn` and `bindpw` are used to
        perform to obtain the ticket necessary for GSSAPI authentication.

        `timeout` specifies  a  timeout  (in  seconds) after which calls to
        synchronous LDAP APIs will abort if no response is received.

        `dns_timeout` specifies the timeout (in seconds) after which the
        poll(2)/select(2) following a connect(2) returns in case of no activity
        for openldap. For nslcd this specifies the time limit (in seconds) to
        use when connecting to the directory server. This directly impacts the
        length of time that the LDAP service tries before failing over to
        a secondary LDAP URI.

        `has_samba_schema` determines whether to configure samba to use the
        ldapsam passdb backend to provide SMB access to LDAP users. This feature
        requires the presence of Samba LDAP schema extensions on the remote
        LDAP server.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ldap_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ldap
  /ldap/get_state:
    get:
      description: |-
        Wrapper function for 'directoryservices.get_state'. Returns only the state of the
        LDAP service.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ldap
  /ldap/schema_choices:
    get:
      description: Returns list of available LDAP schema choices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ldap
  /ldap/ssl_choices:
    get:
      description: Returns list of SSL choices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ldap
  /mail:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - mail
    put:
      description: |-
        Update Mail Service Configuration.

        `fromemail` is used as a sending address which the mail server will use for sending emails.

        `outgoingserver` is the hostname or IP address of SMTP server used for sending an email.

        `security` is type of encryption desired.

        `smtp` is a boolean value which when set indicates that SMTP authentication has been enabled and `user`/`pass`
        are required attributes now.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mail_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - mail
  /mail/send:
    post:
      description: |-
        Sends mail using configured mail settings.

        `text` will be formatted to HTML using Markdown and rendered using default E-Mail template.
        You can put your own HTML using `html`. If `html` is null, no HTML MIME part will be added to E-Mail.

        If `attachments` is true, a list compromised of the following dict is required
        via HTTP upload:
          - headers(list)
            - name(str)
            - value(str)
            - params(dict)
          - content (str)

        [
         {
          "headers": [
           {
            "name": "Content-Transfer-Encoding",
            "value": "base64"
           },
           {
            "name": "Content-Type",
            "value": "application/octet-stream",
            "params": {
             "name": "test.txt"
            }
           }
          ],
          "content": "dGVzdAo="
         }
        ]

        A file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mail_send'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - mail
  /network/configuration:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - network.configuration
    put:
      description: |-
        Update Network Configuration Service configuration.

        `ipv4gateway` if set is used instead of the default gateway provided by DHCP.

        `nameserver1` is primary DNS server.

        `nameserver2` is secondary DNS server.

        `nameserver3` is tertiary DNS server.

        `httpproxy` attribute must be provided if a proxy is to be used for network operations.

        `netwait_enabled` is a boolean attribute which when set indicates that network services will not start at
        boot unless they are able to ping the addresses listed in `netwait_ip` list.

        `service_announcement` determines the broadcast protocols that will be used to advertise the server.
        `netbios` enables the NetBIOS name server (NBNS), which starts concurrently with the SMB service. SMB clients
        will only perform NBNS lookups if SMB1 is enabled. NBNS may be required for legacy SMB clients.
        `mdns` enables multicast DNS service announcements for enabled services. `wsd` enables Web Service
        Discovery support.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network_configuration_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - network.configuration
  /network/configuration/activity_choices:
    get:
      description: Returns allowed/forbidden network activity choices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - network.configuration
  /network/general/summary:
    get:
      description: |+
        Retrieve general information for current Network.

        Returns a dictionary. For example:

      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - network.general
  /nfs:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - nfs
    put:
      description: |+
        Update NFS Service Configuration.

        `servers` represents number of servers to create.

        When `allow_nonroot` is set, it allows non-root mount requests to be served.

        `bindip` is a list of IP's on which NFS will listen for requests. When it is unset/empty, NFS listens on
        all available addresses.

        `v4` when set means that we switch from NFSv3 to NFSv4.

        `v4_v3owner` when set means that system will use NFSv3 ownership model for NFSv4.

        `v4_krb` will force NFS shares to fail if the Kerberos ticket is unavailable.

        `v4_domain` overrides the default DNS domain name for NFSv4.

        `mountd_port` specifies the port mountd(8) binds to.

        `rpcstatd_port` specifies the port rpc.statd(8) binds to.

        `rpclockd_port` specifies the port rpclockd_port(8) binds to.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nfs_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - nfs
  /nfs/add_principal:
    post:
      description: |-
        Use user-provided admin credentials to kinit, add NFS SPN
        entries to the remote kerberos server, and then append the new entries
        to our system keytab.

        Currently this is only supported in AD environments.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nfs_add_principal_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - nfs
  /nfs/bindip_choices:
    get:
      description: Returns ip choices for NFS service to use
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - nfs
  /nfs/client_count:
    get:
      description: |-
        Return currently connected clients count.
        Count may not be accurate if NFSv3 protocol is in use
        due to potentially stale rmtab entries.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - nfs
  /nfs/get_nfs3_clients:
    get:
      description: |-
        Read contents of rmtab. This information may not
        be accurate due to stale entries. This is ultimately
        a limitation of the NFSv3 protocol.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - nfs
  /nfs/get_nfs4_clients:
    get:
      description: |-
        Read information about NFSv4 clients from
        /proc/fs/nfsd/clients

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - nfs
  /openvpn/client:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - openvpn.client
    put:
      description: |-
        Update OpenVPN Client configuration.

        `remote` can be a valid ip address / domain which openvpn will try to connect to.

        `nobind` must be enabled if OpenVPN client / server are to run concurrently.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openvpn_client_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - openvpn.client
  /openvpn/client/authentication_algorithm_choices:
    get:
      description: Returns a dictionary of valid authentication algorithms which can
        be used with OpenVPN server.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - openvpn.client
  /openvpn/client/cipher_choices:
    get:
      description: Returns a dictionary of valid ciphers which can be used with OpenVPN
        server.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - openvpn.client
  /openvpn/server:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - openvpn.server
    put:
      description: |-
        Update OpenVPN Server configuration.

        When `tls_crypt_auth_enabled` is enabled and `tls_crypt_auth` not provided, a static key is automatically
        generated to be used with OpenVPN server.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openvpn_server_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - openvpn.server
  /openvpn/server/authentication_algorithm_choices:
    get:
      description: Returns a dictionary of valid authentication algorithms which can
        be used with OpenVPN server.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - openvpn.server
  /openvpn/server/cipher_choices:
    get:
      description: Returns a dictionary of valid ciphers which can be used with OpenVPN
        server.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - openvpn.server
  /openvpn/server/client_configuration_generation:
    post:
      description: |-
        Returns a configuration for OpenVPN client which can be used with any client to connect to FN/TN OpenVPN
        server.

        `client_certificate_id` should be a valid certificate issued for use with OpenVPN client service.

        `server_address` if specified auto-fills the remote directive in the OpenVPN configuration enabling the end
        user to use the file without making any edits to connect to OpenVPN server.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openvpn_server_client_configuration_generation'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - openvpn.server
  /openvpn/server/renew_static_key:
    get:
      description: Reset OpenVPN server's TLS static key which will be used to encrypt/authenticate
        control channel packets.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - openvpn.server
  /pool:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
    post:
      description: |+
        Create a new ZFS Pool.

        `topology` is a object which requires at least one `data` entry.
        All of `data` entries (vdevs) require to be of the same type.

        `deduplication` when set to ON or VERIFY makes sure that no block of data is duplicated in the pool. When
        VERIFY is specified, if two blocks have similar signatures, byte to byte comparison is performed to ensure that
        the blocks are identical. This should be used in special circumstances as it carries a significant overhead.

        `encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.

        `encryption_options` specifies configuration for encryption of root dataset for `name` pool.
        `encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase
        as a key.
        Otherwise a hex encoded key can be specified by providing `encryption_options.key`.
        `encryption_options.generate_key` when enabled automatically generates the key to be used
        for dataset encryption.

        It should be noted that keys are stored by the system for automatic locking/unlocking
        on import/export of encrypted datasets. If that is not desired, dataset should be created
        with a passphrase as a key.

        Example of `topology`:

            {
                "data": [
                    {"type": "RAIDZ1", "disks": ["da1", "da2", "da3"]}
                ],
                "cache": [
                    {"type": "STRIPE", "disks": ["da4"]}
                ],
                "log": [
                    {"type": "STRIPE", "disks": ["da5"]}
                ],
                "spares": ["da6"]
            }


      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
    put:
      description: |+
        Update pool of `id`, adding the new topology.

        The `type` of `data` must be the same of existing vdevs.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/attach:
    post:
      description: |-
        For TrueNAS Core/Enterprise platform, if the `oid` pool is passphrase GELI encrypted, `passphrase`
        must be specified for this operation to succeed.

        `target_vdev` is the GUID of the vdev where the disk needs to be attached. In case of STRIPED vdev, this
        is the STRIPED disk GUID which will be converted to mirror. If `target_vdev` is mirror, it will be converted
        into a n-way mirror.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_attach'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/attachments:
    post:
      description: |-
        Return a list of services dependent of this pool.

        Responsible for telling the user whether there is a related
        share, asking for confirmation.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/detach:
    post:
      description: |+
        Detach a disk from pool of id `id`.

        `label` is the vdev guid or device name.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/expand:
    post:
      description: Expand pool to fit all available disk space.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/export:
    post:
      description: |+
        Export pool of `id`.

        `cascade` will delete all attachments of the given pool (`pool.attachments`).
        `restart_services` will restart services that have open files on given pool.
        `destroy` will also PERMANENTLY destroy the pool/data.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/filesystem_choices:
    post:
      description: |+
        Returns all available datasets, except the following:
            1. system datasets
            2. glusterfs datasets
            3. application(s) internal datasets

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_filesystem_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/get_disks:
    post:
      description: |-
        Get all disks in use by pools.
        If `id` is provided only the disks from the given pool `id` will be returned.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/get_instance_by_name:
    post:
      description: "Returns pool with name `name`. If `name` is not found, Validation\
        \ error is raised."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_get_instance_by_name_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/import_disk:
    post:
      description: |+
        Import a disk, by copying its content to a pool.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_import_disk'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/import_disk_autodetect_fs_type:
    post:
      description: |+
        Autodetect filesystem type for `pool.import_disk`.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_import_disk_autodetect_fs_type_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/import_disk_msdosfs_locales:
    get:
      description: Get a list of locales for msdosfs type to be used in `pool.import_disk`.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/import_find:
    get:
      description: |-
        Returns a job id which can be used to retrieve a list of pools available for
        import with the following details as a result of the job:
        name, guid, status, hostname.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/import_pool:
    post:
      description: |+
        Import a pool found with `pool.import_find`.

        If a `name` is specified the pool will be imported using that new name.

        `passphrase` DEPRECATED. GELI not supported on SCALE.

        If `enable_attachments` is set to true, attachments that were disabled during pool export will be
        re-enabled.

        Errors:
            ENOENT - Pool not found

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_import_pool_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/is_upgraded:
    post:
      description: |+
        Returns whether or not the pool of `id` is on the latest version and with all feature
        flags enabled.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/offline:
    post:
      description: |+
        Offline a disk from pool of id `id`.

        `label` is the vdev guid or device name.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/online:
    post:
      description: |+
        Online a disk from pool of id `id`.

        `label` is the vdev guid or device name.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/processes:
    post:
      description: Returns a list of running processes using this pool.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/remove:
    post:
      description: |+
        Remove a disk from pool of id `id`.

        `label` is the vdev guid or device name.

        Error codes:

            EZFS_NOSPC(2032): out of space to remove a device
            EZFS_NODEVICE(2017): no such device in pool
            EZFS_NOREPLICAS(2019): no valid replicas

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/replace:
    post:
      description: |+
        Replace a disk on a pool.

        `label` is the ZFS guid or a device name
        `disk` is the identifier of a disk
        If `preserve_settings` is true, then settings (power management, S.M.A.R.T., etc.) of a disk being replaced
        will be applied to a new disk.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/scrub:
    post:
      description: |+
        Performs a scrub action to pool of `id`.

        `action` can be either of "START", "STOP" or "PAUSE".

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/id/{id}/upgrade:
    post:
      description: |+
        Upgrade pool of `id` to latest version with all feature flags.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool
  /pool/dataset:
    get:
      description: |-
        Query Pool Datasets with `query-filters` and `query-options`.

        We provide two ways to retrieve datasets. The first is a flat structure (default), where
        all datasets in the system are returned as separate objects which contain all data
        there is for their children. This retrieval type is slightly slower because of duplicates in each object.
        The second type is hierarchical, where only top level datasets are returned in the list. They contain all the
        children in the `children` key. This retrieval type is slightly faster.
        These options are controlled by the `query-options.extra.flat` attribute (default true).

        In some cases it might be desirable to only retrieve details of a dataset itself and not it's children, in this
        case `query-options.extra.retrieve_children` should be explicitly specified and set to `false` which will
        result in children not being retrieved.

        In case only some properties are desired to be retrieved for datasets, consumer should specify
        `query-options.extra.properties` which when `null` ( which is the default ) will retrieve all properties
        and otherwise a list can be specified like `["type", "used", "available"]` to retrieve selective properties.
        If no properties are desired, in that case an empty list should be sent.

        `query-options.extra.snapshots` can be set to retrieve snapshot(s) of dataset in question.

        `query-options.extra.snapshots_recursive` can be set to retrieve snapshot(s) recursively of dataset in question.
        If `query-options.extra.snapshots_recursive` and `query-options.extra.snapshots` are set, snapshot(s) will be
        retrieved recursively.

        `query-options.extra.snapshots_properties` can be specified to list out properties which should be retrieved
        for snapshot(s) related to each dataset. By default only name of the snapshot would be retrieved, however
        if `null` is specified all properties of the snapshot would be retrieved in this case.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
    post:
      description: |+
        Creates a dataset/zvol.

        `volsize` is required for type=VOLUME and is supposed to be a multiple of the block size.
        `sparse` and `volblocksize` are only used for type=VOLUME.

        `encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.
        There are 2 cases where ZFS encryption is not allowed for a dataset:
        1) Pool in question is GELI encrypted.
        2) If the parent dataset is encrypted with a passphrase and `name` is being created
           with a key for encrypting the dataset.

        `encryption_options` specifies configuration for encryption of dataset for `name` pool.
        `encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase
        as a key.
        Otherwise a hex encoded key can be specified by providing `encryption_options.key`.
        `encryption_options.generate_key` when enabled automatically generates the key to be used
        for dataset encryption.

        It should be noted that keys are stored by the system for automatic locking/unlocking
        on import/export of encrypted datasets. If that is not desired, dataset should be created
        with a passphrase as a key.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/id/{id}:
    delete:
      description: |+
        Delete dataset/zvol `id`.

        `recursive` will also delete/destroy all children datasets.
        `force` will force delete busy datasets.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
    get:
      description: |-
        Query Pool Datasets with `query-filters` and `query-options`.

        We provide two ways to retrieve datasets. The first is a flat structure (default), where
        all datasets in the system are returned as separate objects which contain all data
        there is for their children. This retrieval type is slightly slower because of duplicates in each object.
        The second type is hierarchical, where only top level datasets are returned in the list. They contain all the
        children in the `children` key. This retrieval type is slightly faster.
        These options are controlled by the `query-options.extra.flat` attribute (default true).

        In some cases it might be desirable to only retrieve details of a dataset itself and not it's children, in this
        case `query-options.extra.retrieve_children` should be explicitly specified and set to `false` which will
        result in children not being retrieved.

        In case only some properties are desired to be retrieved for datasets, consumer should specify
        `query-options.extra.properties` which when `null` ( which is the default ) will retrieve all properties
        and otherwise a list can be specified like `["type", "used", "available"]` to retrieve selective properties.
        If no properties are desired, in that case an empty list should be sent.

        `query-options.extra.snapshots` can be set to retrieve snapshot(s) of dataset in question.

        `query-options.extra.snapshots_recursive` can be set to retrieve snapshot(s) recursively of dataset in question.
        If `query-options.extra.snapshots_recursive` and `query-options.extra.snapshots` are set, snapshot(s) will be
        retrieved recursively.

        `query-options.extra.snapshots_properties` can be specified to list out properties which should be retrieved
        for snapshot(s) related to each dataset. By default only name of the snapshot would be retrieved, however
        if `null` is specified all properties of the snapshot would be retrieved in this case.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
    put:
      description: |+
        Updates a dataset/zvol `id`.

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/attachments:
    post:
      description: |-
        Return a list of services dependent of this dataset.

        Responsible for telling the user whether there is a related
        share, asking for confirmation.

        Example return value:
        [
          {
            "type": "NFS Share",
            "service": "nfs",
            "attachments": ["/mnt/tank/work"]
          }
        ]
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/change_key:
    post:
      description: |-
        Change encryption properties for `id` encrypted dataset.

        Changing dataset encryption to use passphrase instead of a key is not allowed if:

        1) It has encrypted roots as children which are encrypted with a key
        2) If it is a root dataset where the system dataset is located

        A file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_change_key'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/checksum_choices:
    get:
      description: Retrieve checksums supported for ZFS dataset.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/compression_choices:
    get:
      description: Retrieve compression algorithm supported by ZFS.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/destroy_snapshots:
    post:
      description: Destroy specified snapshots of a given dataset.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_destroy_snapshots'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/details:
    get:
      description: Retrieve all dataset(s) details outlining any services/tasks which
        might be consuming the dataset(s).
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/encryption_algorithm_choices:
    get:
      description: Retrieve encryption algorithms supported for ZFS dataset encryption.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/encryption_summary:
    post:
      description: |-
        Retrieve summary of all encrypted roots under `id`.

        Keys/passphrase can be supplied to check if the keys are valid.

        It should be noted that there are 2 keys which show if a recursive unlock operation is
        done for `id`, which dataset will be unlocked and if not why it won't be unlocked. The keys
        namely are "unlock_successful" and "unlock_error". The former is a boolean value showing if unlock
        would succeed/fail. The latter is description why it failed if it failed.

        In some cases it's possible that the provided key/passphrase is valid but the path where the dataset is
        supposed to be mounted after being unlocked already exists and is not empty. In this case, unlock operation
        would fail and `unlock_error` will reflect this error appropriately. This can be overridden by setting
        `encryption_root_summary_options.datasets.X.force` boolean flag or by setting
        `encryption_root_summary_options.force` flag. In practice, when the dataset is going to be unlocked
        and these flags have been provided to `pool.dataset.unlock`, system will rename the directory/file path
        where the dataset should be mounted resulting in successful unlock of the dataset.

        If a dataset is already unlocked, it will show up as true for "unlock_successful" regardless of what
        key user provided as the unlock keys in the output are to reflect what a real unlock operation would
        behave. If user is interested in seeing if a provided key is valid or not, then the key to look out for
        in the output is "valid_key" which based on what system has in database or if a user provided one, validates
        the key and sets a boolean value for the dataset.

        Example output:
        [
            {
                "name": "vol",
                "key_format": "PASSPHRASE",
                "key_present_in_database": false,
                "valid_key": true,
                "locked": true,
                "unlock_error": null,
                "unlock_successful": true
            },
            {
                "name": "vol/c1/d1",
                "key_format": "PASSPHRASE",
                "key_present_in_database": false,
                "valid_key": false,
                "locked": true,
                "unlock_error": "Provided key is invalid",
                "unlock_successful": false
            },
            {
                "name": "vol/c",
                "key_format": "PASSPHRASE",
                "key_present_in_database": false,
                "valid_key": false,
                "locked": true,
                "unlock_error": "Key not provided",
                "unlock_successful": false
            },
            {
                "name": "vol/c/d2",
                "key_format": "PASSPHRASE",
                "key_present_in_database": false,
                "valid_key": false,
                "locked": true,
                "unlock_error": "Child cannot be unlocked when parent "vol/c" is locked and provided key is invalid",
                "unlock_successful": false
            }
        ]

        A file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_encryption_summary'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/export_key:
    post:
      description: |-
        Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file
        where the same file can be used to unlock the dataset, otherwise it will be returned as string.

        Please refer to websocket documentation for downloading the file.

        A file might be downloaded from this endpoint. Please specify `?download=0` to fetch a method call result instead.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_export_key'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/export_keys:
    post:
      description: |-
        Export keys for `id` and its children which are stored in the system. The exported file is a JSON file
        which has a dictionary containing dataset names as keys and their keys as the value.

        Please refer to websocket documentation for downloading the file.

        A file will be downloaded from this endpoint.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_export_keys_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/get_quota:
    post:
      description: |-
        Return a list of the specified `quota_type` of quotas on the ZFS dataset `ds`.
        Support `query-filters` and `query-options`. used_bytes may not instantly
        update as space is used.

        When quota_type is not DATASET, each quota entry has these fields:

        `id` - the uid or gid to which the quota applies.

        `name` - the user or group name to which the quota applies. Value is
        null if the id in the quota cannot be resolved to a user or group. This
        indicates that the user or group does not exist on the server.

        `quota` - the quota size in bytes.  Absent if no quota is set.

        `used_bytes` - the amount of bytes the user has written to the dataset.
        A value of zero means unlimited.

        `obj_quota` - the number of objects that may be owned by `id`.
        A value of zero means unlimited.  Absent if no objquota is set.

        `obj_used` - the number of objects currently owned by `id`.

        Note: SMB client requests to set a quota granting no space will result
        in an on-disk quota of 1 KiB.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/inherit_parent_encryption_properties:
    post:
      description: |-
        Allows inheriting parent's encryption root discarding its current encryption settings. This
        can only be done where `id` has an encrypted parent and `id` itself is an encryption root.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_inherit_parent_encryption_properties_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/lock:
    post:
      description: |-
        Locks `id` dataset. It will unmount the dataset and its children before locking.

        After the dataset has been unmounted, system will set immutable flag on the dataset's mountpoint where
        the dataset was mounted before it was locked making sure that the path cannot be modified. Once the dataset
        is unlocked, it will not be affected by this change and consumers can continue consuming it.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_lock'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/mountpoint:
    post:
      description: |-
        Returns mountpoint for specific mounted dataset. If it is not mounted and `raise` is `true` (default), an
        error is raised. `null` is returned otherwise.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_mountpoint'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/permission:
    post:
      description: |+
        Set permissions for a dataset `id`. Permissions may be specified as
        either a posix `mode` or an `acl`. This method is a wrapper around
        `filesystem.setperm`, `filesystem.setacl`, and `filesystem.chown`

        `filesystem.setperm` is called if `mode` is specified.
        `filesystem.setacl` is called if `acl` is specified or if the
        option `set_default_acl` is selected.
        `filesystem.chown` is called if neither `mode` nor `acl` is
        specified.

        The following `options` are supported:

        `set_default_acl` - apply a default ACL appropriate for specified
        dataset. Default ACL is `NFS4_RESTRICTED` or `POSIX_RESTRICTED`
        ACL template builtin with additional entries builtin_users group
        and builtin_administrators group. See documentation for
        `filesystem.acltemplate` for more details.

        `stripacl` - this option must be set in order to apply a POSIX
        mode to a dataset that has a non-trivial ACL. The effect will
        be to remove existing ACL and replace with specified mode.

        `recursive` - apply permissions recursively to dataset (all files
        and directories will be impacted.

        `traverse` - permit recursive job to traverse filesystem boundaries
        (child datasets).

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/processes:
    post:
      description: |-
        Return a list of processes using this dataset.

        Example return value:

        [
          {
            "pid": 2520,
            "name": "smbd",
            "service": "cifs"
          },
          {
            "pid": 97778,
            "name": "minio",
            "cmdline": "/usr/local/bin/minio -C /usr/local/etc/minio server --address=0.0.0.0:9000 --quiet /mnt/tank/wk"
          }
        ]
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/promote:
    post:
      description: Promote the cloned dataset `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/recommended_zvol_blocksize:
    post:
      description: |+
        Helper method to get recommended size for a new zvol (dataset of type VOLUME).

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_recommended_zvol_blocksize_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/recordsize_choices:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/id/{id}/set_quota:
    post:
      description: |-
        There are three over-arching types of quotas for ZFS datasets.
        1) dataset quotas and refquotas. If a DATASET quota type is specified in
        this API call, then the API acts as a wrapper for `pool.dataset.update`.
        2) User and group quotas. These limit the amount of disk space consumed
        by files that are owned by the specified users or groups. If the respective
        "object quota" type is specfied, then the quota limits the number of objects
        that may be owned by the specified user or group.
        3) Project quotas. These limit the amount of disk space consumed by files
        that are owned by the specified project. Project quotas are not yet implemended.
        This API allows users to set multiple quotas simultaneously by submitting a
        list of quotas. The list may contain all supported quota types.
        `ds` the name of the target ZFS dataset.
        `quotas` specifies a list of `quota_entry` entries to apply to dataset.
        `quota_entry` entries have these required parameters:
        `quota_type`: specifies the type of quota to apply to the dataset. Possible
        values are USER, USEROBJ, GROUP, GROUPOBJ, and DATASET. USEROBJ and GROUPOBJ
        quotas limit the number of objects consumed by the specified user or group.
        `id`: the uid, gid, or name to which the quota applies. If quota_type is
        'DATASET', then `id` must be either `QUOTA` or `REFQUOTA`.
        `quota_value`: the quota size in bytes. Setting a value of `0` removes
        the user or group quota.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/snapshot_count:
    post:
      description: Returns snapshot count for specified `dataset`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_snapshot_count_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/unlock:
    post:
      description: |-
        Unlock dataset `id` (and its children if `unlock_options.recursive` is `true`).

        If `id` dataset is not encrypted an exception will be raised. There is one exception:
        when `id` is a root dataset and `unlock_options.recursive` is specified, encryption
        validation will not be performed for `id`. This allow unlocking encrypted children for the entire pool `id`.

        There are two ways to supply the key(s)/passphrase(s) for unlocking a dataset:

        1. Upload a json file which contains encrypted dataset keys (it will be read from the input pipe if
        `unlock_options.key_file` is `true`). The format is the one that is used for exporting encrypted dataset keys
        (`pool.export_keys`).

        2. Specify a key or a passphrase for each unlocked dataset using `unlock_options.datasets`.

        If `unlock_options.datasets.{i}.recursive` is `true`, a key or a passphrase is applied to all the encrypted
        children of a dataset.

        `unlock_options.toggle_attachments` controls whether attachments  should be put in action after unlocking
        dataset(s). Toggling attachments can theoretically lead to service interruption when daemons configurations are
        reloaded (this should not happen,  and if this happens it should be considered a bug). As TrueNAS does not have
        a state for resources that should be unlocked but are still locked, disabling this option will put the system
        into an inconsistent state so it should really never be disabled.

        In some cases it's possible that the provided key/passphrase is valid but the path where the dataset is
        supposed to be mounted after being unlocked already exists and is not empty. In this case, unlock operation
        would fail. This can be overridden by setting `unlock_options.datasets.X.force` boolean flag or by setting
        `unlock_options.force` flag. When any of these flags are set, system will rename the existing
        directory/file path where the dataset should be mounted resulting in successful unlock of the dataset.

        A file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_unlock'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/unlock_services_restart_choices:
    post:
      description: Get a mapping of services identifiers and labels that can be restart
        on dataset unlock.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_unlock_services_restart_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset
  /pool/dataset/userprop:
    get:
      description: |-
        Query all user properties for ZFS datasets.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset.userprop
    post:
      description: Create a user property for a given `id` dataset.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_userprop_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset.userprop
  /pool/dataset/userprop/id/{id}:
    delete:
      description: Delete user property `dataset_user_prop_delete.name` for `id` dataset.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset.userprop
    get:
      description: |-
        Query all user properties for ZFS datasets.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset.userprop
    put:
      description: Update `dataset_user_prop_update.name` user property for `id` dataset.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset.userprop
  /pool/dataset/userprop/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_dataset_userprop_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.dataset.userprop
  /pool/resilver:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.resilver
    put:
      description: |+
        Configure Pool Resilver Priority.

        If `begin` time is greater than `end` time it means it will rollover the day, e.g.
        begin = "19:00", end = "05:00" will increase pool resilver priority from 19:00 of one day
        until 05:00 of the next day.

        `weekday` follows crontab(5) values 0-7 (0 or 7 is Sun).

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_resilver_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.resilver
  /pool/scrub:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.scrub
    post:
      description: |+
        Create a scrub task for a pool.

        `threshold` refers to the minimum amount of time in days has to be passed before
        a scrub can run again.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_scrub_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.scrub
  /pool/scrub/id/{id}:
    delete:
      description: Delete scrub task of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.scrub
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.scrub
    put:
      description: Update scrub task of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.scrub
  /pool/scrub/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_scrub_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.scrub
  /pool/scrub/run:
    post:
      description: Initiate a scrub of a pool `name` if last scrub was performed more
        than `threshold` days before.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_scrub_run'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.scrub
  /pool/scrub/scrub:
    post:
      description: Start/Stop/Pause a scrub on pool `name`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_scrub_scrub'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.scrub
  /pool/snapshottask:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
    post:
      description: |+
        Create a Periodic Snapshot Task

        Create a Periodic Snapshot Task that will take snapshots of specified `dataset` at specified `schedule`.
        Recursive snapshots can be created if `recursive` flag is enabled. You can `exclude` specific child datasets
        or zvols from the snapshot.
        Snapshots will be automatically destroyed after a certain amount of time, specified by
        `lifetime_value` and `lifetime_unit`.
        If multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot
        will be kept until the last of these tasks reaches its expiry time.
        Snapshots will be named according to `naming_schema` which is a `strftime`-like template for snapshot name
        and must contain `%Y`, `%m`, `%d`, `%H` and `%M`.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_snapshottask_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
  /pool/snapshottask/id/{id}:
    delete:
      description: |+
        Delete a Periodic Snapshot Task with specific `id`

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
    put:
      description: |+
        Update a Periodic Snapshot Task with specific `id`

        See the documentation for `create` method for information on payload contents

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
  /pool/snapshottask/id/{id}/delete_will_change_retention_for:
    post:
      description: Returns a list of snapshots which will change the retention if
        periodic snapshot task `id` is deleted.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
  /pool/snapshottask/foreseen_count:
    post:
      description: |-
        Returns a number of snapshots (per-dataset) being retained if a periodic snapshot task with specific parameters
        is created.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_snapshottask_foreseen_count_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
  /pool/snapshottask/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_snapshottask_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
  /pool/snapshottask/max_count:
    get:
      description: Returns a maximum amount of snapshots (per-dataset) the system
        can sustain.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
  /pool/snapshottask/max_total_count:
    get:
      description: Returns a maximum amount of snapshots (total) the system can sustain.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
  /pool/snapshottask/id/{id}/run:
    post:
      description: Execute a Periodic Snapshot Task of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
  /pool/snapshottask/id/{id}/update_will_change_retention_for:
    post:
      description: |-
        Returns a list of snapshots which will change the retention if periodic snapshot task `id` is updated
        with `data`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - pool.snapshottask
  /privilege:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - privilege
    post:
      description: |-
        Creates a privilege.

        `name` is a name for privilege (must be unique).

        `local_groups` is a list of local user account group GIDs that gain this privilege.

        `ds_groups` is list of Directory Service group GIDs that will gain this privilege.

        `allowlist` is a list of API endpoints allowed for this privilege.

        `web_shell` controls whether users with this privilege are allowed to log in to the Web UI.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/privilege_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - privilege
  /privilege/id/{id}:
    delete:
      description: Delete the privilege `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - privilege
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - privilege
    put:
      description: Update the privilege `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - privilege
  /privilege/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/privilege_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - privilege
  /replication:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
    post:
      description: |+
        Create a Replication Task

        Create a Replication Task that will push or pull ZFS snapshots to or from remote host..

        * `name` specifies a name for replication task
        * `direction` specifies whether task will `PUSH` or `PULL` snapshots
        * `transport` is a method of snapshots transfer:
          * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
            great performance
            `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
          * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
            and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
            to be open on `netcat_active_side`
            `ssh_credentials` is also required for control connection
          * `LOCAL` replicates to or from localhost
          `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be
          passwordless) to run `zfs` command on the remote machine.
        * `source_datasets` is a non-empty list of datasets to replicate snapshots from
        * `target_dataset` is a dataset to put snapshots into. It must exist on target side
        * `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task
        * `properties` control whether we should send dataset properties along with snapshots
        * `periodic_snapshot_tasks` is a list of periodic snapshot task IDs that are sources of snapshots for this
          replication task. Only push replication tasks can be bound to periodic snapshot tasks.
        * `naming_schema` is a list of naming schemas for pull replication
        * `also_include_naming_schema` is a list of naming schemas for push replication
        * `name_regex` will replicate all snapshots which names match specified regular expression
        * `auto` allows replication to run automatically on schedule or after bound periodic snapshot task
        * `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic
          snapshot tasks can have a schedule
        * `restrict_schedule` restricts when replication task with bound periodic snapshot tasks runs. For example,
          you can have periodic snapshot tasks that run every 15 minutes, but only run replication task every hour.
        * Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or
          `restrict_schedule`
        * `allow_from_scratch` will destroy all snapshots on target side and replicate everything from scratch if none
          of the snapshots on target side matches source snapshots
        * `readonly` controls destination datasets readonly property:
          * `SET` will set all destination datasets to readonly=on after finishing the replication
          * `REQUIRE` will require all existing destination datasets to have readonly=on property
          * `IGNORE` will avoid this kind of behavior
        * `hold_pending_snapshots` will prevent source snapshots from being deleted by retention of replication fails
          for some reason
        * `retention_policy` specifies how to delete old snapshots on target side:
          * `SOURCE` deletes snapshots that are absent on source side
          * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`
          * `NONE` does not delete any snapshots
        * `compression` compresses SSH stream. Available only for SSH transport
        * `speed_limit` limits speed of SSH stream. Available only for SSH transport
        * `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`
        * `retries` specifies number of retries before considering replication failed

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/id/{id}:
    delete:
      description: |+
        Delete a Replication Task with specific `id`

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
    put:
      description: |+
        Update a Replication Task with specific `id`

        See the documentation for `create` method for information on payload contents

      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/count_eligible_manual_snapshots:
    post:
      description: |+
        Count how many existing snapshots of `dataset` match `naming_schema`.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_count_eligible_manual_snapshots_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/create_dataset:
    post:
      description: |+
        Creates dataset on remote side

        Accepts `dataset` name, `transport` and SSH credentials ID (for non-local transport)

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_create_dataset'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/list_datasets:
    post:
      description: |+
        List datasets on remote side

        Accepts `transport` and SSH credentials ID (for non-local transport)

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_list_datasets'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/list_naming_schemas:
    get:
      description: List all naming schemas used in periodic snapshot and replication
        tasks.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/id/{id}/restore:
    post:
      description: Create the opposite of replication task `id` (PULL if it was PUSH
        and vice versa).
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/id/{id}/run:
    post:
      description: Run Replication Task of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/run_onetime:
    post:
      description: |-
        Run replication task without creating it.

        If `only_from_scratch` is `true` then replication will fail if target dataset already exists.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_run_onetime_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/target_unmatched_snapshots:
    post:
      description: |+
        Check if target has any snapshots that do not exist on source. Returns these snapshots grouped by dataset.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_target_unmatched_snapshots'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication
  /replication/config:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication.config
    put:
      description: '`max_parallel_replication_tasks` represents a maximum number of
        parallel replication tasks running.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replication_config_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - replication.config
  /reporting:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - reporting
    put:
      description: |+
        Configure Reporting Database settings.

        If `cpu_in_percentage` is `true`, collectd reports CPU usage in percentage instead of "jiffies".

        `graphite` specifies a destination hostname or IP for collectd data sent by the Graphite plugin..

        `graphite_separateinstances` corresponds to collectd SeparateInstances option.

        `graph_age` specifies the maximum age of stored graphs in months. `graph_points` is the number of points for
        each hourly, daily, weekly, etc. graph. Changing these requires destroying the current reporting database,
        so when these fields are changed, an additional `confirm_rrd_destroy: true` flag must be present.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - reporting
  /reporting/clear:
    get:
      description: Clear reporting database.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - reporting
  /reporting/get_data:
    post:
      description: |+
        Get reporting data for given graphs.

        List of possible graphs can be retrieved using `reporting.graphs` call.

        For the time period of the graph either `unit` and `page` OR `start` and `end` should be
        used, not both.

        `aggregate` will return aggregate available data for each graph (e.g. min, max, mean).

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting_get_data'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - reporting
  /reporting/graphs:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - reporting
  /route/ipv4gw_reachable:
    post:
      description: |-
        Get the IPv4 gateway and verify if it is reachable by any interface.

        Returns:
            bool: True if the gateway is reachable or otherwise False.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route_ipv4gw_reachable_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - route
  /route/system_routes:
    get:
      description: |-
        Get current/applied network routes.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - route
  /rsyncd:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsyncd
    put:
      description: |-
        Update Rsyncd Service Configuration.

        `auxiliary` attribute can be used to pass on any additional parameters from rsyncd.conf(5).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsyncd_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsyncd
  /rsyncmod:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsyncmod
    post:
      description: |-
        Create a Rsyncmod module.

        `path` represents the path to a dataset. Path length is limited to 1023 characters maximum as per the limit
        enforced by FreeBSD. It is possible that we reach this max length recursively while transferring data. In that
        case, the user must ensure the maximum path will not be too long or modify the recursed path to shorter
        than the limit.

        `maxconn` is an integer value representing the maximum number of simultaneous connections. Zero represents
        unlimited.

        `hostsallow` is a list of patterns to match hostname/ip address of a connecting client. If list is empty,
        all hosts are allowed.

        `hostsdeny` is a list of patterns to match hostname/ip address of a connecting client. If the pattern is
        matched, access is denied to the client. If no client should be denied, this should be left empty.

        `auxiliary` attribute can be used to pass on any additional parameters from rsyncd.conf(5).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsyncmod_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsyncmod
  /rsyncmod/id/{id}:
    delete:
      description: Delete Rsyncmod module of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsyncmod
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsyncmod
    put:
      description: Update Rsyncmod module of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsyncmod
  /rsyncmod/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsyncmod_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsyncmod
  /rsynctask:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsynctask
    post:
      description: |+
        Create a Rsync Task.

        See the comment in Rsyncmod about `path` length limits.

        `remotehost` is ip address or hostname of the remote system. If username differs on the remote host,
        "username@remote_host" format should be used.

        `mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.

        In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used
        to connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.
        `remotehost` and `remoteport` are not used in this case.

        `remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.

        `remotepath` specifies the path on the remote system.

        `validate_rpath` is a boolean which when sets validates the existence of the remote path.

        `direction` specifies if data should be PULLED or PUSHED from the remote system.

        `compress` when set reduces the size of the data which is to be transmitted.

        `archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,
        and special files.

        `delete` when set deletes files in the destination directory which do not exist in the source directory.

        `preserveperm` when set preserves original file permissions.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsynctask_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsynctask
  /rsynctask/id/{id}:
    delete:
      description: Delete Rsync Task of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsynctask
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsynctask
    put:
      description: Update Rsync Task of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsynctask
  /rsynctask/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rsynctask_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsynctask
  /rsynctask/id/{id}/run:
    post:
      description: |-
        Job to run rsync task of `id`.

        Output is saved to job log excerpt (not syslog).
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - rsynctask
  /s3:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - s3
    put:
      description: |-
        Update S3 Service Configuration.

        `access_key` must only contain alphanumeric characters and should be between 5 and 20 characters.

        `secret_key` must only contain alphanumeric characters and should be between 8 and 40 characters.

        `browser` when set, enables the web user interface for the S3 Service.

        `certificate` is a valid certificate id which exists in the system. This is used to enable secure
        S3 connections.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/s3_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - s3
  /s3/bindip_choices:
    get:
      description: Return ip choices for S3 service to use.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - s3
  /sensor/query:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sensor
  /service:
    get:
      description: |-
        Query all system services with `query-filters` and `query-options`.

        Supports the following extra options:
        `include_state` - performance optimization to avoid getting service state.
        defaults to True.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
  /service/id/{id}:
    get:
      description: |-
        Query all system services with `query-filters` and `query-options`.

        Supports the following extra options:
        `include_state` - performance optimization to avoid getting service state.
        defaults to True.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
    put:
      description: |-
        Update service entry of `id_or_name`.

        Currently it only accepts `enable` option which means whether the
        service should start on boot.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
  /service/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
  /service/reload:
    post:
      description: Reload the service specified by `service`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_reload'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
  /service/restart:
    post:
      description: Restart the service specified by `service`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_restart'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
  /service/start:
    post:
      description: |-
        Start the service specified by `service`.

        If `silent` is `true` then in case of service startup failure, `false` will be returned. If `silent` is `false`
        then in case of service startup failure, an exception will be raised.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_start'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
  /service/started:
    post:
      description: Test if service specified by `service` has been started.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_started_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
  /service/started_or_enabled:
    post:
      description: Test if service specified by `service` is started or enabled to
        start automatically.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_started_or_enabled_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
  /service/stop:
    post:
      description: Stop the service specified by `service`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_stop'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
  /service/terminate_process:
    post:
      description: |-
        Terminate process by `pid`.

        First send `TERM` signal, then, if was not terminated in `timeout` seconds, send `KILL` signal.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_terminate_process'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - service
  /sharing/nfs:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.nfs
    post:
      description: |-
        Create a NFS Share.

        `path` local path to be exported.

        `aliases` IGNORED, for now.

        `networks` is a list of authorized networks that are allowed to access the share having format
        "network/mask" CIDR notation. If empty, all networks are allowed.

        `hosts` is a list of IP's/hostnames which are allowed to access the share. If empty, all IP's/hostnames are
        allowed.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_nfs_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.nfs
  /sharing/nfs/id/{id}:
    delete:
      description: Delete NFS Share of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.nfs
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.nfs
    put:
      description: Update NFS Share of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.nfs
  /sharing/nfs/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_nfs_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.nfs
  /sharing/smb:
    get:
      description: |-
        Query shares with filters. In clustered environments, local datastore query
        is bypassed in favor of clustered registry.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.smb
    post:
      description: |-
        Create a SMB Share.

        `purpose` applies common configuration presets depending on intended purpose.

        `path` path to export over the SMB protocol. If server is clustered, then this path will be
        relative to the `cluster_volname`.

        `timemachine` when set, enables Time Machine backups for this share.

        `ro` when enabled, prohibits write access to the share.

        `guestok` when enabled, allows access to this share without a password.

        `hostsallow` is a list of hostnames / IP addresses which have access to this share.

        `hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful
        of hostnames are to be only allowed access, `hostsdeny` can be passed "ALL" which means that it will deny
        access to ALL hostnames except for the ones which have been listed in `hostsallow`.

        `acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL.

        `streams` enables support for storing alternate datastreams as filesystem extended attributes.

        `fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create
        ZFS snapshots through RPC.

        `shadowcopy` enables support for the volume shadow copy service.

        `auxsmbconf` is a string of additional smb4.conf parameters not covered by the system's API.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_smb_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.smb
  /sharing/smb/id/{id}:
    delete:
      description: |-
        Delete SMB Share of `id`. This will forcibly disconnect SMB clients
        that are accessing the share.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.smb
    get:
      description: |-
        Query shares with filters. In clustered environments, local datastore query
        is bypassed in favor of clustered registry.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.smb
    put:
      description: Update SMB Share of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.smb
  /sharing/smb/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_smb_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.smb
  /sharing/smb/presets:
    get:
      description: |-
        Retrieve pre-defined configuration sets for specific use-cases. These parameter
        combinations are often non-obvious, but beneficial in these scenarios.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.smb
  /sharing/webdav:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.webdav
    post:
      description: |-
        Create a Webdav Share.

        `ro` when enabled prohibits users from writing to this share.

        `perm` when enabled automatically recursively changes the ownership of this share to
        webdav ( user and group both ).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_webdav_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.webdav
  /sharing/webdav/id/{id}:
    delete:
      description: Update Webdav Share of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.webdav
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.webdav
    put:
      description: Update Webdav Share of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.webdav
  /sharing/webdav/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharing_webdav_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - sharing.webdav
  /smart:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart
    put:
      description: |-
        Update SMART Service Configuration.

        `interval` is an integer value in minutes which defines how often smartd activates to check if any tests
        are configured to run.

        `critical`, `informational` and `difference` are integer values on which alerts for SMART are configured if
        the disks temperature crosses the assigned threshold for each respective attribute. They default to 0 which
        indicates they are disabled.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart
  /smart/test:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart.test
    post:
      description: |+
        Create a SMART Test Task.

        `disks` is a list of valid disks which should be monitored in this task.

        `type` is specified to represent the type of SMART test to be executed.

        `all_disks` when enabled sets the task to cover all disks in which case `disks` is not required.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_test_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart.test
  /smart/test/id/{id}:
    delete:
      description: Delete SMART Test Task of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart.test
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart.test
    put:
      description: Update SMART Test Task of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart.test
  /smart/test/disk_choices:
    post:
      description: |-
        Returns disk choices for S.M.A.R.T. test.

        `full_disk` will return full disk objects instead of just names.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_test_disk_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart.test
  /smart/test/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_test_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart.test
  /smart/test/manual_test:
    post:
      description: |-
        Run manual SMART tests for `disks`.

        `type` indicates what type of SMART test will be ran and must be specified.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_test_manual_test_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart.test
  /smart/test/query_for_disk:
    post:
      description: Query S.M.A.R.T. tests for the specified disk.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smart_test_query_for_disk_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart.test
  /smart/test/results:
    get:
      description: |-
        Get disk(s) S.M.A.R.T. test(s) results.

        `options.extra.tests_filter` is an optional filter for tests results.



        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smart.test
  /smb:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb
    put:
      description: "Update SMB Service Configuration.\n\n`netbiosname` defaults to\
        \ the original hostname of the system.\n\n`netbiosalias` a list of netbios\
        \ aliases. If Server is joined to an AD domain, additional Kerberos\nService\
        \ Principal Names will be generated for these aliases.\n\n`workgroup` specifies\
        \ the NetBIOS workgroup to which the TrueNAS server belongs. This will be\n\
        automatically set to the correct value during the process of joining an AD\
        \ domain.\nNOTE: `workgroup` and `netbiosname` should have different values.\n\
        \n`enable_smb1` allows legacy SMB clients to connect to the server when enabled.\n\
        \n`aapl_extensions` enables support for SMB2 protocol extensions for MacOS\
        \ clients. This is not a\nrequirement for MacOS support, but is currently\
        \ a requirement for time machine support.\n\n`localmaster` when set, determines\
        \ if the system participates in a browser election.\n\n`guest` attribute is\
        \ specified to select the account to be used for guest access. It defaults\
        \ to \"nobody\".\n\nThe group specified as the SMB `admin_group` will be automatically\
        \ added as a foreign group member\nof S-1-5-32-544 (builtin\admins). This\
        \ will afford the group all privileges granted to a local admin.\nAny SMB\
        \ group may be selected (including AD groups).\n\n`ntlmv1_auth` enables a\
        \ legacy and insecure authentication method, which may be required for legacy\
        \ or\npoorly-implemented SMB clients.\n\n`smb_options` smb.conf parameters\
        \ that are not covered by the above supported configuration options may be\n\
        added as an smb_option. Not all options are tested or supported, and behavior\
        \ of smb_options may change\nbetween releases. Stability of smb.conf options\
        \ is not guaranteed."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb
  /smb/bindip_choices:
    get:
      description: |-
        List of valid choices for IP addresses to which to bind the SMB service.
        Addresses assigned by DHCP are excluded from the results.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb
  /smb/client_count:
    get:
      description: Return currently connected clients count.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb
  /smb/domain_choices:
    get:
      description: |-
        List of domains visible to winbindd. Returns empty list if winbindd is
        stopped.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb
  /smb/get_remote_acl:
    post:
      description: |-
        Retrieves an ACL from a remote SMB server.

        `server` IP Address or hostname of the remote server

        `share` Share name

        `path` path on the remote SMB server. Use "" to separate path components

        `username` username to use for authentication

        `password` password to use for authentication

        `use_kerberos` use credentials to get a kerberos ticket for authentication.
        AD only.

        `output_format` format for resulting ACL data. Choices are either 'SMB',
        which will present the information as a Windows SD or 'LOCAL', which formats
        the ACL information according local filesystem of the TrueNAS server.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_get_remote_acl_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb
  /smb/status:
    post:
      description: |-
        Returns SMB server status (sessions, open files, locks, notifications).

        `info_level` type of information requests. Defaults to ALL.

        `status_options` additional options to filter query results. Supported
        values are as follows: `verbose` gives more verbose status output
        `fast` causes smbstatus to not check if the status data is valid by
        checking if the processes that the status data refer to all still
        exist. This speeds up execution on busy systems and clusters but
        might display stale data of processes that died without cleaning up
        properly. `restrict_user` specifies the limits results to the specified
        user.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_status'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb
  /smb/unixcharset_choices:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb
  /smb/sharesec:
    get:
      description: |-
        Use query-filters to search the SMB share ACLs present on server.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb.sharesec
    post:
      description: |-
        Update the ACL on a given SMB share. Will write changes to both
        /var/db/system/samba4/share_info.tdb and the configuration file.
        Since an SMB share will _always_ have an ACL present, there is little
        distinction between the `create` and `update` methods apart from arguments.

        `share_name` - name of SMB share.

        `share_acl` a list of ACL entries (dictionaries) with the following keys:

        `ae_who_sid` who the ACL entry applies to expressed as a Windows SID

        `ae_who_name` who the ACL entry applies to expressed as a name. `ae_who_name` is
        a dictionary containing the following keys: `domain` that the user is a member of,
        `name` username in the domain. The domain for local users is the netbios name of
        the FreeNAS server.

        `ae_perm` string representation of the permissions granted to the user or group.
        `FULL` grants read, write, execute, delete, write acl, and change owner.
        `CHANGE` grants read, write, execute, and delete.
        `READ` grants read and execute.

        `ae_type` can be ALLOWED or DENIED.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_sharesec_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb.sharesec
  /smb/sharesec/id/{id}:
    delete:
      description: |-
        Replace share ACL for the specified SMB share with the samba default ACL of S-1-1-0/FULL
        (Everyone - Full Control). In this case, access will be fully determined
        by the underlying filesystem ACLs and smb4.conf parameters governing access control
        and permissions.
        Share can be deleted by name or numerical by numerical index.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb.sharesec
    get:
      description: |-
        Use query-filters to search the SMB share ACLs present on server.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb.sharesec
    put:
      description: |-
        Update the ACL on the share specified by the numerical index `id`. Will write changes
        to both /var/db/system/samba4/share_info.tdb and the configuration file.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb.sharesec
  /smb/sharesec/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_sharesec_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb.sharesec
  /smb/sharesec/getacl:
    post:
      description: |-
        View the ACL information for `share_name`. The share ACL is distinct from filesystem
        ACLs which can be viewed by calling `filesystem.getacl`. `ae_who_name` will appear
        as `None` if the SMB service is stopped or if winbind is unable  to resolve the SID
        to a name.

        If the `option` `resolve_sids` is set to `False` then the returned ACL will not
        contain names.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_sharesec_getacl'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb.sharesec
  /smb/sharesec/synchronize_acls:
    get:
      description: |-
        Synchronize the share ACL stored in the config database with Samba's running
        configuration as reflected in the share_info.tdb file.

        The only situation in which the configuration stored in the database will
        overwrite samba's running configuration is if share_info.tdb is empty. Samba
        fakes a single S-1-1-0:ALLOW/0x0/FULL entry in the absence of an entry for a
        share in share_info.tdb.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - smb.sharesec
  /snmp:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - snmp
    put:
      description: |-
        Update SNMP Service Configuration.

        `v3` when set enables SNMP version 3.

        `v3_username`, `v3_authtype`, `v3_password`, `v3_privproto` and `v3_privpassphrase` are only used when `v3`
        is enabled.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snmp_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - snmp
  /ssh:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ssh
    put:
      description: |+
        Update settings of SSH daemon service.

        If `bindiface` is empty it will listen for all available addresses.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ssh_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ssh
  /ssh/bindiface_choices:
    get:
      description: Available choices for the bindiface attribute of SSH service.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ssh
  /staticroute:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - staticroute
    post:
      description: |-
        Create a Static Route.

        Address families of `gateway` and `destination` should match when creating a static route.

        `description` is an optional attribute for any notes regarding the static route.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/staticroute_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - staticroute
  /staticroute/id/{id}:
    delete:
      description: Delete Static Route of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - staticroute
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - staticroute
    put:
      description: Update Static Route of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - staticroute
  /staticroute/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/staticroute_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - staticroute
  /stats/get_data:
    post:
      description: Get data points from rrd files.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stats_get_data'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - stats
  /stats/get_dataset_info:
    post:
      description: Returns info about a given dataset from some source.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stats_get_dataset_info'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - stats
  /stats/get_sources:
    get:
      description: Returns an object with all available sources tried with metric
        datasets.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - stats
  /support:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - support
    put:
      description: Update Proactive Support settings.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/support_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - support
  /support/attach_ticket:
    post:
      description: |-
        Method to attach a file to a existing ticket.

        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/support_attach_ticket_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - support
  /support/attach_ticket_max_size:
    get:
      description: Returns maximum uploaded file size for `support.attach_ticket`
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - support
  /support/fetch_categories:
    post:
      description: |-
        Fetch issue categories using access token `token`.
        Returns a dict with the category name as a key and id as value.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/support_fetch_categories_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - support
  /support/fields:
    get:
      description: Returns list of pairs of field names and field titles for Proactive
        Support.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - support
  /support/is_available:
    get:
      description: Returns whether Proactive Support is available for this product
        type and current license.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - support
  /support/is_available_and_enabled:
    get:
      description: Returns whether Proactive Support is available and enabled.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - support
  /support/new_ticket:
    post:
      description: |-
        Creates a new ticket for support.
        This is done using the support proxy API.
        For TrueNAS SCALE it will be created on JIRA and for TrueNAS SCALE Enterprise on Salesforce.

        For SCALE `criticality`, `environment`, `phone`, `name` and `email` attributes are not required.
        For SCALE Enterprise `token` and `type` attributes are not required.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/support_new_ticket_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - support
  /system/boot_id:
    get:
      description: |-
        Returns an unique boot identifier.

        It is supposed to be unique every system boot.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/debug:
    get:
      description: |-
        Download a debug file.

        A file will be downloaded from this endpoint.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/environment:
    get:
      description: |-
        Return environment in which product is running. Possible values:
        - DEFAULT
        - EC2
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/feature_enabled:
    post:
      description: Returns whether the `feature` is enabled or not
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_feature_enabled_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/host_id:
    get:
      description: |-
        Retrieve a hex string that is generated based
        on the contents of the `/etc/hostid` file. This
        is a permanent value that persists across
        reboots/upgrades and can be used as a unique
        identifier for the machine.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/info:
    get:
      description: Returns basic system information.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/is_freenas:
    get:
      description: |-
        FreeNAS is now TrueNAS CORE.

        DEPRECATED: Use `system.product_type`
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/is_stable:
    get:
      description: Returns whether software version of the system is stable.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/license_update:
    post:
      description: Update license file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_license_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/product_name:
    get:
      description: Returns name of the product we are using.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/product_type:
    get:
      description: |-
        Returns the type of the product.

        SCALE - TrueNAS SCALE, community version
        SCALE_ENTERPRISE - TrueNAS SCALE Enterprise, appliance version
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/ready:
    get:
      description: Returns whether the system completed boot and is ready to use
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/reboot:
    post:
      description: |-
        Reboots the operating system.

        Emits an "added" event of name "system" and id "reboot".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_reboot_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/shutdown:
    post:
      description: |-
        Shuts down the operating system.

        An "added" event of name "system" and id "shutdown" is emitted when shutdown is initiated.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_shutdown_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/state:
    get:
      description: |-
        Returns system state:
        "BOOTING" - System is booting
        "READY" - System completed boot and is ready to use
        "SHUTTING_DOWN" - System is shutting down
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/version:
    get:
      description: Returns the full name of the software version of the system.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/version_short:
    get:
      description: Returns the short name of the software version of the system.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system
  /system/advanced:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.advanced
    put:
      description: |-
        Update System Advanced Service Configuration.

        `consolemenu` should be disabled if the menu at console is not desired. It will default to standard login
        in the console if disabled.

        `autotune` when enabled executes autotune script which attempts to optimize the system based on the installed
        hardware.

        When `syslogserver` is defined, logs of `sysloglevel` or above are sent.

        `consolemsg` is a deprecated attribute and will be removed in further releases. Please, use `consolemsg`
        attribute in the `system.general` plugin.

        `isolated_gpu_pci_ids` is a list of PCI ids which are isolated from host system.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_advanced_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.advanced
  /system/advanced/sed_global_password:
    get:
      description: Returns configured global SED password.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.advanced
  /system/advanced/serial_port_choices:
    get:
      description: Get available choices for `serialport`.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.advanced
  /system/advanced/syslog_certificate_authority_choices:
    get:
      description: Return choices of certificate authorities which can be used for
        `syslog_tls_certificate_authority`.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.advanced
  /system/advanced/syslog_certificate_choices:
    get:
      description: Return choices of certificates which can be used for `syslog_tls_certificate`.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.advanced
  /system/advanced/update_gpu_pci_ids:
    post:
      description: '`isolated_gpu_pci_ids` is a list of PCI ids which are isolated
        from host system.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_advanced_update_gpu_pci_ids_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.advanced
  /system/general:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
    put:
      description: |-
        Update System General Service Configuration.

        `ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate` is not configured on boot,
        it is automatically created by the system.

        `ui_httpsredirect` when set, makes sure that all HTTP requests are converted to HTTPS requests to better
        enhance security.

        `ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will
        listen on.

        `ui_allowlist` is a list of IP addresses and networks that are allow to use API and UI. If this list is empty,
        then all IP addresses are allowed to use API and UI.

        `ds_auth` controls whether configured Directory Service users that are granted with Privileges are allowed to
        log in to the Web UI or use TrueNAS API.

        UI configuration is not applied automatically. Call `system.general.ui_restart` to apply new UI settings (all
        HTTP connections will be aborted) or specify `ui_restart_delay` (in seconds) to automatically apply them after
        some small amount of time necessary you might need to receive the response for your settings update request.

        If incorrect UI configuration is applied, you might loss API connectivity and won't be able to fix the settings.
        To avoid that, specify `rollback_timeout` (in seconds). It will automatically roll back UI configuration to the
        previously working settings after `rollback_timeout` passes unless you call `system.general.checkin` in case
        the new settings were correct and no rollback is necessary.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_general_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/checkin:
    get:
      description: |-
        After UI settings are saved with `rollback_timeout` this method needs to be called within that timeout limit
        to prevent reverting the changes.

        This is to ensure user verifies the changes went as planned and its working.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/checkin_waiting:
    get:
      description: |-
        Determines whether or not we are waiting user to check-in the applied UI settings changes before they are rolled
        back. Returns a number of seconds before the automatic rollback or null if there are no changes pending.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/country_choices:
    get:
      description: Returns country choices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/kbdmap_choices:
    get:
      description: Returns kbdmap choices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/language_choices:
    get:
      description: Returns language choices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/local_url:
    get:
      description: Returns configured local url in the format of protocol://host:port
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/timezone_choices:
    get:
      description: Returns time zone choices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/ui_address_choices:
    get:
      description: Returns UI ipv4 address choices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/ui_certificate_choices:
    get:
      description: Return choices of certificates which can be used for `ui_certificate`.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/ui_httpsprotocols_choices:
    get:
      description: Returns available HTTPS protocols.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/ui_restart:
    get:
      description: |-
        Restart HTTP server to use latest UI settings.

        HTTP server will be restarted after `delay` seconds.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_general_ui_restart_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
    post:
      description: |-
        Restart HTTP server to use latest UI settings.

        HTTP server will be restarted after `delay` seconds.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_general_ui_restart_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/general/ui_v6address_choices:
    get:
      description: Returns UI ipv6 address choices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.general
  /system/ntpserver:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.ntpserver
    post:
      description: |-
        Add an NTP Server.

        `address` specifies the hostname/IP address of the NTP server.

        `burst` when enabled makes sure that if server is reachable, sends a burst of eight packets instead of one.
        This is designed to improve timekeeping quality with the server command.

        `iburst` when enabled speeds up the initial synchronization, taking seconds rather than minutes.

        `prefer` marks the specified server as preferred. When all other things are equal, this host is chosen
        for synchronization acquisition with the server command. It is recommended that they be used for servers with
        time monitoring hardware.

        `minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.

        `maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`.

        `force` when enabled forces the addition of NTP server even if it is currently unreachable.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_ntpserver_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.ntpserver
  /system/ntpserver/id/{id}:
    delete:
      description: Delete NTP server of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.ntpserver
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.ntpserver
    put:
      description: Update NTP server of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.ntpserver
  /system/ntpserver/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/system_ntpserver_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - system.ntpserver
  /systemdataset:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - systemdataset
    put:
      description: |-
        Update System Dataset Service Configuration.

        `pool` is the name of a valid pool configured in the system which will be used to host the system dataset.

        `pool_exclude` can be specified to make sure that we don't place the system dataset on that pool if `pool`
        is not provided.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/systemdataset_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - systemdataset
  /systemdataset/pool_choices:
    post:
      description: Retrieve pool choices which can be used for configuring system
        dataset.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/systemdataset_pool_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - systemdataset
  /tftp:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - tftp
    put:
      description: |-
        Update TFTP Service Configuration.

        `newfiles` when set enables network devices to send files to the system.

        `username` sets the user account which will be used to access `directory`. It should be ensured `username`
        has access to `directory`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tftp_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - tftp
  /tftp/host_choices:
    get:
      description: Return host choices for TFTP service to use.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - tftp
  /truecommand:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - truecommand
    put:
      description: |-
        Update Truecommand service settings.

        `api_key` is a valid API key generated by iX Portal.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/truecommand_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - truecommand
  /truenas/accept_eula:
    get:
      description: Accept TrueNAS EULA.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - truenas
  /truenas/get_chassis_hardware:
    get:
      description: "Returns what type of hardware this is, detected from dmidecode."
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - truenas
  /truenas/get_customer_information:
    get:
      description: Returns stored customer information.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - truenas
  /truenas/get_eula:
    get:
      description: Returns the TrueNAS End-User License Agreement (EULA).
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - truenas
  /truenas/is_eula_accepted:
    get:
      description: Returns whether the EULA is accepted or not.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - truenas
  /truenas/is_production:
    get:
      description: Returns if system is marked as production.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - truenas
  /truenas/set_production:
    post:
      description: Sets system production state and optionally sends initial debug.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/truenas_set_production'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - truenas
  /truenas/update_customer_information:
    post:
      description: Updates customer information.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/truenas_update_customer_information_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - truenas
  /tunable:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - tunable
    post:
      description: |-
        Create a tunable.

        If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding
        value (e.g. `0`).

        If `type` is `UDEV` then `var` is an udev rules file name (e.g. `10-disable-usb`, `.rules` suffix will be
        appended automatically) and `value` is its contents (e.g. `BUS=="usb", OPTIONS+="ignore_device"`).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tunable_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - tunable
  /tunable/id/{id}:
    delete:
      description: Delete Tunable of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - tunable
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - tunable
    put:
      description: Update Tunable of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - tunable
  /tunable/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tunable_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - tunable
  /tunable/tunable_type_choices:
    get:
      description: Retrieve the supported tunable types that can be changed.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - tunable
  /update/check_available:
    post:
      description: |+
        Checks if there is an update available from update server.

        status:
          - REBOOT_REQUIRED: an update has already been applied
          - AVAILABLE: an update is available
          - UNAVAILABLE: no update available
          - HA_UNAVAILABLE: HA is non-functional

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_check_available_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - update
  /update/download:
    get:
      description: Download updates using selected train.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - update
  /update/file:
    post:
      description: |-
        Updates the system using the uploaded .tar file.

        Use null `destination` to create a temporary location.

        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_file_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - update
  /update/get_auto_download:
    get:
      description: Returns if update auto-download is enabled.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - update
  /update/get_pending:
    post:
      description: |-
        Gets a list of packages already downloaded and ready to be applied.
        Each entry of the lists consists of type of operation and name of it, e.g.

          {
            "operation": "upgrade",
            "name": "baseos-11.0 -> baseos-11.1"
          }
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_get_pending_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - update
  /update/get_trains:
    get:
      description: |-
        Returns available trains dict and the currently configured train as well as the
        train of currently booted environment.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - update
  /update/manual:
    post:
      description: |-
        Update the system using a manual update file.

        `path` must be the absolute path to the update file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_manual'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - update
  /update/set_auto_download:
    post:
      description: Sets if update auto-download is enabled.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_set_auto_download_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - update
  /update/set_train:
    post:
      description: Set an update train to be used by default in updates.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_set_train_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - update
  /update/update:
    post:
      description: Downloads (if not already in cache) and apply an update.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - update
  /ups:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ups
    put:
      description: |-
        Update UPS Service Configuration.

        `powerdown` when enabled, sets UPS to power off after shutting down the system.

        `nocommwarntime` is a value in seconds which makes UPS Service wait the specified seconds before alerting that
        the Service cannot reach configured UPS.

        `shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before
        initiating a shutdown. This only applies when `shutdown` is set to "BATT".

        `shutdowncmd` is the command which is executed to initiate a shutdown. It defaults to "poweroff".
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ups_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ups
  /ups/driver_choices:
    get:
      description: Returns choices of UPS drivers supported by the system.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ups
  /ups/port_choices:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - ups
  /user:
    get:
      description: |-
        Query users with `query-filters` and `query-options`. As a performance optimization, only local users
        will be queried by default.

        Expanded information may be requested by specifying the extra option
        `"extra": {"additional_information": []}`.

        The following `additional_information` options are supported:
        `SMB` - include Windows SID and NT Name for user. If this option is not specified, then these
            keys will have `null` value.
        `DS` - include users from Directory Service (LDAP or Active Directory) in results

        `"extra": {"search_dscache": true}` is a legacy method of querying for directory services users.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
    post:
      description: |-
        Create a new user.

        If `uid` is not provided it is automatically filled with the next one available.

        `group` is required if `group_create` is false.

        `password` is required if `password_disabled` is false.

        Available choices for `shell` can be retrieved with `user.shell_choices`.

        `attributes` is a general-purpose object for storing arbitrary user information.

        `smb` specifies whether the user should be allowed access to SMB shares. User
        will also automatically be added to the `builtin_users` group.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
  /user/id/{id}:
    delete:
      description: |-
        Delete user `id`.

        The `delete_group` option deletes the user primary group if it is not being used by
        any other user.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
    get:
      description: |-
        Query users with `query-filters` and `query-options`. As a performance optimization, only local users
        will be queried by default.

        Expanded information may be requested by specifying the extra option
        `"extra": {"additional_information": []}`.

        The following `additional_information` options are supported:
        `SMB` - include Windows SID and NT Name for user. If this option is not specified, then these
            keys will have `null` value.
        `DS` - include users from Directory Service (LDAP or Active Directory) in results

        `"extra": {"search_dscache": true}` is a legacy method of querying for directory services users.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
    put:
      description: Update attributes of an existing user.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
  /user/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
  /user/get_next_uid:
    get:
      description: Get the next available/free uid.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
  /user/get_user_obj:
    post:
      description: |-
        Returns dictionary containing information from struct passwd for the user specified by either
        the username or uid. Bypasses user cache.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_get_user_obj_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
  /user/has_local_administrator_set_up:
    get:
      description: |-
        Return whether a local administrator with a valid password exists.

        This is used when the system is installed without a password and must be set on
        first use/login.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
  /user/has_root_password:
    get:
      description: Deprecated method. Use `user.has_local_administrator_set_up`
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
  /user/id/{id}/pop_attribute:
    post:
      description: Remove user general purpose `attributes` dictionary `key`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
  /user/id/{id}/set_attribute:
    post:
      description: |-
        Set user general purpose `attributes` dictionary `key` to `value`.

        e.g. Setting key="foo" value="var" will result in {"attributes": {"foo": "bar"}}
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
  /user/shell_choices:
    post:
      description: |-
        Return the available shell choices to be used in `user.create` and `user.update`.

        `user_id`: deprecated and ignored
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_shell_choices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - user
  /vm:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
    post:
      description: |-
        Create a Virtual Machine (VM).

        Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
        separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
        `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
        specifies number of threads per core.

        `ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.
        For headless installations like ubuntu server this is required for the guest to operate properly. However
        for cases where consumer would like to use GPU passthrough and does not want a display device added should set
        this to `false`.

        `arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and
        system in this case will choose a reasonable default based on host.

        `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
        By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
        configuration.

        `shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system
        shutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within
        `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.

        `hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and
        is useful to enable when doing GPU passthrough.

        `hyperv_enlightenments` can be used to enable subset of predefined Hyper-V enlightenments for Windows guests.
        These enlightenments improve performance and enable otherwise missing features.

        `suspend_on_snapshot` is a boolean attribute which when enabled will automatically pause/suspend VMs when
        a snapshot is being taken for periodic snapshot tasks. For manual snapshots, if user has specified vms to
        be paused, they will be in that case.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/id/{id}:
    delete:
      description: Delete a VM.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
    put:
      description: |-
        Update all information of a specific VM.

        `devices` is a list of virtualized hardware to attach to the virtual machine. If `devices` is not present,
        no change is made to devices. If either the device list order or data stored by the device changes when the
        attribute is passed, these actions are taken:

        1) If there is no device in the `devices` list which was previously attached to the VM, that device is
           removed from the virtual machine.
        2) Devices are updated in the `devices` list when they contain a valid `id` attribute that corresponds to
           an existing device.
        3) Devices that do not have an `id` attribute are created and attached to `id` VM.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/bootloader_options:
    get:
      description: Supported motherboard firmware options.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/bootloader_ovmf_choices:
    get:
      description: Retrieve bootloader ovmf choices
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/id/{id}/clone:
    post:
      description: |-
        Clone the VM `id`.

        `name` is an optional parameter for the cloned VM.
        If not provided it will append the next number available to the VM name.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/cpu_model_choices:
    get:
      description: Retrieve CPU Model choices which can be used with a VM guest to
        emulate the CPU in the guest.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/flags:
    get:
      description: Returns a dictionary with CPU flags for the hypervisor.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/get_available_memory:
    post:
      description: |-
        Get the current maximum amount of available memory to be allocated for VMs.

        In case of `overcommit` being `true`, calculations are done in the following manner:
        1. If a VM has requested 10G but is only consuming 5G, only 5G will be counted
        2. System will consider shrinkable ZFS ARC as free memory ( shrinkable ZFS ARC is current ZFS ARC
           minus ZFS ARC minimum )

        In case of `overcommit` being `false`, calculations are done in the following manner:
        1. Complete VM requested memory will be taken into account regardless of how much actual physical
           memory the VM is consuming
        2. System will not consider shrinkable ZFS ARC as free memory

        Memory is of course a very "volatile" resource, values may change abruptly between a
        second but I deem it good enough to give the user a clue about how much memory is
        available at the current moment and if a VM should be allowed to be launched.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_get_available_memory_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/get_console:
    post:
      description: Get the console device from a given guest.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_get_console_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/get_display_devices:
    post:
      description: |-
        Get the display devices from a given guest. If a display device has password configured,
        `attributes.password_configured` will be set to `true`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_get_display_devices_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/get_memory_usage:
    post:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_get_memory_usage_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/get_vm_memory_info:
    post:
      description: |-
        Returns memory information for `vm_id` VM if it is going to be started.

        All memory attributes are expressed in bytes.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_get_vm_memory_info_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/get_vmemory_in_use:
    get:
      description: |-
        The total amount of virtual memory in MB used by guests

            Returns a dict with the following information:
                RNP - Running but not provisioned
                PRD - Provisioned but not running
                RPRD - Running and provisioned
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/guest_architecture_and_machine_choices:
    get:
      description: |-
        Retrieve choices for supported guest architecture types and machine choices.

        Keys in the response would be supported guest architecture(s) on the host and their respective values would
        be supported machine type(s) for the specific architecture on the host.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/log_file_path:
    post:
      description: |-
        Retrieve log file path of `id` VM.

        It will return path of the log file if it exists and `null` otherwise.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_log_file_path_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/maximum_supported_vcpus:
    get:
      description: Returns maximum supported VCPU's
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/port_wizard:
    get:
      description: |-
        It returns the next available Display Server Port and Web Port.

        Returns a dict with two keys `port` and `web`.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/id/{id}/poweroff:
    post:
      description: Poweroff a VM.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/random_mac:
    get:
      description: |-
        Create a random mac address.

        Returns:
            str: with six groups of two hexadecimal digits
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/resolution_choices:
    get:
      description: Retrieve supported resolution choices for VM Display devices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/id/{id}/restart:
    post:
      description: Restart a VM.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/id/{id}/resume:
    post:
      description: Resume suspended `id` VM.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/id/{id}/start:
    post:
      description: |-
        Start a VM.

        options.overcommit defaults to false, meaning VMs are not allowed to
        start if there is not enough available memory to hold all configured VMs.
        If true, VM starts even if there is not enough memory for all configured VMs.

        Error codes:

            ENOMEM(12): not enough free memory to run the VM without overcommit
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/id/{id}/status:
    post:
      description: |-
        Get the status of `id` VM.

        Returns a dict:
            - state, RUNNING / STOPPED / SUSPENDED
            - pid, process id if RUNNING
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/id/{id}/stop:
    post:
      description: |-
        Stops a VM.

        For unresponsive guests who have exceeded the `shutdown_timeout` defined by the user and have become
        unresponsive, they required to be powered down using `vm.poweroff`. `vm.stop` is only going to send a
        shutdown signal to the guest and wait the desired `shutdown_timeout` value before tearing down guest vmemory.

        `force_after_timeout` when supplied, it will initiate poweroff for the VM forcing it to exit if it has
        not already stopped within the specified `shutdown_timeout`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/supports_virtualization:
    get:
      description: "Returns \"true\" if system supports virtualization, \"false\"\
        \ otherwise"
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/id/{id}/suspend:
    post:
      description: Suspend `id` VM.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/virtualization_details:
    get:
      description: Retrieve details if virtualization is supported on the system and
        in case why it's not supported if it isn't.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm
  /vm/device:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
    post:
      description: |-
        Create a new device for the VM of id `vm`.

        If `dtype` is the `RAW` type and a new raw file is to be created, `attributes.exists` will be passed as false.
        This means the API handles creating the raw file and raises the appropriate exception if file creation fails.

        If `dtype` is of `DISK` type and a new Zvol is to be created, `attributes.create_zvol` will be passed as
        true with valid `attributes.zvol_name` and `attributes.zvol_volsize` values.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_device_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/id/{id}:
    delete:
      description: Delete a VM device of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
    put:
      description: |-
        Update a VM device of `id`.

        Pass `attributes.size` to resize a `dtype` `RAW` device. The raw file will be resized.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/bind_choices:
    get:
      description: Available choices for Bind attribute.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/disk_choices:
    get:
      description: Returns disk choices for device type "DISK".
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_device_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/iommu_enabled:
    get:
      description: "Returns \"true\" if iommu is enabled, \"false\" otherwise"
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/iotype_choices:
    get:
      description: IO-type choices for storage devices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/nic_attach_choices:
    get:
      description: Available choices for NIC Attach attribute.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/passthrough_device:
    post:
      description: Retrieve details about `device` PCI device.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_device_passthrough_device_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/passthrough_device_choices:
    get:
      description: Available choices for PCI passthru devices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/pptdev_choices:
    get:
      description: Available choices for PCI passthru device.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/usb_controller_choices:
    get:
      description: Retrieve USB controller type choices
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/usb_passthrough_choices:
    get:
      description: Available choices for USB passthrough devices.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vm/device/usb_passthrough_device:
    post:
      description: Retrieve details about `device` USB device.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vm_device_usb_passthrough_device_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vm.device
  /vmware:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vmware
    post:
      description: |-
        Create VMWare snapshot.

        `hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for
        the cluster.

        `username` and `password` are the credentials used to authorize access to the VMWare host.

        `datastore` is a valid datastore name which exists on the VMWare host.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vmware
  /vmware/id/{id}:
    delete:
      description: Delete VMWare snapshot of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vmware
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vmware
    put:
      description: Update VMWare snapshot of `id`.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vmware
  /vmware/dataset_has_vms:
    post:
      description: Returns "true" if `dataset` is configured with a VMWare snapshot
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_dataset_has_vms'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vmware
  /vmware/get_datastores:
    post:
      description: Get datastores from VMWare.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_get_datastores_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vmware
  /vmware/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vmware
  /vmware/get_virtual_machines:
    post:
      description: Returns Virtual Machines on the VMWare host identified by `pk`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_get_virtual_machines_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vmware
  /vmware/match_datastores_with_datasets:
    post:
      description: |+
        Requests datastores from vCenter server and tries to match them with local filesystems.

        Returns a list of datastores, a list of local filesystems and guessed relationship between them.

      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmware_match_datastores_with_datasets_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - vmware
  /webdav:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - webdav
    put:
      description: |-
        Update Webdav Service Configuration.

        `protocol` specifies which protocol should be used for connecting to Webdav Serivce. Value of "HTTPHTTPS"
        allows both HTTP and HTTPS connections to the share.

        `certssl` is a valid id of a certificate configured in the system. This is required if HTTPS connection is
        desired with Webdave Service.

        There are 3 types of Authentication supported with Webdav:
        1) NONE      -   No authentication is required
        2) BASIC     -   Password is sent over the network as plaintext
        3) DIGEST    -   Hash of the password is sent over the network

        `htauth` should be one of the valid types described above.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webdav_update_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - webdav
  /webdav/cert_choices:
    get:
      description: Permitted certificate choices for webdav service.
      parameters: []
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - webdav
  /webui/image:
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - webui.image
    post:
      description: |-
        Create a new database entry with identifier as the tag, all entries are
        lowercased

        Then puts the file in the /var/db/system/webui/images directory

        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webui_image_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - webui.image
  /webui/image/id/{id}:
    delete:
      description: "Remove the database entry, and then the item if it exists"
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - webui.image
    get:
      description: "`query-options.extra` can be specified as query parameters with\
        \ prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false`\
        \ will pass `retrieve_properties` as an extra argument to pool/dataset endpoint."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - webui.image
  /webui/image/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webui_image_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - webui.image
  /zfs/snapshot:
    get:
      description: |-
        Query all ZFS Snapshots with `query-filters` and `query-options`.

        `query-options.extra.holds` specifies whether hold tags for snapshots should be retrieved (false by default)

        `query-options.extra.min_txg` can be specified to limit snapshot retrieval based on minimum transaction group.

        `query-options.extra.max_txg` can be specified to limit snapshot retrieval based on maximum transaction group.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
    post:
      description: Take a snapshot from a given dataset.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_create_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
  /zfs/snapshot/id/{id}:
    delete:
      description: |-
        Delete snapshot of name `id`.

        `options.defer` will defer the deletion of snapshot.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
    get:
      description: |-
        Query all ZFS Snapshots with `query-filters` and `query-options`.

        `query-options.extra.holds` specifies whether hold tags for snapshots should be retrieved (false by default)

        `query-options.extra.min_txg` can be specified to limit snapshot retrieval based on minimum transaction group.

        `query-options.extra.max_txg` can be specified to limit snapshot retrieval based on maximum transaction group.

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
    put:
      description: ""
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
  /zfs/snapshot/clone:
    post:
      description: |-
        Clone a given snapshot to a new dataset.

        Returns:
            bool: True if succeed otherwise False.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_clone_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
  /zfs/snapshot/get_instance:
    post:
      description: |-
        Returns instance matching `id`. If `id` is not found, Validation error is raised.

        Please see `query` method documentation for `options`.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_get_instance'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
  /zfs/snapshot/hold:
    post:
      description: |-
        Holds snapshot `id`.

        `truenas` tag will be added to the snapshot's tag namespace.

        `options.recursive` will hold snapshots recursively.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_hold'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
  /zfs/snapshot/release:
    post:
      description: |-
        Release held snapshot `id`.

        Will remove all hold tags from the specified snapshot.

        `options.recursive` will release snapshots recursively. Please note that only the tags that are present on the
        parent snapshot will be removed.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_release'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
  /zfs/snapshot/remove:
    post:
      description: |-
        Remove a snapshot from a given dataset.

        Returns:
            bool: True if succeed otherwise False.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_remove_0'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
  /zfs/snapshot/rollback:
    post:
      description: |-
        Rollback to a given snapshot `id`.

        `options.recursive` will destroy any snapshots and bookmarks more recent than the one
        specified.

        `options.recursive_clones` is just like `recursive` but will also destroy any clones.

        `options.force` will force unmount of any clones.

        `options.recursive_rollback` will do a complete recursive rollback of each child snapshots for `id`. If
        any child does not have specified snapshot, this operation will fail.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zfs_snapshot_rollback'
      responses:
        "200":
          description: Operation succeeded
        "401":
          description: No authorization for this endpoint
      tags:
      - zfs.snapshot
components:
  responses:
    NotFound:
      description: Endpoint not found
    Unauthorized:
      description: No authorization for this endpoint
    Success:
      description: Operation succeeded
  schemas:
    core_bulk_0:
      description: "Will sequentially call `method` with arguments from the `params`\
        \ list. For example, running"
      title: method
      type: string
    core_bulk_1:
      default: []
      description: "Will sequentially call `method` with arguments from the `params`\
        \ list. For example, running"
      items: {}
      title: params
      type: array
    core_bulk_2:
      nullable: true
      title: description
      type: string
    core_bulk:
      properties:
        method:
          description: "Will sequentially call `method` with arguments from the `params`\
            \ list. For example, running"
          title: method
          type: string
        params:
          default: []
          description: "Will sequentially call `method` with arguments from the `params`\
            \ list. For example, running"
          items: {}
          title: params
          type: array
        description:
          nullable: true
          title: description
          type: string
      type: object
    core_debug_0:
      enum:
      - PTVS
      - PYDEV
      - REMOTE_PDB
      title: engine
      type: string
    core_debug_1:
      additionalProperties: false
      default: {}
      properties:
        secret:
          title: secret
          type: string
        bind_address:
          default: 0.0.0.0
          title: bind_address
          type: string
        bind_port:
          default: 3000
          title: bind_port
          type: integer
        host:
          title: host
          type: string
        wait_attach:
          default: false
          title: wait_attach
          type: boolean
        local_path:
          title: local_path
          type: string
        threaded:
          default: false
          title: threaded
          type: boolean
      title: options
      type: object
    core_debug:
      properties:
        engine:
          $ref: '#/components/schemas/core_debug_0'
        options:
          $ref: '#/components/schemas/core_debug_1'
      type: object
    core_download_0:
      title: method
      type: string
    core_download_1:
      default: []
      items: {}
      title: args
      type: array
    core_download_2:
      title: filename
      type: string
    core_download_3:
      default: false
      description: |-
        Non-`buffered` downloads will allow job to write to pipe as soon as download URL is requested, job will stay
        blocked meanwhile. `buffered` downloads must wait for job to complete before requesting download URL, job's
        pipe output will be buffered to ramfs.
      title: buffered
      type: boolean
    core_download:
      properties:
        method:
          title: method
          type: string
        args:
          default: []
          items: {}
          title: args
          type: array
        filename:
          title: filename
          type: string
        buffered:
          default: false
          description: |-
            Non-`buffered` downloads will allow job to write to pipe as soon as download URL is requested, job will stay
            blocked meanwhile. `buffered` downloads must wait for job to complete before requesting download URL, job's
            pipe output will be buffered to ramfs.
          title: buffered
          type: boolean
      type: object
    core_job_abort_0:
      title: id
      type: integer
    core_job_update_0:
      title: id
      type: integer
    core_job_update_1:
      additionalProperties: false
      default: {}
      properties:
        progress:
          additionalProperties: true
          default: {}
          properties: {}
          title: progress
          type: object
      title: job-update
      type: object
    core_job_update:
      properties:
        id:
          title: id
          type: integer
        job-update:
          $ref: '#/components/schemas/core_job_update_1'
      type: object
    core_job_wait_0:
      title: id
      type: integer
    core_ping_remote_0:
      additionalProperties: false
      default: {}
      properties:
        type:
          default: ICMP
          enum:
          - ICMP
          - ICMPV4
          - ICMPV6
          title: type
          type: string
        hostname:
          title: hostname
          type: string
        timeout:
          default: 4
          title: timeout
          type: integer
      title: options
      type: object
    core_resize_shell_0:
      title: id
      type: string
    core_resize_shell_1:
      title: cols
      type: integer
    core_resize_shell_2:
      title: rows
      type: integer
    core_resize_shell:
      properties:
        id:
          title: id
          type: string
        cols:
          title: cols
          type: integer
        rows:
          title: rows
          type: integer
      type: object
    core_set_debug_mode_0:
      title: debug_mode
      type: boolean
    acme_dns_authenticator_create_0:
      additionalProperties: false
      default: {}
      properties:
        authenticator:
          enum:
          - cloudflare
          - route53
          - shell
          title: authenticator
          type: string
        attributes:
          additionalProperties: true
          default: {}
          description: Specific attributes of each `authenticator`
          properties: {}
          title: attributes
          type: object
        name:
          description: User defined name of authenticator
          title: name
          type: string
      title: acme_dns_authenticator_entry
      type: object
    acme_dns_authenticator_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    acme_dns_authenticator_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    acme_dns_authenticator_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/acme_dns_authenticator_get_instance_0'
        query-options:
          $ref: '#/components/schemas/acme_dns_authenticator_get_instance_1'
      type: object
    activedirectory_update_0:
      additionalProperties: false
      default: {}
      properties:
        domainname:
          description: '`domainname` full DNS domain name of the Active Directory
            domain.'
          title: domainname
          type: string
        bindname:
          description: '`bindname` username used to perform the intial domain join.'
          title: bindname
          type: string
        bindpw:
          description: |-
            `bindpw` password used to perform the initial domain join. User-
            provided credentials are used to obtain a kerberos ticket, which
            is used to perform the actual domain join.
          title: bindpw
          type: string
        verbose_logging:
          description: '`verbose_logging` increase logging during the domain join
            process.'
          title: verbose_logging
          type: boolean
        use_default_domain:
          description: "`use_default_domain` controls whether domain users and groups\
            \ have\nthe pre-windows 2000 domain name prepended to the user account.\
            \ When\nenabled, the user appears as \"administrator\" rather than\n\"\
            EXAMPLE\administrator\""
          title: use_default_domain
          type: boolean
        allow_trusted_doms:
          description: |-
            `allow_trusted_doms` enable support for trusted domains. If this
            parameter is enabled, then separate idmap backends _must_ be configured
            for each trusted domain, and the idmap cache should be cleared.
          title: allow_trusted_doms
          type: boolean
        allow_dns_updates:
          description: |-
            `allow_dns_updates` during the domain join process, automatically
            generate DNS entries in the AD domain for the NAS. If this is disabled,
            then a domain administrator must manually add appropriate DNS entries
            for the NAS. This parameter is recommended for TrueNAS HA servers.
          title: allow_dns_updates
          type: boolean
        disable_freenas_cache:
          description: |-
            `disable_freenas_cache` disables active caching of AD users and groups.
            When disabled, only users cached in winbind's internal cache are
            visible in GUI dropdowns. Disabling active caching is recommended
            in environments with a large amount of users.
          title: disable_freenas_cache
          type: boolean
        restrict_pam:
          default: false
          title: restrict_pam
          type: boolean
        site:
          description: |-
            `site` AD site of which the NAS is a member. This parameter is auto-
            detected during the domain join process. If no AD site is configured
            for the subnet in which the NAS is configured, then this parameter
            appears as 'Default-First-Site-Name'. Auto-detection is only performed
            during the initial domain join.
          nullable: true
          title: site
          type: string
        kerberos_realm:
          description: |-
            `kerberos_realm` in which the server is located. This parameter is
            automatically populated during the initial domain join. If the NAS has
            an AD site configured and that site has multiple kerberos servers, then
            the kerberos realm is automatically updated with a site-specific
            configuration to use those servers. Auto-detection is only performed
            during initial domain join.
          nullable: true
          title: kerberos_realm
          type: integer
        kerberos_principal:
          description: |-
            `kerberos_principal` kerberos principal to use for AD-related
            operations outside of Samba. After intial domain join, this field is
            updated with the kerberos principal associated with the AD machine
            account for the NAS.
          nullable: true
          title: kerberos_principal
          type: string
        timeout:
          default: 60
          description: |-
            `timeout` timeout value for winbind-related operations. This value may
            need to be increased in  environments with high latencies for
            communications with domain controllers or a large number of domain
            controllers. Lowering the value may cause status checks to fail.
          title: timeout
          type: integer
        dns_timeout:
          default: 10
          description: |-
            `dns_timeout` timeout value for DNS queries during the initial domain
            join. This value is also set as the NETWORK_TIMEOUT in the ldap config
            file.
          title: dns_timeout
          type: integer
        nss_info:
          default: ""
          description: |-
            `nss_info` controls how Winbind retrieves Name Service Information to
            construct a user's home directory and login shell. This parameter
            is only effective if the Active Directory Domain Controller supports
            the Microsoft Services for Unix (SFU) LDAP schema.
          enum:
          - SFU
          - SFU20
          - RFC2307
          nullable: true
          title: nss_info
          type: string
        createcomputer:
          description: |-
            `createcomputer` Active Directory Organizational Unit in which new
            computer accounts are created.
          title: createcomputer
          type: string
        netbiosname:
          title: netbiosname
          type: string
        netbiosname_b:
          title: netbiosname_b
          type: string
        netbiosalias:
          default: []
          items: {}
          title: netbiosalias
          type: array
        enable:
          description: |-
            The Active Directory service is started after a configuration
            update if the service was initially disabled, and the updated
            configuration sets `enable` to `True`. The Active Directory
            service is stopped if `enable` is changed to `False`. If the
            configuration is updated, but the initial `enable` state is `True`, and
            remains unchanged, then the samba server is only restarted.
          title: enable
          type: boolean
      title: activedirectory_update
      type: object
    activedirectory_domain_info_0:
      default: ""
      title: domain
      type: string
    activedirectory_leave_0:
      additionalProperties: false
      default: {}
      properties:
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      title: kerberos_username_password
      type: object
    alert_dismiss_0:
      title: uuid
      type: string
    alert_restore_0:
      title: uuid
      type: string
    alertclasses_update_0:
      additionalProperties: false
      default: {}
      properties:
        classes:
          additionalProperties: true
          default: {}
          properties: {}
          title: classes
          type: object
      title: alertclasses_entry
      type: object
    alertservice_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        type:
          description: |-
            Create an Alert Service of specified `type`.
            If `enabled`, it sends alerts to the configured `type` of Alert Service.
          title: type
          type: string
        attributes:
          additionalProperties: true
          default: {}
          properties: {}
          title: attributes
          type: object
        level:
          enum:
          - INFO
          - NOTICE
          - WARNING
          - ERROR
          - CRITICAL
          - ALERT
          - EMERGENCY
          title: level
          type: string
        enabled:
          default: true
          description: "If `enabled`, it sends alerts to the configured `type` of\
            \ Alert Service."
          title: enabled
          type: boolean
      title: alert_service_create
      type: object
    alertservice_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    alertservice_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    alertservice_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/alertservice_get_instance_0'
        query-options:
          $ref: '#/components/schemas/alertservice_get_instance_1'
      type: object
    alertservice_test_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        type:
          description: Send a test alert using `type` of Alert Service.
          title: type
          type: string
        attributes:
          additionalProperties: true
          default: {}
          properties: {}
          title: attributes
          type: object
        level:
          enum:
          - INFO
          - NOTICE
          - WARNING
          - ERROR
          - CRITICAL
          - ALERT
          - EMERGENCY
          title: level
          type: string
        enabled:
          default: true
          title: enabled
          type: boolean
      title: alert_service_create
      type: object
    api_key_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        allowlist:
          default: []
          items:
            $ref: '#/components/schemas/allowlist_item'
          title: allowlist
          type: array
      title: api_key_create
      type: object
    api_key_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    api_key_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    api_key_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/api_key_get_instance_0'
        query-options:
          $ref: '#/components/schemas/api_key_get_instance_1'
      type: object
    auth_check_password_0:
      title: username
      type: string
    auth_check_password_1:
      title: password
      type: string
    auth_check_password:
      properties:
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      type: object
    auth_check_user_0:
      title: username
      type: string
    auth_check_user_1:
      title: password
      type: string
    auth_check_user:
      properties:
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      type: object
    auth_generate_token_0:
      default: 600
      description: |-
        `ttl` stands for Time To Live, in seconds. The token will be invalidated if the connection
        has been inactive for a time greater than this.
      nullable: true
      title: ttl
      type: integer
    auth_generate_token_1:
      additionalProperties: true
      default: {}
      description: '`attrs` is a general purpose object/dictionary to hold information
        about the token.'
      properties: {}
      title: attrs
      type: object
    auth_generate_token_2:
      default: false
      title: match_origin
      type: boolean
    auth_generate_token:
      properties:
        ttl:
          default: 600
          description: |-
            `ttl` stands for Time To Live, in seconds. The token will be invalidated if the connection
            has been inactive for a time greater than this.
          nullable: true
          title: ttl
          type: integer
        attrs:
          additionalProperties: true
          default: {}
          description: '`attrs` is a general purpose object/dictionary to hold information
            about the token.'
          properties: {}
          title: attrs
          type: object
        match_origin:
          default: false
          title: match_origin
          type: boolean
      type: object
    auth_terminate_session_0:
      title: id
      type: string
    auth_twofactor_update_0:
      additionalProperties: false
      default: {}
      properties:
        enabled:
          title: enabled
          type: boolean
        otp_digits:
          description: '`otp_digits` represents number of allowed digits in the OTP.'
          title: otp_digits
          type: integer
        window:
          description: '`window` extends the validity to `window` many counter ticks
            before and after the current one.'
          title: window
          type: integer
        interval:
          title: interval
          type: integer
        services:
          $ref: '#/components/schemas/services'
      title: auth_twofactor_entry
      type: object
    auth_twofactor_verify_0:
      nullable: true
      title: token
      type: string
    boot_attach_0:
      title: dev
      type: string
    boot_attach_1:
      additionalProperties: false
      default: {}
      properties:
        expand:
          default: false
          title: expand
          type: boolean
      title: options
      type: object
    boot_attach:
      properties:
        dev:
          title: dev
          type: string
        options:
          $ref: '#/components/schemas/boot_attach_1'
      type: object
    boot_detach_0:
      title: dev
      type: string
    boot_replace_0:
      title: label
      type: string
    boot_replace_1:
      title: dev
      type: string
    boot_replace:
      properties:
        label:
          title: label
          type: string
        dev:
          title: dev
          type: string
      type: object
    boot_set_scrub_interval_0:
      title: interval
      type: integer
    bootenv_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: |-
            Create a new boot environment using `name`.
            If a new boot environment is desired which is a clone of another boot environment, `source` can be passed.
            Then, a new boot environment of `name` is created using boot environment `source` by cloning it.
          title: name
          type: string
        source:
          description: |-
            If a new boot environment is desired which is a clone of another boot environment, `source` can be passed.
            Then, a new boot environment of `name` is created using boot environment `source` by cloning it.
          title: source
          type: string
      title: bootenv_create
      type: object
    bootenv_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    bootenv_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    bootenv_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/bootenv_get_instance_0'
        query-options:
          $ref: '#/components/schemas/bootenv_get_instance_1'
      type: object
    catalog_create_0:
      additionalProperties: false
      default: {}
      properties:
        label:
          title: label
          type: string
        repository:
          title: repository
          type: string
        branch:
          title: branch
          type: string
        preferred_trains:
          default: []
          items: {}
          title: preferred_trains
          type: array
        force:
          default: false
          title: force
          type: boolean
      title: catalog_entry
      type: object
    catalog_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    catalog_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    catalog_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/catalog_get_instance_0'
        query-options:
          $ref: '#/components/schemas/catalog_get_instance_1'
      type: object
    catalog_get_item_details_0:
      title: item_name
      type: string
    catalog_get_item_details_1:
      additionalProperties: false
      default: {}
      properties:
        cache:
          title: cache
          type: boolean
        catalog:
          title: catalog
          type: string
        train:
          title: train
          type: string
      title: item_version_details
      type: object
    catalog_get_item_details:
      properties:
        item_name:
          title: item_name
          type: string
        item_version_details:
          $ref: '#/components/schemas/catalog_get_item_details_1'
      type: object
    catalog_items_0:
      description: |-
        Retrieve item details for `label` catalog.
        `options.cache` is a boolean which when set will try to get items details for `label` catalog from cache
        if available.
      title: label
      type: string
    catalog_items_1:
      additionalProperties: false
      default: {}
      properties:
        cache:
          default: true
          title: cache
          type: boolean
        cache_only:
          default: false
          title: cache_only
          type: boolean
        retrieve_all_trains:
          default: true
          title: retrieve_all_trains
          type: boolean
        trains:
          default: []
          items:
            title: train_name
            type: string
          title: trains
          type: array
      title: options
      type: object
    catalog_items:
      properties:
        label:
          description: |-
            Retrieve item details for `label` catalog.
            `options.cache` is a boolean which when set will try to get items details for `label` catalog from cache
            if available.
          title: label
          type: string
        options:
          $ref: '#/components/schemas/catalog_items_1'
      type: object
    catalog_sync_0:
      title: label
      type: string
    catalog_validate_0:
      description: Validates `label` catalog format which includes validating trains
        and applications with their versions.
      title: label
      type: string
    certificate_create_0:
      additionalProperties: false
      default: {}
      properties:
        tos:
          title: tos
          type: boolean
        dns_mapping:
          additionalProperties: true
          default: {}
          properties: {}
          title: dns_mapping
          type: object
        csr_id:
          title: csr_id
          type: integer
        signedby:
          title: signedby
          type: integer
        key_length:
          title: key_length
          type: integer
        renew_days:
          title: renew_days
          type: integer
        type:
          title: type
          type: integer
        lifetime:
          title: lifetime
          type: integer
        serial:
          title: serial
          type: integer
        acme_directory_uri:
          title: acme_directory_uri
          type: string
        certificate:
          title: certificate
          type: string
        city:
          title: city
          type: string
        common:
          nullable: true
          title: common
          type: string
        country:
          title: country
          type: string
        CSR:
          title: CSR
          type: string
        ec_curve:
          default: SECP384R1
          description: |-
            `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to
            using "BrainpoolP384R1" curve.
          enum:
          - BrainpoolP512R1
          - BrainpoolP384R1
          - BrainpoolP256R1
          - SECP256K1
          - SECP384R1
          - SECP521R1
          - ed25519
          title: ec_curve
          type: string
        email:
          title: email
          type: string
        key_type:
          default: RSA
          description: |-
            `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to
            using "BrainpoolP384R1" curve.
          enum:
          - RSA
          - EC
          title: key_type
          type: string
        name:
          title: name
          type: string
        organization:
          title: organization
          type: string
        organizational_unit:
          title: organizational_unit
          type: string
        passphrase:
          title: passphrase
          type: string
        privatekey:
          title: privatekey
          type: string
        state:
          title: state
          type: string
        create_type:
          description: |-
            Certificates are classified under following types and the necessary keywords to be passed
            for `create_type` attribute to create the respective type of certificate
            A type is selected by the Certificate Service based on `create_type`. The rest of the values in `data` are
            validated accordingly and finally a certificate is made based on the selected type.
          enum:
          - CERTIFICATE_CREATE_INTERNAL
          - CERTIFICATE_CREATE_IMPORTED
          - CERTIFICATE_CREATE_CSR
          - CERTIFICATE_CREATE_IMPORTED_CSR
          - CERTIFICATE_CREATE_ACME
          title: create_type
          type: string
        digest_algorithm:
          enum:
          - SHA224
          - SHA256
          - SHA384
          - SHA512
          title: digest_algorithm
          type: string
        san:
          default: []
          items:
            title: san
            type: string
          title: san
          type: array
        cert_extensions:
          $ref: '#/components/schemas/cert_extensions'
      title: certificate_create
      type: object
    certificate_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    certificate_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    certificate_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/certificate_get_instance_0'
        query-options:
          $ref: '#/components/schemas/certificate_get_instance_1'
      type: object
    certificateauthority_create_0:
      additionalProperties: false
      default: {}
      properties:
        tos:
          title: tos
          type: boolean
        csr_id:
          title: csr_id
          type: integer
        signedby:
          title: signedby
          type: integer
        key_length:
          title: key_length
          type: integer
        renew_days:
          title: renew_days
          type: integer
        type:
          title: type
          type: integer
        lifetime:
          title: lifetime
          type: integer
        serial:
          title: serial
          type: integer
        acme_directory_uri:
          title: acme_directory_uri
          type: string
        certificate:
          title: certificate
          type: string
        city:
          title: city
          type: string
        common:
          nullable: true
          title: common
          type: string
        country:
          title: country
          type: string
        CSR:
          title: CSR
          type: string
        ec_curve:
          default: SECP384R1
          description: |-
            Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be
            specified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic
            Curve Key, default to using "BrainpoolP384R1" curve.
          enum:
          - BrainpoolP512R1
          - BrainpoolP384R1
          - BrainpoolP256R1
          - SECP256K1
          - SECP384R1
          - SECP521R1
          - ed25519
          title: ec_curve
          type: string
        email:
          title: email
          type: string
        key_type:
          default: RSA
          description: |-
            Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be
            specified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic
            Curve Key, default to using "BrainpoolP384R1" curve.
          enum:
          - RSA
          - EC
          title: key_type
          type: string
        name:
          title: name
          type: string
        organization:
          title: organization
          type: string
        organizational_unit:
          title: organizational_unit
          type: string
        passphrase:
          title: passphrase
          type: string
        privatekey:
          title: privatekey
          type: string
        state:
          title: state
          type: string
        create_type:
          description: |-
            Certificate Authorities are classified under following types with the necessary keywords to be passed
            for `create_type` attribute to create the respective type of certificate authority
            A type is selected by the Certificate Authority Service based on `create_type`. The rest of the values
            are validated accordingly and finally a certificate is made based on the selected type.
          enum:
          - CA_CREATE_INTERNAL
          - CA_CREATE_IMPORTED
          - CA_CREATE_INTERMEDIATE
          title: create_type
          type: string
        digest_algorithm:
          enum:
          - SHA224
          - SHA256
          - SHA384
          - SHA512
          title: digest_algorithm
          type: string
        san:
          default: []
          items:
            title: san
            type: string
          title: san
          type: array
        cert_extensions:
          $ref: '#/components/schemas/cert_extensions_1'
        add_to_trusted_store:
          default: false
          title: add_to_trusted_store
          type: boolean
      title: certificate_create
      type: object
    certificateauthority_ca_sign_csr_0:
      additionalProperties: false
      default: {}
      properties:
        ca_id:
          description: |-
            Sign CSR by Certificate Authority of `ca_id`
            Sign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing
            a CSR of `csr_cert_id` which exists in the system
          title: ca_id
          type: integer
        csr_cert_id:
          description: |-
            Sign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing
            a CSR of `csr_cert_id` which exists in the system
          title: csr_cert_id
          type: integer
        name:
          title: name
          type: string
        cert_extensions:
          $ref: '#/components/schemas/cert_extensions_2'
      title: ca_sign_csr
      type: object
    certificateauthority_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    certificateauthority_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    certificateauthority_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/certificateauthority_get_instance_0'
        query-options:
          $ref: '#/components/schemas/certificateauthority_get_instance_1'
      type: object
    chart_release_create_0:
      additionalProperties: false
      default: {}
      properties:
        values:
          additionalProperties: true
          default: {}
          properties: {}
          title: values
          type: object
        catalog:
          description: |-
            `catalog` is a valid catalog id where system will look for catalog `item` details.
            `train` is which train to look for under `catalog` i.e stable / testing etc.
          title: catalog
          type: string
        item:
          description: |-
            `catalog` is a valid catalog id where system will look for catalog `item` details.
            `version` specifies the catalog `item` version.
          title: item
          type: string
        release_name:
          description: '`release_name` is the name which will be used to identify
            the created chart release.'
          title: release_name
          type: string
        train:
          default: charts
          description: '`train` is which train to look for under `catalog` i.e stable
            / testing etc.'
          title: train
          type: string
        version:
          default: latest
          description: '`version` specifies the catalog `item` version.'
          title: version
          type: string
      title: chart_release_create
      type: object
    chart_release_events_0:
      title: release_name
      type: string
    chart_release_get_chart_releases_using_chart_release_images_0:
      title: chart_release_name
      type: string
    chart_release_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    chart_release_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    chart_release_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/chart_release_get_instance_0'
        query-options:
          $ref: '#/components/schemas/chart_release_get_instance_1'
      type: object
    chart_release_pod_console_choices_0:
      title: release_name
      type: string
    chart_release_pod_logs_0:
      description: Export logs of `options.container_name` container in `options.pod_name`
        pod in `release_name` chart release.
      title: release_name
      type: string
    chart_release_pod_logs_1:
      additionalProperties: false
      default: {}
      properties:
        limit_bytes:
          nullable: true
          title: limit_bytes
          type: integer
        tail_lines:
          default: 500
          nullable: true
          title: tail_lines
          type: integer
        pod_name:
          title: pod_name
          type: string
        container_name:
          title: container_name
          type: string
      title: options
      type: object
    chart_release_pod_logs:
      properties:
        release_name:
          description: Export logs of `options.container_name` container in `options.pod_name`
            pod in `release_name` chart release.
          title: release_name
          type: string
        options:
          $ref: '#/components/schemas/chart_release_pod_logs_1'
      type: object
    chart_release_pod_logs_choices_0:
      title: release_name
      type: string
    chart_release_pod_status_0:
      title: release_name
      type: string
    chart_release_pull_container_images_0:
      description: Update container images being used by `release_name` chart release.
      title: release_name
      type: string
    chart_release_pull_container_images_1:
      additionalProperties: false
      default: {}
      properties:
        redeploy:
          default: true
          title: redeploy
          type: boolean
      title: pull_container_images_options
      type: object
    chart_release_pull_container_images:
      properties:
        release_name:
          description: Update container images being used by `release_name` chart
            release.
          title: release_name
          type: string
        pull_container_images_options:
          $ref: '#/components/schemas/chart_release_pull_container_images_1'
      type: object
    chart_release_redeploy_0:
      title: release_name
      type: string
    chart_release_remove_ix_volume_0:
      title: release_name
      type: string
    chart_release_remove_ix_volume_1:
      title: volume_name
      type: string
    chart_release_remove_ix_volume:
      properties:
        release_name:
          title: release_name
          type: string
        volume_name:
          title: volume_name
          type: string
      type: object
    chart_release_rollback_0:
      title: release_name
      type: string
    chart_release_rollback_1:
      additionalProperties: false
      default: {}
      properties:
        force_rollback:
          default: false
          description: |-
            `force_rollback` is a boolean which when set will force rollback operation to move forward even if no
            snapshots are found. This is only useful when `rollback_snapshot` is set.
          title: force_rollback
          type: boolean
        recreate_resources:
          default: false
          description: |-
            `recreate_resources` is a boolean which will delete and then create the kubernetes resources on rollback
            of chart release. This should be used with caution as if chart release is consuming immutable objects like
            a PVC, the rollback operation can't be performed and will fail as helm tries to do a 3 way patch for rollback.
          title: recreate_resources
          type: boolean
        rollback_snapshot:
          default: true
          description: |-
            `rollback_snapshot` is a boolean value which when set will rollback snapshots of any PVC's or ix volumes being
            consumed by the chart release.
            `force_rollback` is a boolean which when set will force rollback operation to move forward even if no
            snapshots are found. This is only useful when `rollback_snapshot` is set.
          title: rollback_snapshot
          type: boolean
        item_version:
          description: '`item_version` is version which we want to rollback a chart
            release to.'
          title: item_version
          type: string
      title: rollback_options
      type: object
    chart_release_rollback:
      properties:
        release_name:
          title: release_name
          type: string
        rollback_options:
          $ref: '#/components/schemas/chart_release_rollback_1'
      type: object
    chart_release_scale_0:
      description: Scale a `release_name` chart release to `scale_options.replica_count`
        specified.
      title: release_name
      type: string
    chart_release_scale_1:
      additionalProperties: false
      default: {}
      properties:
        replica_count:
          title: replica_count
          type: integer
      title: scale_options
      type: object
    chart_release_scale:
      properties:
        release_name:
          description: Scale a `release_name` chart release to `scale_options.replica_count`
            specified.
          title: release_name
          type: string
        scale_options:
          $ref: '#/components/schemas/chart_release_scale_1'
      type: object
    chart_release_scale_workloads_0:
      title: release_name
      type: string
    chart_release_scale_workloads_1:
      default: []
      items:
        $ref: '#/components/schemas/scale_workload'
      title: workloads
      type: array
    chart_release_scale_workloads:
      properties:
        release_name:
          title: release_name
          type: string
        workloads:
          default: []
          items:
            $ref: '#/components/schemas/scale_workload'
          title: workloads
          type: array
      type: object
    chart_release_upgrade_0:
      description: |-
        Upgrade `release_name` chart release.
        System will update container images being used by `release_name` chart release as a chart release
        upgrade is not considered complete until the images in use have also been updated to latest versions.
      title: release_name
      type: string
    chart_release_upgrade_1:
      additionalProperties: false
      default: {}
      properties:
        values:
          additionalProperties: true
          default: {}
          properties: {}
          title: values
          type: object
        item_version:
          default: latest
          title: item_version
          type: string
      title: upgrade_options
      type: object
    chart_release_upgrade:
      properties:
        release_name:
          description: |-
            Upgrade `release_name` chart release.
            System will update container images being used by `release_name` chart release as a chart release
            upgrade is not considered complete until the images in use have also been updated to latest versions.
          title: release_name
          type: string
        upgrade_options:
          $ref: '#/components/schemas/chart_release_upgrade_1'
      type: object
    chart_release_upgrade_summary_0:
      description: |-
        Retrieve upgrade summary for `release_name` which will include which container images will be updated
        and changelog for `options.item_version` chart version specified if applicable. If only container images
        need to be updated, changelog will be `null`.
      title: release_name
      type: string
    chart_release_upgrade_summary_1:
      additionalProperties: false
      default: {}
      properties:
        item_version:
          default: latest
          title: item_version
          type: string
      title: options
      type: object
    chart_release_upgrade_summary:
      properties:
        release_name:
          description: |-
            Retrieve upgrade summary for `release_name` which will include which container images will be updated
            and changelog for `options.item_version` chart version specified if applicable. If only container images
            need to be updated, changelog will be `null`.
          title: release_name
          type: string
        options:
          $ref: '#/components/schemas/chart_release_upgrade_summary_1'
      type: object
    cloudsync_create_0:
      additionalProperties: false
      default: {}
      properties:
        description:
          default: ""
          title: description
          type: string
        direction:
          enum:
          - PUSH
          - PULL
          title: direction
          type: string
        transfer_mode:
          enum:
          - SYNC
          - COPY
          - MOVE
          title: transfer_mode
          type: string
        path:
          title: path
          type: string
        credentials:
          title: credentials
          type: integer
        encryption:
          default: false
          title: encryption
          type: boolean
        filename_encryption:
          default: false
          title: filename_encryption
          type: boolean
        encryption_password:
          default: ""
          title: encryption_password
          type: string
        encryption_salt:
          default: ""
          title: encryption_salt
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        create_empty_src_dirs:
          default: false
          title: create_empty_src_dirs
          type: boolean
        follow_symlinks:
          default: false
          title: follow_symlinks
          type: boolean
        transfers:
          nullable: true
          title: transfers
          type: integer
        bwlimit:
          default: []
          items:
            $ref: '#/components/schemas/cloud_sync_bwlimit'
          title: bwlimit
          type: array
        include:
          default: []
          items:
            title: path
            type: string
          title: include
          type: array
        exclude:
          default: []
          items:
            title: path
            type: string
          title: exclude
          type: array
        attributes:
          additionalProperties: true
          default: {}
          properties: {}
          title: attributes
          type: object
        snapshot:
          default: false
          title: snapshot
          type: boolean
        pre_script:
          default: ""
          title: pre_script
          type: string
        post_script:
          default: ""
          title: post_script
          type: string
        args:
          default: ""
          title: args
          type: string
        enabled:
          default: true
          title: enabled
          type: boolean
      title: cloud_sync_create
      type: object
    cloudsync_create_bucket_0:
      title: credentials_id
      type: integer
    cloudsync_create_bucket_1:
      title: name
      type: string
    cloudsync_create_bucket:
      properties:
        credentials_id:
          title: credentials_id
          type: integer
        name:
          title: name
          type: string
      type: object
    cloudsync_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    cloudsync_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    cloudsync_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/cloudsync_get_instance_0'
        query-options:
          $ref: '#/components/schemas/cloudsync_get_instance_1'
      type: object
    cloudsync_list_buckets_0:
      title: credentials_id
      type: integer
    cloudsync_list_directory_0:
      additionalProperties: false
      default: {}
      properties:
        credentials:
          title: credentials
          type: integer
        encryption:
          default: false
          title: encryption
          type: boolean
        filename_encryption:
          default: false
          title: filename_encryption
          type: boolean
        encryption_password:
          default: ""
          title: encryption_password
          type: string
        encryption_salt:
          default: ""
          title: encryption_salt
          type: string
        attributes:
          additionalProperties: true
          default: {}
          description: |-
            If remote supports buckets, path is constructed by two keys "bucket"/"folder" in `attributes`.
            If remote does not support buckets, path is constructed using "folder" key only in `attributes`.
            "folder" is directory name and "bucket" is bucket name for remote.
          properties: {}
          title: attributes
          type: object
        args:
          default: ""
          title: args
          type: string
      title: cloud_sync_ls
      type: object
    cloudsync_onedrive_list_drives_0:
      additionalProperties: false
      default: {}
      properties:
        client_id:
          default: ""
          title: client_id
          type: string
        client_secret:
          default: ""
          title: client_secret
          type: string
        token:
          title: token
          type: string
      title: onedrive_list_drives
      type: object
    cloudsync_sync_onetime_0:
      additionalProperties: false
      default: {}
      properties:
        description:
          default: ""
          title: description
          type: string
        direction:
          enum:
          - PUSH
          - PULL
          title: direction
          type: string
        transfer_mode:
          enum:
          - SYNC
          - COPY
          - MOVE
          title: transfer_mode
          type: string
        path:
          title: path
          type: string
        credentials:
          title: credentials
          type: integer
        encryption:
          default: false
          title: encryption
          type: boolean
        filename_encryption:
          default: false
          title: filename_encryption
          type: boolean
        encryption_password:
          default: ""
          title: encryption_password
          type: string
        encryption_salt:
          default: ""
          title: encryption_salt
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        create_empty_src_dirs:
          default: false
          title: create_empty_src_dirs
          type: boolean
        follow_symlinks:
          default: false
          title: follow_symlinks
          type: boolean
        transfers:
          nullable: true
          title: transfers
          type: integer
        bwlimit:
          default: []
          items:
            $ref: '#/components/schemas/cloud_sync_bwlimit'
          title: bwlimit
          type: array
        include:
          default: []
          items:
            title: path
            type: string
          title: include
          type: array
        exclude:
          default: []
          items:
            title: path
            type: string
          title: exclude
          type: array
        attributes:
          additionalProperties: true
          default: {}
          properties: {}
          title: attributes
          type: object
        snapshot:
          default: false
          title: snapshot
          type: boolean
        pre_script:
          default: ""
          title: pre_script
          type: string
        post_script:
          default: ""
          title: post_script
          type: string
        args:
          default: ""
          title: args
          type: string
        enabled:
          default: true
          title: enabled
          type: boolean
      title: cloud_sync_create
      type: object
    cloudsync_sync_onetime_1:
      additionalProperties: false
      default: {}
      properties:
        dry_run:
          default: false
          title: dry_run
          type: boolean
      title: cloud_sync_sync_options
      type: object
    cloudsync_sync_onetime:
      properties:
        cloud_sync_create:
          $ref: '#/components/schemas/cloudsync_sync_onetime_0'
        cloud_sync_sync_options:
          $ref: '#/components/schemas/cloudsync_sync_onetime_1'
      type: object
    cloudsync_credentials_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        provider:
          title: provider
          type: string
        attributes:
          additionalProperties: true
          default: {}
          properties: {}
          title: attributes
          type: object
      title: cloud_sync_credentials_create
      type: object
    cloudsync_credentials_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    cloudsync_credentials_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    cloudsync_credentials_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/cloudsync_credentials_get_instance_0'
        query-options:
          $ref: '#/components/schemas/cloudsync_credentials_get_instance_1'
      type: object
    cloudsync_credentials_verify_0:
      additionalProperties: false
      default: {}
      properties:
        provider:
          title: provider
          type: string
        attributes:
          additionalProperties: true
          default: {}
          properties: {}
          title: attributes
          type: object
      title: cloud_sync_credentials_verify
      type: object
    config_reset_0:
      additionalProperties: false
      default: {}
      properties:
        reboot:
          default: true
          title: reboot
          type: boolean
      title: options
      type: object
    config_save_0:
      additionalProperties: false
      default: {}
      properties:
        secretseed:
          default: false
          description: "`secretseed` bool: When true, include password secret seed."
          title: secretseed
          type: boolean
        pool_keys:
          default: false
          description: "`pool_keys` bool: IGNORED and DEPRECATED as it does not apply\
            \ on SCALE systems."
          title: pool_keys
          type: boolean
        root_authorized_keys:
          default: false
          description: "`root_authorized_keys` bool: When true, include \"/root/.ssh/authorized_keys\"\
            \ file for the root user."
          title: root_authorized_keys
          type: boolean
        gluster_config:
          default: false
          description: "`gluster_config` bool: When true, include the directory that\
            \ stores the gluster configuration files."
          title: gluster_config
          type: boolean
      title: configsave
      type: object
    container_update_0:
      additionalProperties: false
      default: {}
      properties:
        enable_image_updates:
          title: enable_image_updates
          type: boolean
      title: container_entry
      type: object
    container_prune_0:
      additionalProperties: false
      default: {}
      properties:
        remove_unused_images:
          default: false
          title: remove_unused_images
          type: boolean
        remove_stopped_containers:
          default: false
          title: remove_stopped_containers
          type: boolean
      title: prune_options
      type: object
    container_image_get_chart_releases_consuming_image_0:
      default: []
      items:
        title: image_tag
        type: string
      title: image_tags
      type: array
    container_image_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    container_image_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    container_image_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/container_image_get_instance_0'
        query-options:
          $ref: '#/components/schemas/container_image_get_instance_1'
      type: object
    container_image_pull_0:
      additionalProperties: false
      default: {}
      properties:
        docker_authentication:
          $ref: '#/components/schemas/docker_authentication'
        from_image:
          description: |-
            `from_image` is the name of the image to pull. Format for the name is "registry/repo/image" where
            registry may be omitted and it will default to docker registry in this case.
          title: from_image
          type: string
        tag:
          description: |-
            `tag` specifies tag of the image and defaults to `null`. In case of `null` it will retrieve all the tags
            of the image.
          nullable: true
          title: tag
          type: string
      title: image_pull
      type: object
    cronjob_create_0:
      additionalProperties: false
      default: {}
      properties:
        enabled:
          title: enabled
          type: boolean
        stderr:
          default: false
          description: |-
            `stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress
            standard error / standard output respectively.
          title: stderr
          type: boolean
        stdout:
          default: true
          description: |-
            `stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress
            standard error / standard output respectively.
          title: stdout
          type: boolean
        schedule:
          $ref: '#/components/schemas/schedule'
        command:
          title: command
          type: string
        description:
          title: description
          type: string
        user:
          title: user
          type: string
      title: cron_job_create
      type: object
    cronjob_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    cronjob_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    cronjob_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/cronjob_get_instance_0'
        query-options:
          $ref: '#/components/schemas/cronjob_get_instance_1'
      type: object
    cronjob_run_0:
      title: id
      type: integer
    cronjob_run_1:
      default: false
      title: skip_disabled
      type: boolean
    cronjob_run:
      properties:
        id:
          title: id
          type: integer
        skip_disabled:
          default: false
          title: skip_disabled
          type: boolean
      type: object
    ctdb_general_ips_0:
      additionalProperties: false
      default: {}
      properties:
        all_nodes:
          default: true
          title: all_nodes
          type: boolean
      title: ctdb_ips
      type: object
    ctdb_general_status_0:
      additionalProperties: false
      default: {}
      properties:
        all_nodes:
          default: true
          description: |-
            `all_nodes`: Boolean if True, return status
                for all nodes in the cluster else return
                status of this node.
          title: all_nodes
          type: boolean
      title: ctdb_status
      type: object
    ctdb_private_ips_create_0:
      additionalProperties: false
      default: {}
      properties:
        ip:
          title: ip
          type: string
      title: private_create
      type: object
    ctdb_private_ips_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    ctdb_private_ips_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    ctdb_private_ips_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/ctdb_private_ips_get_instance_0'
        query-options:
          $ref: '#/components/schemas/ctdb_private_ips_get_instance_1'
      type: object
    ctdb_public_ips_create_0:
      additionalProperties: false
      default: {}
      properties:
        pnn:
          description: '`pnn` node number of record to adjust'
          title: pnn
          type: integer
        ip:
          description: '`ip` string representing an IP v4/v6 address'
          title: ip
          type: string
        netmask:
          description: '`netmask` integer representing a cidr notated netmask (i.e.
            16/24/48/64 etc)'
          title: netmask
          type: integer
        interface:
          title: interface
          type: string
      title: public_create
      type: object
    ctdb_public_ips_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    ctdb_public_ips_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    ctdb_public_ips_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/ctdb_public_ips_get_instance_0'
        query-options:
          $ref: '#/components/schemas/ctdb_public_ips_get_instance_1'
      type: object
    ctdb_public_ips_interface_choices_0:
      default: []
      items:
        title: exclude_iface
        type: string
      title: exclude_ifaces
      type: array
    device_get_info_0:
      enum:
      - SERIAL
      - DISK
      - GPU
      title: type
      type: string
    disk_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    disk_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    disk_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/disk_get_instance_0'
        query-options:
          $ref: '#/components/schemas/disk_get_instance_1'
      type: object
    disk_get_unused_0:
      default: false
      title: join_partitions
      type: boolean
    disk_resize_0:
      default: []
      items:
        $ref: '#/components/schemas/disk_resize_0_inner'
      title: disks
      type: array
    disk_resize_1:
      default: true
      description: |-
        `sync`: boolean, when true (default) will synchronize the new size of the disk(s)
            with the database cache.
      title: sync
      type: boolean
    disk_resize_2:
      default: false
      description: |-
        `raise_error`: boolean
            when true, will raise a `CallError` if any failures occur
            when false, will will log the errors if any failures occur
      title: raise_error
      type: boolean
    disk_resize:
      properties:
        disks:
          default: []
          items:
            $ref: '#/components/schemas/disk_resize_0_inner'
          title: disks
          type: array
        sync:
          default: true
          description: |-
            `sync`: boolean, when true (default) will synchronize the new size of the disk(s)
                with the database cache.
          title: sync
          type: boolean
        raise_error:
          default: false
          description: |-
            `raise_error`: boolean
                when true, will raise a `CallError` if any failures occur
                when false, will will log the errors if any failures occur
          title: raise_error
          type: boolean
      type: object
    disk_retaste_0:
      items:
        title: name
        type: string
      title: disks
      type: array
    disk_smart_attributes_0:
      title: name
      type: string
    disk_temperature_0:
      title: name
      type: string
    disk_temperature_1:
      additionalProperties: false
      default: {}
      properties:
        cache:
          nullable: true
          title: cache
          type: integer
        powermode:
          default: NEVER
          enum:
          - NEVER
          - SLEEP
          - STANDBY
          - IDLE
          title: powermode
          type: string
      title: options
      type: object
    disk_temperature:
      properties:
        name:
          title: name
          type: string
        options:
          $ref: '#/components/schemas/disk_temperature_1'
      type: object
    disk_temperature_agg_0:
      default: []
      items:
        title: name
        type: string
      title: names
      type: array
    disk_temperature_agg_1:
      title: days
      type: integer
    disk_temperature_agg:
      properties:
        names:
          default: []
          items:
            title: name
            type: string
          title: names
          type: array
        days:
          title: days
          type: integer
      type: object
    disk_temperature_alerts_0:
      default: []
      items:
        title: name
        type: string
      title: names
      type: array
    disk_temperatures_0:
      default: []
      items:
        title: name
        type: string
      title: names
      type: array
    disk_temperatures_1:
      additionalProperties: false
      default: {}
      properties:
        cache:
          default: 290
          nullable: true
          title: cache
          type: integer
        only_cached:
          default: false
          title: only_cached
          type: boolean
        powermode:
          default: NEVER
          enum:
          - NEVER
          - SLEEP
          - STANDBY
          - IDLE
          title: powermode
          type: string
      title: options
      type: object
    disk_temperatures:
      properties:
        names:
          default: []
          items:
            title: name
            type: string
          title: names
          type: array
        options:
          $ref: '#/components/schemas/disk_temperatures_1'
      type: object
    disk_wipe_0:
      title: dev
      type: string
    disk_wipe_1:
      enum:
      - QUICK
      - FULL
      - FULL_RANDOM
      title: mode
      type: string
    disk_wipe_2:
      default: true
      title: synccache
      type: boolean
    disk_wipe_3:
      additionalProperties: false
      default: {}
      properties:
        configure_swap:
          default: true
          title: configure_swap
          type: boolean
      title: swap_removal_options
      type: object
    disk_wipe:
      properties:
        dev:
          title: dev
          type: string
        mode:
          $ref: '#/components/schemas/disk_wipe_1'
        synccache:
          default: true
          title: synccache
          type: boolean
        swap_removal_options:
          $ref: '#/components/schemas/disk_wipe_3'
      type: object
    dyndns_update_0:
      additionalProperties: false
      default: {}
      properties:
        provider:
          title: provider
          type: string
        checkip_ssl:
          title: checkip_ssl
          type: boolean
        checkip_server:
          title: checkip_server
          type: string
        checkip_path:
          title: checkip_path
          type: string
        ssl:
          title: ssl
          type: boolean
        custom_ddns_server:
          title: custom_ddns_server
          type: string
        custom_ddns_path:
          title: custom_ddns_path
          type: string
        domain:
          default: []
          items:
            title: domain
            type: string
          title: domain
          type: array
        username:
          title: username
          type: string
        password:
          title: password
          type: string
        period:
          description: '`period` indicates how often the IP is checked in seconds.'
          title: period
          type: integer
      title: dyndns_entry
      type: object
    enclosure_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    enclosure_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    enclosure_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/enclosure_get_instance_0'
        query-options:
          $ref: '#/components/schemas/enclosure_get_instance_1'
      type: object
    enclosure_set_slot_status_0:
      title: enclosure_id
      type: string
    enclosure_set_slot_status_1:
      title: slot
      type: integer
    enclosure_set_slot_status_2:
      enum:
      - CLEAR
      - FAULT
      - IDENTIFY
      title: status
      type: string
    enclosure_set_slot_status:
      properties:
        enclosure_id:
          title: enclosure_id
          type: string
        slot:
          title: slot
          type: integer
        status:
          $ref: '#/components/schemas/enclosure_set_slot_status_2'
      type: object
    failover_update_0:
      additionalProperties: false
      default: {}
      properties:
        disabled:
          description: '`disabled` When true indicates that HA will be disabled.'
          title: disabled
          type: boolean
        timeout:
          description: |-
            `timeout` is the time to WAIT until a failover occurs when a network
                event occurs on an interface that is marked critical for failover AND
                HA is enabled and working appropriately.
          title: timeout
          type: integer
        master:
          description: |-
            `master`  Marks the particular node in the chassis as the master node.
                        The standby node will have the opposite value.
          nullable: true
          title: master
          type: boolean
      title: failover_entry
      type: object
    failover_call_remote_0:
      description: |-
        `method` name of the method to be called
        `args` list of arguments to be passed to `method`
      title: method
      type: string
    failover_call_remote_1:
      default: []
      description: |-
        `method` name of the method to be called
        `args` list of arguments to be passed to `method`
      items: {}
      title: args
      type: array
    failover_call_remote_2:
      additionalProperties: false
      default: {}
      properties:
        timeout:
          default: 60
          title: timeout
          type: integer
        job:
          default: false
          title: job
          type: boolean
        job_return:
          nullable: true
          title: job_return
          type: boolean
        callback:
          default: null
          nullable: true
          title: callback
        connect_timeout:
          title: connect_timeout
          type: float
      title: options
      type: object
    failover_call_remote:
      properties:
        method:
          description: |-
            `method` name of the method to be called
            `args` list of arguments to be passed to `method`
          title: method
          type: string
        args:
          default: []
          description: |-
            `method` name of the method to be called
            `args` list of arguments to be passed to `method`
          items: {}
          title: args
          type: array
        options:
          $ref: '#/components/schemas/failover_call_remote_2'
      type: object
    failover_control_0:
      enum:
      - ENABLE
      - DISABLE
      title: action
      type: string
    failover_control_1:
      additionalProperties: false
      default: {}
      properties:
        active:
          title: active
          type: boolean
      title: options
      type: object
    failover_control:
      properties:
        action:
          $ref: '#/components/schemas/failover_control_0'
        options:
          $ref: '#/components/schemas/failover_control_1'
      type: object
    failover_sync_to_peer_0:
      additionalProperties: false
      default: {}
      properties:
        reboot:
          default: false
          title: reboot
          type: boolean
      title: options
      type: object
    failover_unlock_0:
      additionalProperties: false
      default: {}
      properties:
        pools:
          default: []
          items:
            $ref: '#/components/schemas/pool_keys'
          title: pools
          type: array
        datasets:
          default: []
          items:
            $ref: '#/components/schemas/dataset_keys'
          title: datasets
          type: array
      title: options
      type: object
    failover_upgrade_0:
      additionalProperties: false
      default: {}
      properties:
        train:
          title: train
          type: string
      title: failover_upgrade
      type: object
    filesystem_acl_is_trivial_0:
      title: path
      type: string
    filesystem_can_access_as_user_0:
      title: username
      type: string
    filesystem_can_access_as_user_1:
      title: path
      type: string
    filesystem_can_access_as_user_2:
      additionalProperties: false
      default: {}
      properties:
        read:
          nullable: true
          title: read
          type: boolean
        write:
          nullable: true
          title: write
          type: boolean
        execute:
          nullable: true
          title: execute
          type: boolean
      title: permissions
      type: object
    filesystem_can_access_as_user:
      properties:
        username:
          title: username
          type: string
        path:
          title: path
          type: string
        permissions:
          $ref: '#/components/schemas/filesystem_can_access_as_user_2'
      type: object
    filesystem_chown_0:
      additionalProperties: false
      default: {}
      properties:
        path:
          description: Change owner or group of file at `path`.
          title: path
          type: string
        uid:
          description: |-
            `uid` and `gid` specify new owner of the file. If either
            key is absent or None, then existing value on the file is not
            changed.
          nullable: true
          title: uid
          type: integer
        gid:
          description: |-
            `uid` and `gid` specify new owner of the file. If either
            key is absent or None, then existing value on the file is not
            changed.
          nullable: true
          title: gid
          type: integer
        options:
          $ref: '#/components/schemas/options'
      title: filesystem_ownership
      type: object
    filesystem_default_acl_choices_0:
      default: ""
      title: path
      type: string
    filesystem_get_0:
      title: path
      type: string
    filesystem_get_default_acl_0:
      default: POSIX_OPEN
      title: acl_type
      type: string
    filesystem_get_default_acl_1:
      default: NONE
      enum:
      - NONE
      - SMB
      - NFS
      title: share_type
      type: string
    filesystem_get_default_acl:
      properties:
        acl_type:
          default: POSIX_OPEN
          title: acl_type
          type: string
        share_type:
          $ref: '#/components/schemas/filesystem_get_default_acl_1'
      type: object
    filesystem_get_dosmode_0:
      title: path
      type: string
    filesystem_getacl_0:
      title: path
      type: string
    filesystem_getacl_1:
      default: true
      description: |-
        `simplified` - effect of this depends on ACL type on underlying filesystem. In the case of
        NFSv4 ACLs simplified permissions and flags are returned for ACL entries where applicable.
        NFSv4 errata below. In the case of POSIX1E ACls, this setting has no impact on returned ACL.
        `simplified` returns a shortened form of the ACL permset and flags where applicable. If permissions
        have been simplified, then the `perms` object will contain only a single `BASIC` key with a string
        describing the underlying permissions set.
      title: simplified
      type: boolean
    filesystem_getacl_2:
      default: false
      description: |-
        `resolve_ids` - adds additional `who` key to each ACL entry, that converts the numeric id to
        a user name or group name. In the case of owner@ and group@ (NFSv4) or USER_OBJ and GROUP_OBJ
        (POSIX1E), st_uid or st_gid will be converted from stat() return for file. In the case of
        MASK (POSIX1E), OTHER (POSIX1E), everyone@ (NFSv4), key `who` will be included, but set to null.
        In case of failure to resolve the id to a name, `who` will be set to null. This option should
        only be used if resolving ids to names is required.
      title: resolve_ids
      type: boolean
    filesystem_getacl:
      properties:
        path:
          title: path
          type: string
        simplified:
          default: true
          description: |-
            `simplified` - effect of this depends on ACL type on underlying filesystem. In the case of
            NFSv4 ACLs simplified permissions and flags are returned for ACL entries where applicable.
            NFSv4 errata below. In the case of POSIX1E ACls, this setting has no impact on returned ACL.
            `simplified` returns a shortened form of the ACL permset and flags where applicable. If permissions
            have been simplified, then the `perms` object will contain only a single `BASIC` key with a string
            describing the underlying permissions set.
          title: simplified
          type: boolean
        resolve_ids:
          default: false
          description: |-
            `resolve_ids` - adds additional `who` key to each ACL entry, that converts the numeric id to
            a user name or group name. In the case of owner@ and group@ (NFSv4) or USER_OBJ and GROUP_OBJ
            (POSIX1E), st_uid or st_gid will be converted from stat() return for file. In the case of
            MASK (POSIX1E), OTHER (POSIX1E), everyone@ (NFSv4), key `who` will be included, but set to null.
            In case of failure to resolve the id to a name, `who` will be set to null. This option should
            only be used if resolving ids to names is required.
          title: resolve_ids
          type: boolean
      type: object
    filesystem_is_immutable_0:
      title: path
      type: string
    filesystem_listdir_0:
      title: path
      type: string
    filesystem_listdir_1:
      default: []
      items: {}
      title: query-filters
      type: array
    filesystem_listdir_2:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: false
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    filesystem_listdir:
      properties:
        path:
          title: path
          type: string
        query-filters:
          default: []
          items: {}
          title: query-filters
          type: array
        query-options:
          $ref: '#/components/schemas/filesystem_listdir_2'
      type: object
    filesystem_mkdir_0:
      title: path
      type: string
    filesystem_put_0:
      title: path
      type: string
    filesystem_put_1:
      additionalProperties: false
      default: {}
      properties:
        append:
          default: false
          title: append
          type: boolean
        mode:
          title: mode
          type: integer
      title: options
      type: object
    filesystem_put:
      properties:
        path:
          title: path
          type: string
        options:
          $ref: '#/components/schemas/filesystem_put_1'
      type: object
    filesystem_set_dosmode_0:
      additionalProperties: false
      default: {}
      properties:
        path:
          title: path
          type: string
        dosmode:
          $ref: '#/components/schemas/dosmode'
      title: set_dosmode
      type: object
    filesystem_set_immutable_0:
      title: set_flag
      type: boolean
    filesystem_set_immutable_1:
      description: Set/Unset immutable flag at `path`.
      title: path
      type: string
    filesystem_set_immutable:
      properties:
        set_flag:
          title: set_flag
          type: boolean
        path:
          description: Set/Unset immutable flag at `path`.
          title: path
          type: string
      type: object
    filesystem_setacl_0:
      additionalProperties: false
      default: {}
      properties:
        path:
          description: '`path` full path to directory or file.'
          title: path
          type: string
        uid:
          description: "`uid` the desired UID of the file user. If set to None (the\
            \ default), then user is not changed."
          nullable: true
          title: uid
          type: integer
        gid:
          description: "`gid` the desired GID of the file group. If set to None (the\
            \ default), then group is not changed."
          nullable: true
          title: gid
          type: integer
        dacl:
          $ref: '#/components/schemas/filesystem_setacl_0_dacl'
        nfs41_flags:
          $ref: '#/components/schemas/nfs41_flags'
        acltype:
          description: |-
            `dacl` ACL entries. Formatting depends on the underlying `acltype`. NFS4ACL requires
            NFSv4 entries. POSIX1e requires POSIX1e entries.
          enum:
          - NFS4
          - POSIX1E
          - DISABLED
          nullable: true
          title: acltype
          type: string
        options:
          $ref: '#/components/schemas/options_1'
      title: filesystem_acl
      type: object
    filesystem_setperm_0:
      additionalProperties: false
      default: {}
      properties:
        path:
          description: |-
            Set unix permissions on given `path`.
            `stripacl` setperm will fail if an extended ACL is present on `path`,
            unless `stripacl` is set to True.
          title: path
          type: string
        mode:
          description: |-
            If `mode` is specified then the mode will be applied to the
            path and files and subdirectories depending on which `options` are
            selected. Mode should be formatted as string representation of octal
            permissions bits.
          nullable: true
          title: mode
          type: string
        uid:
          description: "`uid` the desired UID of the file user. If set to None (the\
            \ default), then user is not changed."
          nullable: true
          title: uid
          type: integer
        gid:
          description: "`gid` the desired GID of the file group. If set to None (the\
            \ default), then group is not changed."
          nullable: true
          title: gid
          type: integer
        options:
          $ref: '#/components/schemas/options_2'
      title: filesystem_permission
      type: object
    filesystem_stat_0:
      description: Return the filesystem stat(2) for a given `path`.
      title: path
      type: string
    filesystem_statfs_0:
      title: path
      type: string
    filesystem_acltemplate_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        acltype:
          enum:
          - NFS4
          - POSIX1E
          title: acltype
          type: string
        comment:
          title: comment
          type: string
        acl:
          $ref: '#/components/schemas/filesystem_acltemplate_create_0_acl'
      title: acltemplate_create
      type: object
    filesystem_acltemplate_by_path_0:
      additionalProperties: false
      default: {}
      properties:
        path:
          default: ""
          description: Retrieve list of available ACL templates for a given `path`.
          title: path
          type: string
        query-filters:
          default: []
          items: {}
          title: query-filters
          type: array
        query-options:
          $ref: '#/components/schemas/query_options'
        format-options:
          $ref: '#/components/schemas/format_options'
      title: acltemplate_by_path
      type: object
    filesystem_acltemplate_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    filesystem_acltemplate_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    filesystem_acltemplate_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/filesystem_acltemplate_get_instance_0'
        query-options:
          $ref: '#/components/schemas/filesystem_acltemplate_get_instance_1'
      type: object
    ftp_update_0:
      additionalProperties: false
      default: {}
      properties:
        port:
          title: port
          type: integer
        clients:
          description: '`clients` is an integer value which sets the maximum number
            of simultaneous clients allowed. It defaults to 32.'
          title: clients
          type: integer
        ipconnections:
          description: |-
            `ipconnections` is an integer value which shows the maximum number of connections per IP address. It defaults
            to 0 which equals to unlimited.
          title: ipconnections
          type: integer
        loginattempt:
          title: loginattempt
          type: integer
        timeout:
          description: |-
            `timeout` is the maximum number of seconds that proftpd will allow clients to stay connected without receiving
            any data on either the control or data connection.
          title: timeout
          type: integer
        timeout_notransfer:
          description: |-
            `timeout_notransfer` is the maximum number of seconds a client is allowed to spend connected, after
            authentication, without issuing a command which results in creating an active or passive data connection
            (i.e. sending/receiving a file, or receiving a directory listing).
          title: timeout_notransfer
          type: integer
        rootlogin:
          description: |-
            `rootlogin` is a boolean value which when configured to true enables login as root. This is generally
            discouraged because of the security risks.
          title: rootlogin
          type: boolean
        onlyanonymous:
          description: '`onlyanonymous` allows anonymous FTP logins with access to
            the directory specified by `anonpath`.'
          title: onlyanonymous
          type: boolean
        anonpath:
          description: '`onlyanonymous` allows anonymous FTP logins with access to
            the directory specified by `anonpath`.'
          nullable: true
          title: anonpath
          type: string
        onlylocal:
          title: onlylocal
          type: boolean
        banner:
          description: |-
            `banner` is a message displayed to local login users after they successfully authenticate. It is not displayed
            to anonymous login users.
          title: banner
          type: string
        filemask:
          description: '`filemask` sets the default permissions for newly created
            files which by default are 077.'
          title: filemask
          type: string
        dirmask:
          description: '`dirmask` sets the default permissions for newly created directories
            which by default are 077.'
          title: dirmask
          type: string
        fxp:
          description: |-
            `fxp` if set to true indicates that File eXchange Protocol is enabled. Generally it is discouraged as it
            makes the server vulnerable to FTP bounce attacks.
          title: fxp
          type: boolean
        resume:
          description: '`resume` if set allows FTP clients to resume interrupted transfers.'
          title: resume
          type: boolean
        defaultroot:
          description: |-
            `defaultroot` when set ensures that for local users, home directory access is only granted if the user
            is a member of group wheel.
          title: defaultroot
          type: boolean
        ident:
          description: |-
            `ident` is a boolean value which when set to true indicates that IDENT authentication is required. If identd
            is not running on the client, this can result in timeouts.
          title: ident
          type: boolean
        reversedns:
          title: reversedns
          type: boolean
        masqaddress:
          description: |-
            `masqaddress` is the public IP address or hostname which is set if FTP clients cannot connect through a
            NAT device.
          title: masqaddress
          type: string
        passiveportsmin:
          title: passiveportsmin
          type: integer
        passiveportsmax:
          title: passiveportsmax
          type: integer
        localuserbw:
          description: |-
            `localuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for local user.
            Default of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).
          title: localuserbw
          type: integer
        localuserdlbw:
          description: |-
            `localuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for local user.
            Default of zero indicates unlimited download bandwidth ( from the FTP server configuration ).
          title: localuserdlbw
          type: integer
        anonuserbw:
          description: |-
            `anonuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for anonymous user.
            Default of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).
          title: anonuserbw
          type: integer
        anonuserdlbw:
          description: |-
            `anonuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for anonymous
            user. Default of zero indicates unlimited download bandwidth ( from the FTP server configuration ).
          title: anonuserdlbw
          type: integer
        tls:
          description: |-
            `tls` is a boolean value which when set indicates that encrypted connections are enabled. This requires a
            certificate to be configured first with the certificate service and the id of certificate is passed on in
          title: tls
          type: boolean
        tls_policy:
          description: |-
            `tls_policy` defines whether the control channel, data channel, both channels, or neither channel of an FTP
            session must occur over SSL/TLS.
          enum:
          - "on"
          - "off"
          - data
          - '!data'
          - auth
          - ctrl
          - ctrl+data
          - ctrl+!data
          - auth+data
          - auth+!data
          title: tls_policy
          type: string
        tls_opt_allow_client_renegotiations:
          title: tls_opt_allow_client_renegotiations
          type: boolean
        tls_opt_allow_dot_login:
          title: tls_opt_allow_dot_login
          type: boolean
        tls_opt_allow_per_user:
          title: tls_opt_allow_per_user
          type: boolean
        tls_opt_common_name_required:
          title: tls_opt_common_name_required
          type: boolean
        tls_opt_enable_diags:
          description: |-
            `tls_opt_enable_diags` is a boolean value when set, logs verbosely. This is helpful when troubleshooting a
            connection.
          title: tls_opt_enable_diags
          type: boolean
        tls_opt_export_cert_data:
          title: tls_opt_export_cert_data
          type: boolean
        tls_opt_no_cert_request:
          title: tls_opt_no_cert_request
          type: boolean
        tls_opt_no_empty_fragments:
          title: tls_opt_no_empty_fragments
          type: boolean
        tls_opt_no_session_reuse_required:
          title: tls_opt_no_session_reuse_required
          type: boolean
        tls_opt_stdenvvars:
          title: tls_opt_stdenvvars
          type: boolean
        tls_opt_dns_name_required:
          title: tls_opt_dns_name_required
          type: boolean
        tls_opt_ip_address_required:
          title: tls_opt_ip_address_required
          type: boolean
        ssltls_certificate:
          description: '`ssltls_certificate`.'
          nullable: true
          title: ssltls_certificate
          type: integer
        options:
          title: options
          type: string
      title: ftp_entry
      type: object
    gluster_eventsd_create_0:
      additionalProperties: false
      default: {}
      properties:
        url:
          description: |-
            Add `url` webhook that will be called
            with a JSON formatted POST request that
            will include the event that was triggered
            along with the relevant data.
            `url` is a http address (i.e. http://192.168.1.50/endpoint)
          title: url
          type: string
        bearer_token:
          description: '`bearer_token` is a bearer token'
          title: bearer_token
          type: string
        secret:
          description: '`secret` secret to encode the JWT message'
          title: secret
          type: string
      title: webhook_create
      type: object
    gluster_eventsd_delete_0:
      additionalProperties: false
      default: {}
      properties:
        url:
          description: Delete `url` webhook
          title: url
          type: string
      title: webhook_delete
      type: object
    gluster_fuse_is_mounted_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
      title: glusterfuse_mounted
      type: object
    gluster_fuse_mount_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` String representing the name of the gluster volume'
          title: name
          type: string
        all:
          default: false
          description: |-
            `all` Boolean if True locally FUSE mount all detected
                    gluster volumes
          title: all
          type: boolean
        raise:
          default: false
          title: raise
          type: boolean
      title: gluserfuse_mount
      type: object
    gluster_fuse_umount_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` String representing the name of the gluster volume'
          title: name
          type: string
        all:
          default: false
          description: |-
            `all` Boolean if True umount all locally detected FUSE
                    mounted gluster volumes
          title: all
          type: boolean
        raise:
          default: false
          title: raise
          type: boolean
      title: glusterfuse_umount
      type: object
    gluster_localevents_add_jwt_secret_0:
      additionalProperties: false
      default: {}
      properties:
        secret:
          description: |-
            Add a `secret` key used to encode/decode
            JWT messages for sending/receiving gluster
            events.
            `secret` String representing the key to be used
                        to encode/decode JWT messages
          title: secret
          type: string
        force:
          default: false
          description: |-
            `force` Boolean if set to True, will forcefully
                        wipe any existing jwt key for this
                        peer. Note, if forcefully adding a
                        new key, the other peers in the TSP
                        will also need to be sent this key.
          title: force
          type: boolean
      title: add_secret
      type: object
    gluster_peer_create_0:
      additionalProperties: false
      default: {}
      properties:
        hostname:
          title: hostname
          type: string
      title: peer_create
      type: object
    gluster_peer_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    gluster_peer_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    gluster_peer_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/gluster_peer_get_instance_0'
        query-options:
          $ref: '#/components/schemas/gluster_peer_get_instance_1'
      type: object
    gluster_peer_status_0:
      additionalProperties: false
      default: {}
      properties:
        localhost:
          default: true
          title: localhost
          type: boolean
      title: peer_status
      type: object
    gluster_volume_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` String representing name to be given to the volume'
          title: name
          type: string
        bricks:
          default: []
          description: |-
            `bricks` List representing the brick paths
                `peer_name` String representing IP or DNS name of the peer
                `peer_path` String representing the full path of the brick
          items:
            $ref: '#/components/schemas/brick'
          title: bricks
          type: array
        replica:
          description: '`replica` Integer representing number of replica bricks'
          title: replica
          type: integer
        arbiter:
          description: '`arbiter` Integer representing number of arbiter bricks'
          title: arbiter
          type: integer
        disperse:
          description: '`disperse` Integer representing number of disperse bricks'
          title: disperse
          type: integer
        disperse_data:
          description: '`disperse_data` Integer representing number of disperse data
            bricks'
          title: disperse_data
          type: integer
        redundancy:
          description: '`redundancy` Integer representing number of redundancy bricks'
          title: redundancy
          type: integer
        force:
          title: force
          type: boolean
      title: glustervolume_create
      type: object
    gluster_volume_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    gluster_volume_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    gluster_volume_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/gluster_volume_get_instance_0'
        query-options:
          $ref: '#/components/schemas/gluster_volume_get_instance_1'
      type: object
    gluster_volume_info_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
      title: volume_info
      type: object
    gluster_volume_optreset_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` String representing name of gluster volume'
          title: name
          type: string
        opt:
          description: |-
            Reset volumes options.
                If `opt` is not provided, then all options
                will be reset.
            `opt` String representing name of the option to reset
          title: opt
          type: string
        force:
          title: force
          type: boolean
      title: volume_optreset
      type: object
    gluster_volume_optset_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` String representing name of gluster volume'
          title: name
          type: string
        opts:
          additionalProperties: true
          default: {}
          properties: {}
          title: opts
          type: object
      title: volume_optset
      type: object
    gluster_volume_quota_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` String representing name of gluster volume'
          title: name
          type: string
        enable:
          title: enable
          type: boolean
      title: volume_quota
      type: object
    gluster_volume_restart_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` String representing name of gluster volume'
          title: name
          type: string
        force:
          default: true
          title: force
          type: boolean
      title: volume_restart
      type: object
    gluster_volume_start_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` String representing name of gluster volume'
          title: name
          type: string
        force:
          default: true
          title: force
          type: boolean
      title: volume_start
      type: object
    gluster_volume_status_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` String representing name of gluster volume'
          title: name
          type: string
        verbose:
          default: true
          title: verbose
          type: boolean
      title: volume_status
      type: object
    gluster_volume_stop_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` String representing name of gluster volume'
          title: name
          type: string
        force:
          default: false
          title: force
          type: boolean
      title: volume_stop
      type: object
    group_create_0:
      additionalProperties: false
      default: {}
      properties:
        gid:
          description: If `gid` is not provided it is automatically filled with the
            next one available.
          title: gid
          type: integer
        name:
          title: name
          type: string
        smb:
          default: true
          title: smb
          type: boolean
        sudo_commands:
          default: []
          items:
            title: command
            type: string
          title: sudo_commands
          type: array
        sudo_commands_nopasswd:
          default: []
          items:
            title: command
            type: string
          title: sudo_commands_nopasswd
          type: array
        allow_duplicate_gid:
          default: false
          description: '`allow_duplicate_gid` allows distinct group names to share
            the same gid.'
          title: allow_duplicate_gid
          type: boolean
        users:
          default: []
          description: '`users` is a list of user ids (`id` attribute from `user.query`).'
          items:
            title: id
            type: integer
          title: users
          type: array
      title: group_create
      type: object
    group_get_group_obj_0:
      additionalProperties: false
      default: {}
      properties:
        groupname:
          title: groupname
          type: string
        gid:
          title: gid
          type: integer
      title: get_group_obj
      type: object
    group_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    group_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    group_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/group_get_instance_0'
        query-options:
          $ref: '#/components/schemas/group_get_instance_1'
      type: object
    group_has_password_enabled_user_0:
      default: []
      items:
        title: gid
        type: integer
      title: gids
      type: array
    group_has_password_enabled_user_1:
      default: []
      items:
        title: exclude_user_id
        type: integer
      title: exclude_user_ids
      type: array
    group_has_password_enabled_user:
      properties:
        gids:
          default: []
          items:
            title: gid
            type: integer
          title: gids
          type: array
        exclude_user_ids:
          default: []
          items:
            title: exclude_user_id
            type: integer
          title: exclude_user_ids
          type: array
      type: object
    idmap_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '`name` the pre-windows 2000 domain name.'
          title: name
          type: string
        dns_domain_name:
          title: dns_domain_name
          type: string
        range_low:
          description: |-
            `range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.
            `range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.
          title: range_low
          type: integer
        range_high:
          description: |-
            `range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.
            `range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.
          title: range_high
          type: integer
        idmap_backend:
          description: |-
            `idmap_backend` provides a plugin interface for Winbind to use varying
            backends to store SID/uid/gid mapping tables. The correct setting
            depends on the environment in which the NAS is deployed.
          enum:
          - AD
          - AUTORID
          - LDAP
          - NSS
          - RFC2307
          - RID
          - TDB
          title: idmap_backend
          type: string
        certificate:
          nullable: true
          title: certificate
          type: integer
        options:
          $ref: '#/components/schemas/idmap_create_0_options'
      title: idmap_domain_create
      type: object
    idmap_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    idmap_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    idmap_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/idmap_get_instance_0'
        query-options:
          $ref: '#/components/schemas/idmap_get_instance_1'
      type: object
    idmap_options_choices_0:
      enum:
      - AD
      - AUTORID
      - LDAP
      - NSS
      - RFC2307
      - RID
      - TDB
      title: idmap_backend
      type: string
    initshutdownscript_create_0:
      additionalProperties: false
      default: {}
      properties:
        type:
          description: '`type` indicates if a command or script should be executed
            at `when`.'
          enum:
          - COMMAND
          - SCRIPT
          title: type
          type: string
        command:
          nullable: true
          title: command
          type: string
        script_text:
          nullable: true
          title: script_text
          type: string
        script:
          nullable: true
          title: script
          type: string
        when:
          description: |-
            `type` indicates if a command or script should be executed at `when`.
            There are three choices for `when`:
          enum:
          - PREINIT
          - POSTINIT
          - SHUTDOWN
          title: when
          type: string
        enabled:
          default: true
          title: enabled
          type: boolean
        timeout:
          default: 10
          title: timeout
          type: integer
        comment:
          default: ""
          title: comment
          type: string
      title: init_shutdown_script_create
      type: object
    initshutdownscript_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    initshutdownscript_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    initshutdownscript_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/initshutdownscript_get_instance_0'
        query-options:
          $ref: '#/components/schemas/initshutdownscript_get_instance_1'
      type: object
    interface_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        description:
          default: ""
          title: description
          type: string
        type:
          description: |-
            For BRIDGE `type` the following attribute is required: bridge_members.
            For LINK_AGGREGATION `type` the following attributes are required: lag_ports,
            lag_protocol.
            For VLAN `type` the following attributes are required: vlan_parent_interface,
            vlan_tag and vlan_pcp.
          enum:
          - BRIDGE
          - LINK_AGGREGATION
          - VLAN
          title: type
          type: string
        ipv4_dhcp:
          default: false
          title: ipv4_dhcp
          type: boolean
        ipv6_auto:
          default: false
          title: ipv6_auto
          type: boolean
        aliases:
          default: []
          items:
            $ref: '#/components/schemas/interface_alias'
          title: aliases
          type: array
        failover_critical:
          default: false
          title: failover_critical
          type: boolean
        failover_group:
          nullable: true
          title: failover_group
          type: integer
        failover_vhid:
          nullable: true
          title: failover_vhid
          type: integer
        failover_aliases:
          default: []
          items:
            $ref: '#/components/schemas/interface_failover_alias'
          title: failover_aliases
          type: array
        failover_virtual_aliases:
          default: []
          items:
            $ref: '#/components/schemas/interface_virtual_alias'
          title: failover_virtual_aliases
          type: array
        bridge_members:
          default: []
          items: {}
          title: bridge_members
          type: array
        stp:
          default: true
          title: stp
          type: boolean
        lag_protocol:
          enum:
          - LACP
          - FAILOVER
          - LOADBALANCE
          - ROUNDROBIN
          - NONE
          title: lag_protocol
          type: string
        xmit_hash_policy:
          enum:
          - LAYER2
          - LAYER2+3
          - LAYER3+4
          nullable: true
          title: xmit_hash_policy
          type: string
        lacpdu_rate:
          enum:
          - SLOW
          - FAST
          nullable: true
          title: lacpdu_rate
          type: string
        lag_ports:
          default: []
          items:
            title: interface
            type: string
          title: lag_ports
          type: array
        vlan_parent_interface:
          title: vlan_parent_interface
          type: string
        vlan_tag:
          title: vlan_tag
          type: integer
        vlan_pcp:
          nullable: true
          title: vlan_pcp
          type: integer
        mtu:
          nullable: true
          title: mtu
          type: integer
      title: interface_create
      type: object
    interface_bridge_members_choices_0:
      nullable: true
      title: id
      type: string
    interface_choices_0:
      additionalProperties: false
      default: {}
      properties:
        bridge_members:
          default: false
          description: '`bridge_members` will include BRIDGE members.'
          title: bridge_members
          type: boolean
        lag_ports:
          default: false
          description: '`lag_ports` will include LINK_AGGREGATION ports.'
          title: lag_ports
          type: boolean
        vlan_parent:
          default: true
          description: '`vlan_parent` will include VLAN parent interface.'
          title: vlan_parent
          type: boolean
        exclude:
          default:
          - epair
          - tap
          - vnet
          description: '`exclude` is a list of interfaces prefix to remove.'
          items: {}
          title: exclude
          type: array
        exclude_types:
          default: []
          items:
            enum:
            - BRIDGE
            - LINK_AGGREGATION
            - PHYSICAL
            - UNKNOWN
            - VLAN
            title: type
            type: string
          title: exclude_types
          type: array
        include:
          default: []
          items: {}
          title: include
          type: array
      title: options
      type: object
    interface_commit_0:
      additionalProperties: false
      default: {}
      properties:
        rollback:
          default: true
          description: '`rollback` as true (default) will rollback changes in case
            they fail to apply.'
          title: rollback
          type: boolean
        checkin_timeout:
          default: 60
          title: checkin_timeout
          type: integer
      title: options
      type: object
    interface_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    interface_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    interface_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/interface_get_instance_0'
        query-options:
          $ref: '#/components/schemas/interface_get_instance_1'
      type: object
    interface_ip_in_use_0:
      additionalProperties: false
      default: {}
      properties:
        ipv4:
          default: true
          title: ipv4
          type: boolean
        ipv6:
          default: true
          title: ipv6
          type: boolean
        ipv6_link_local:
          default: false
          title: ipv6_link_local
          type: boolean
        loopback:
          default: false
          description: '`loopback` will return loopback interface addresses.'
          title: loopback
          type: boolean
        any:
          default: false
          description: '`any` will return wildcard addresses (0.0.0.0 and ::).'
          title: any
          type: boolean
        static:
          default: false
          description: '`static` when enabled will ensure we only return static ip''s
            configured.'
          title: static
          type: boolean
      title: ips
      type: object
    interface_lag_ports_choices_0:
      nullable: true
      title: id
      type: string
    interface_save_default_route_0:
      title: gw
      type: string
    interface_capabilities_get_0:
      title: name
      type: string
    interface_capabilities_set_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: |-
            `name` String representing name of the interface
            `capabilities` List representing capabilities to be acted upon
          title: name
          type: string
        capabilties:
          default: []
          items: {}
          title: capabilties
          type: array
        action:
          enum:
          - ENABLE
          - DISABLE
          title: action
          type: string
      title: capabilities_set
      type: object
    ipmi_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    ipmi_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    ipmi_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/ipmi_get_instance_0'
        query-options:
          $ref: '#/components/schemas/ipmi_get_instance_1'
      type: object
    ipmi_identify_0:
      additionalProperties: false
      default: {}
      properties:
        seconds:
          default: 15
          description: |-
            `seconds` is an integer representing the number of seconds to leave the chassis identify light turned on.
                - default is 15 seconds
                - to turn it off, specify `seconds` as 0
          title: seconds
          type: integer
        force:
          default: false
          title: force
          type: boolean
      title: options
      type: object
    iscsi_auth_create_0:
      additionalProperties: false
      default: {}
      properties:
        tag:
          description: '`tag` should be unique among all configured iSCSI Authorized
            Accesses.'
          title: tag
          type: integer
        user:
          title: user
          type: string
        secret:
          description: '`secret` and `peersecret` should have length between 12-16
            letters inclusive.'
          title: secret
          type: string
        peeruser:
          default: ""
          title: peeruser
          type: string
        peersecret:
          default: ""
          description: '`secret` and `peersecret` should have length between 12-16
            letters inclusive.'
          title: peersecret
          type: string
      title: iscsi_auth_create
      type: object
    iscsi_auth_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    iscsi_auth_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    iscsi_auth_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/iscsi_auth_get_instance_0'
        query-options:
          $ref: '#/components/schemas/iscsi_auth_get_instance_1'
      type: object
    iscsi_extent_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        type:
          default: DISK
          description: |-
            When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if
            not zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.
            With `type` being set to DISK, a valid ZFS volume is required.
          enum:
          - DISK
          - FILE
          title: type
          type: string
        disk:
          nullable: true
          title: disk
          type: string
        serial:
          nullable: true
          title: serial
          type: string
        path:
          description: |-
            When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if
            not zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.
          nullable: true
          title: path
          type: string
        filesize:
          default: 0
          description: |-
            When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if
            not zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.
          title: filesize
          type: integer
        blocksize:
          default: 512
          description: |-
            When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if
            not zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.
          title: blocksize
          type: integer
        pblocksize:
          title: pblocksize
          type: boolean
        avail_threshold:
          nullable: true
          title: avail_threshold
          type: integer
        comment:
          title: comment
          type: string
        insecure_tpc:
          default: true
          description: |-
            `insecure_tpc` when enabled allows an initiator to bypass normal access control and access any scannable
            target. This allows xcopy operations otherwise blocked by access control.
          title: insecure_tpc
          type: boolean
        xen:
          description: '`xen` is a boolean value which is set to true if Xen is being
            used as the iSCSI initiator.'
          title: xen
          type: boolean
        rpm:
          default: SSD
          enum:
          - UNKNOWN
          - SSD
          - "5400"
          - "7200"
          - "10000"
          - "15000"
          title: rpm
          type: string
        ro:
          default: false
          title: ro
          type: boolean
        enabled:
          default: true
          title: enabled
          type: boolean
      title: iscsi_extent_create
      type: object
    iscsi_extent_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    iscsi_extent_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    iscsi_extent_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/iscsi_extent_get_instance_0'
        query-options:
          $ref: '#/components/schemas/iscsi_extent_get_instance_1'
      type: object
    iscsi_global_update_0:
      additionalProperties: false
      default: {}
      properties:
        basename:
          title: basename
          type: string
        isns_servers:
          default: []
          items:
            title: server
            type: string
          title: isns_servers
          type: array
        listen_port:
          default: 3260
          title: listen_port
          type: integer
        pool_avail_threshold:
          nullable: true
          title: pool_avail_threshold
          type: integer
        alua:
          title: alua
          type: boolean
      title: iscsiglobal_update
      type: object
    iscsi_host_create_0:
      additionalProperties: false
      default: {}
      properties:
        ip:
          description: '`ip` indicates an IP address of the host.'
          title: ip
          type: string
        description:
          default: ""
          description: '`description` is a human-readable name for the host.'
          title: description
          type: string
        iqns:
          default: []
          items:
            title: iqn
            type: string
          title: iqns
          type: array
        added_automatically:
          default: false
          title: added_automatically
          type: boolean
      title: iscsi_host_create
      type: object
    iscsi_host_get_initiators_0:
      title: id
      type: integer
    iscsi_host_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    iscsi_host_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    iscsi_host_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/iscsi_host_get_instance_0'
        query-options:
          $ref: '#/components/schemas/iscsi_host_get_instance_1'
      type: object
    iscsi_host_get_targets_0:
      title: id
      type: integer
    iscsi_host_set_initiators_0:
      description: Associates initiator groups `ids` with host `id`.
      title: id
      type: integer
    iscsi_host_set_initiators_1:
      default: []
      description: Associates initiator groups `ids` with host `id`.
      items:
        title: id
        type: integer
      title: ids
      type: array
    iscsi_host_set_initiators_2:
      default: false
      title: force
      type: boolean
    iscsi_host_set_initiators:
      properties:
        id:
          description: Associates initiator groups `ids` with host `id`.
          title: id
          type: integer
        ids:
          default: []
          description: Associates initiator groups `ids` with host `id`.
          items:
            title: id
            type: integer
          title: ids
          type: array
        force:
          default: false
          title: force
          type: boolean
      type: object
    iscsi_host_set_targets_0:
      title: id
      type: integer
    iscsi_host_set_targets_1:
      default: []
      items:
        title: id
        type: integer
      title: ids
      type: array
    iscsi_host_set_targets:
      properties:
        id:
          title: id
          type: integer
        ids:
          default: []
          items:
            title: id
            type: integer
          title: ids
          type: array
      type: object
    iscsi_initiator_create_0:
      additionalProperties: false
      default: {}
      properties:
        initiators:
          default: []
          items: {}
          title: initiators
          type: array
        comment:
          title: comment
          type: string
      title: iscsi_initiator_create
      type: object
    iscsi_initiator_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    iscsi_initiator_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    iscsi_initiator_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/iscsi_initiator_get_instance_0'
        query-options:
          $ref: '#/components/schemas/iscsi_initiator_get_instance_1'
      type: object
    iscsi_portal_create_0:
      additionalProperties: false
      default: {}
      properties:
        comment:
          title: comment
          type: string
        discovery_authmethod:
          default: NONE
          enum:
          - NONE
          - CHAP
          - CHAP_MUTUAL
          title: discovery_authmethod
          type: string
        discovery_authgroup:
          nullable: true
          title: discovery_authgroup
          type: integer
        listen:
          default: []
          items:
            $ref: '#/components/schemas/listen'
          title: listen
          type: array
      title: iscsiportal_create
      type: object
    iscsi_portal_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    iscsi_portal_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    iscsi_portal_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/iscsi_portal_get_instance_0'
        query-options:
          $ref: '#/components/schemas/iscsi_portal_get_instance_1'
      type: object
    iscsi_target_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        alias:
          nullable: true
          title: alias
          type: string
        mode:
          default: ISCSI
          enum:
          - ISCSI
          - FC
          - BOTH
          title: mode
          type: string
        groups:
          default: []
          description: |-
            `groups` is a list of group dictionaries which provide information related to using a `portal`, `initiator`,
            `authmethod` and `auth` with this target. `auth` represents a valid iSCSI Authorized Access and defaults to
            null.
          items:
            $ref: '#/components/schemas/group'
          title: groups
          type: array
        auth_networks:
          default: []
          items:
            title: ip
            type: string
          title: auth_networks
          type: array
      title: iscsi_target_create
      type: object
    iscsi_target_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    iscsi_target_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    iscsi_target_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/iscsi_target_get_instance_0'
        query-options:
          $ref: '#/components/schemas/iscsi_target_get_instance_1'
      type: object
    iscsi_targetextent_create_0:
      additionalProperties: false
      default: {}
      properties:
        target:
          title: target
          type: integer
        lunid:
          nullable: true
          title: lunid
          type: integer
        extent:
          title: extent
          type: integer
      title: iscsi_targetextent_create
      type: object
    iscsi_targetextent_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    iscsi_targetextent_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    iscsi_targetextent_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/iscsi_targetextent_get_instance_0'
        query-options:
          $ref: '#/components/schemas/iscsi_targetextent_get_instance_1'
      type: object
    kerberos_update_0:
      additionalProperties: false
      default: {}
      properties:
        appdefaults_aux:
          description: '`appdefaults_aux` add parameters to "appdefaults" section
            of the krb5.conf file.'
          title: appdefaults_aux
          type: string
        libdefaults_aux:
          title: libdefaults_aux
          type: string
      title: kerberos_settings_update
      type: object
    kerberos_keytab_create_0:
      additionalProperties: false
      default: {}
      properties:
        file:
          description: '`file` b64encoded kerberos keytab'
          title: file
          type: string
        name:
          title: name
          type: string
      title: kerberos_keytab_create
      type: object
    kerberos_keytab_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    kerberos_keytab_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    kerberos_keytab_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/kerberos_keytab_get_instance_0'
        query-options:
          $ref: '#/components/schemas/kerberos_keytab_get_instance_1'
      type: object
    kerberos_keytab_upload_keytab_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
      title: keytab_data
      type: object
    kerberos_realm_create_0:
      additionalProperties: false
      default: {}
      properties:
        realm:
          title: realm
          type: string
        kdc:
          default: []
          items: {}
          title: kdc
          type: array
        admin_server:
          default: []
          items: {}
          title: admin_server
          type: array
        kpasswd_server:
          default: []
          items: {}
          title: kpasswd_server
          type: array
      title: kerberos_realm_create
      type: object
    kerberos_realm_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    kerberos_realm_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    kerberos_realm_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/kerberos_realm_get_instance_0'
        query-options:
          $ref: '#/components/schemas/kerberos_realm_get_instance_1'
      type: object
    keychaincredential_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: Every Keychain Credential has a `name` which is used to distinguish
            it from others.
          title: name
          type: string
        type:
          description: |-
            The following `type`s are supported:
             * `SSH_KEY_PAIR`
               Which `attributes` are:
               * `private_key`
               * `public_key` (which can be omitted and thus automatically derived from private key)
               At least one attribute is required.
          title: type
          type: string
        attributes:
          additionalProperties: true
          default: {}
          description: |-
            The following `type`s are supported:
             * `SSH_KEY_PAIR`
               Which `attributes` are:
               * `private_key`
               * `public_key` (which can be omitted and thus automatically derived from private key)
               At least one attribute is required.
             * `SSH_CREDENTIALS`
               Which `attributes` are:
               * `host`
               * `port` (default 22)
               * `username` (default root)
               * `private_key` (Keychain Credential ID)
               * `remote_host_key` (you can use `keychaincredential.remote_ssh_host_key_scan` do discover it)
               * `cipher`: one of `STANDARD`, `FAST`, or `DISABLED` (last requires special support from both SSH server and
                 client)
               * `connect_timeout` (default 10)
          properties: {}
          title: attributes
          type: object
      title: keychain_credential_create
      type: object
    keychaincredential_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    keychaincredential_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    keychaincredential_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/keychaincredential_get_instance_0'
        query-options:
          $ref: '#/components/schemas/keychaincredential_get_instance_1'
      type: object
    keychaincredential_remote_ssh_host_key_scan_0:
      additionalProperties: false
      default: {}
      properties:
        host:
          title: host
          type: string
        port:
          default: "22"
          title: port
          type: string
        connect_timeout:
          default: 10
          title: connect_timeout
          type: integer
      title: keychain_remote_ssh_host_key_scan
      type: object
    keychaincredential_remote_ssh_semiautomatic_setup_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: |-
            Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`
            credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and
            temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
          title: name
          type: string
        url:
          description: |-
            Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`
            credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and
            temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
          title: url
          type: string
        token:
          description: |-
            Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`
            credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and
            temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
          title: token
          type: string
        admin_username:
          default: root
          title: admin_username
          type: string
        password:
          title: password
          type: string
        otp_token:
          title: otp_token
          type: string
        username:
          default: root
          description: |-
            Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`
            credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and
            temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
          title: username
          type: string
        private_key:
          description: |-
            Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`
            credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and
            temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
          title: private_key
          type: integer
        cipher:
          default: STANDARD
          description: '`SSH_CREDENTIALS` attributes such as `cipher` and `connect_timeout`
            can be specified as well.'
          enum:
          - STANDARD
          - FAST
          - DISABLED
          title: cipher
          type: string
        connect_timeout:
          default: 10
          description: '`SSH_CREDENTIALS` attributes such as `cipher` and `connect_timeout`
            can be specified as well.'
          title: connect_timeout
          type: integer
        sudo:
          default: false
          title: sudo
          type: boolean
      title: keychain_remote_ssh_semiautomatic_setup
      type: object
    keychaincredential_setup_ssh_connection_0:
      additionalProperties: false
      default: {}
      properties:
        private_key:
          $ref: '#/components/schemas/private_key'
        connection_name:
          title: connection_name
          type: string
        setup_type:
          default: MANUAL
          description: |-
            1) Generating SSH Key Pair if required
            2) Setting up SSH Credentials based on `setup_type`
          enum:
          - SEMI-AUTOMATIC
          - MANUAL
          title: setup_type
          type: string
        semi_automatic_setup:
          $ref: '#/components/schemas/keychain_remote_ssh_semiautomatic_setup'
        manual_setup:
          additionalProperties: true
          properties: {}
          title: manual_setup
          type: object
      title: setup_ssh_connection
      type: object
    keychaincredential_used_by_0:
      title: id
      type: integer
    kmip_update_0:
      additionalProperties: false
      default: {}
      properties:
        enabled:
          description: |-
            `enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users
            can still perform this action by enabling `force_clear`.
          title: enabled
          type: boolean
        manage_sed_disks:
          description: |-
            `manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.
            When disabled, if there are any keys left to be retrieved from the KMIP server,
            it will sync them back to local database.
          title: manage_sed_disks
          type: boolean
        manage_zfs_keys:
          description: |-
            `manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.
            When disabled, if there are any keys left to be retrieved from the KMIP server,
            it will sync them back to local database.
          title: manage_zfs_keys
          type: boolean
        certificate:
          description: System currently authenticates connection with remote KMIP
            Server with a TLS handshake. `certificate` and
          nullable: true
          title: certificate
          type: integer
        certificate_authority:
          description: '`certificate_authority` determine the certs which will be
            used to initiate the TLS handshake with `server`.'
          nullable: true
          title: certificate_authority
          type: integer
        port:
          title: port
          type: integer
        server:
          description: |-
            `certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.
            `validate` is enabled by default. When enabled, system will test connection to `server` making sure
            it's reachable.
          nullable: true
          title: server
          type: string
        ssl_version:
          description: '`ssl_version` can be specified to match the ssl configuration
            being used by KMIP server.'
          enum:
          - PROTOCOL_TLSv1
          - PROTOCOL_TLSv1_1
          - PROTOCOL_TLSv1_2
          title: ssl_version
          type: string
        force_clear:
          description: |-
            `enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users
            can still perform this action by enabling `force_clear`.
            `change_server` is a boolean field which allows users to migrate data between two KMIP servers. System
            will first migrate keys from old KMIP server to local database and then migrate the keys from local database
            to new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass
            this by enabling `force_clear`.
          title: force_clear
          type: boolean
        change_server:
          description: |-
            `change_server` is a boolean field which allows users to migrate data between two KMIP servers. System
            will first migrate keys from old KMIP server to local database and then migrate the keys from local database
            to new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass
            this by enabling `force_clear`.
          title: change_server
          type: boolean
        validate:
          description: |-
            `validate` is enabled by default. When enabled, system will test connection to `server` making sure
            it's reachable.
          title: validate
          type: boolean
      title: kmip_entry
      type: object
    kubernetes_update_0:
      additionalProperties: false
      default: {}
      properties:
        servicelb:
          description: |-
            `servicelb` is a boolean to enable or disable the integrated k3s Service Loadbalancer called "Klipper".
            This can be set to disabled to enable the user to run another LoadBalancer or no LoadBalancer at all.
          title: servicelb
          type: boolean
        configure_gpus:
          description: |-
            `configure_gpus` is a boolean to enable or disable to prevent automatically loading any GPU Support
            into kubernetes. This includes not loading any daemonsets for Intel and NVIDIA support.
          title: configure_gpus
          type: boolean
        validate_host_path:
          title: validate_host_path
          type: boolean
        passthrough_mode:
          title: passthrough_mode
          type: boolean
        pool:
          description: |-
            `pool` must be a valid ZFS pool configured in the system. Kubernetes service will initialise the pool by
            creating datasets under `pool_name/ix-applications`.
          nullable: true
          title: pool
          type: string
        cluster_cidr:
          description: |-
            `cluster_cidr` is the CIDR to be used for default NAT network between workloads.
            Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change
            requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset
            and any data within it when any of the values for the above configuration change.
          title: cluster_cidr
          type: string
        service_cidr:
          description: |-
            `service_cidr` is the CIDR to be used for kubernetes services which are an abstraction and refer to a
            logically set of kubernetes pods.
            `cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range
            of `service_cidr`.
            Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change
            requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset
            and any data within it when any of the values for the above configuration change.
          title: service_cidr
          type: string
        cluster_dns_ip:
          description: |-
            `cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range
            of `service_cidr`.
            Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change
            requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset
            and any data within it when any of the values for the above configuration change.
          title: cluster_dns_ip
          type: string
        node_ip:
          description: |-
            `node_ip` is the IP address which the kubernetes cluster will assign to the TrueNAS node. It defaults to
            0.0.0.0 and the cluster in this case will automatically manage which IP address to use for managing traffic
            for default NAT network.
          title: node_ip
          type: string
        route_v4_interface:
          description: |-
            If users want to restrict traffic over a certain gateway / interface, they can specify a default route
            for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes
            cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default
            route for IPv6 traffic.
          nullable: true
          title: route_v4_interface
          type: string
        route_v4_gateway:
          description: |-
            If users want to restrict traffic over a certain gateway / interface, they can specify a default route
            for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes
            cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default
            route for IPv6 traffic.
          nullable: true
          title: route_v4_gateway
          type: string
        route_v6_interface:
          description: |-
            If users want to restrict traffic over a certain gateway / interface, they can specify a default route
            for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes
            cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default
            route for IPv6 traffic.
          nullable: true
          title: route_v6_interface
          type: string
        route_v6_gateway:
          nullable: true
          title: route_v6_gateway
          type: string
        migrate_applications:
          title: migrate_applications
          type: boolean
        force:
          title: force
          type: boolean
        migration_options:
          $ref: '#/components/schemas/migration_options'
      title: kubernetes_entry
      type: object
    kubernetes_backup_chart_releases_0:
      nullable: true
      title: backup_name
      type: string
    kubernetes_delete_backup_0:
      title: backup_name
      type: string
    kubernetes_restore_backup_0:
      description: Restore `backup_name` chart releases backup.
      title: backup_name
      type: string
    kubernetes_restore_backup_1:
      additionalProperties: false
      default: {}
      properties:
        wait_for_csi:
          default: true
          title: wait_for_csi
          type: boolean
      title: options
      type: object
    kubernetes_restore_backup:
      properties:
        backup_name:
          description: Restore `backup_name` chart releases backup.
          title: backup_name
          type: string
        options:
          $ref: '#/components/schemas/kubernetes_restore_backup_1'
      type: object
    ldap_update_0:
      additionalProperties: false
      default: {}
      properties:
        hostname:
          default: []
          description: |-
            `hostname` list of ip addresses or hostnames of LDAP servers with
            which to communicate in order of preference. Failover only occurs
            if the current LDAP server is unresponsive.
          items: {}
          title: hostname
          type: array
        basedn:
          description: |-
            `basedn` specifies the default base DN to use when performing ldap
            operations. The base must be specified as a Distinguished Name in LDAP
            format.
          title: basedn
          type: string
        binddn:
          description: |-
            `binddn` specifies the default bind DN to use when performing ldap
            operations. The bind DN must be specified as a Distinguished Name in
            LDAP format.
            `kerberos_principal` kerberos principal to use for SASL GSSAPI
            authentication to the remote server. If `kerberos_realm` is specified
            without a keytab, then the `binddn` and `bindpw` are used to
            perform to obtain the ticket necessary for GSSAPI authentication.
          title: binddn
          type: string
        bindpw:
          description: |-
            `kerberos_principal` kerberos principal to use for SASL GSSAPI
            authentication to the remote server. If `kerberos_realm` is specified
            without a keytab, then the `binddn` and `bindpw` are used to
            perform to obtain the ticket necessary for GSSAPI authentication.
          title: bindpw
          type: string
        anonbind:
          default: false
          description: '`anonbind` use anonymous authentication.'
          title: anonbind
          type: boolean
        ssl:
          default: "ON"
          description: |-
            `ssl` establish SSL/TLS-protected connections to the LDAP server(s).
            GSSAPI signing is disabled on SSL/TLS-protected connections if
            kerberos authentication is used.
          enum:
          - "OFF"
          - "ON"
          - START_TLS
          title: ldap_ssl_choice
          type: string
        certificate:
          description: |-
            `certificate` LDAPs client certificate to be used for certificate-
            based authentication.
          nullable: true
          title: certificate
          type: integer
        validate_certificates:
          default: true
          description: |-
            `validate_certificates` specifies whether to perform checks on server
            certificates in a TLS session. If enabled, TLS_REQCERT demand is set.
            The server certificate is requested. If no certificate is provided or
            if a bad certificate is provided, the session is immediately terminated.
            If disabled, TLS_REQCERT allow is set. The server certificate is
            requested, but all errors are ignored.
          title: validate_certificates
          type: boolean
        disable_freenas_cache:
          title: disable_freenas_cache
          type: boolean
        timeout:
          default: 30
          description: |-
            `timeout` specifies  a  timeout  (in  seconds) after which calls to
            synchronous LDAP APIs will abort if no response is received.
          title: timeout
          type: integer
        dns_timeout:
          default: 5
          description: |-
            `dns_timeout` specifies the timeout (in seconds) after which the
            poll(2)/select(2) following a connect(2) returns in case of no activity
            for openldap. For nslcd this specifies the time limit (in seconds) to
            use when connecting to the directory server. This directly impacts the
            length of time that the LDAP service tries before failing over to
            a secondary LDAP URI.
          title: dns_timeout
          type: integer
        kerberos_realm:
          description: |-
            `kerberos_realm` in which the server is located. This parameter is
            only required for SASL GSSAPI authentication to the remote LDAP server.
            `kerberos_principal` kerberos principal to use for SASL GSSAPI
            authentication to the remote server. If `kerberos_realm` is specified
            without a keytab, then the `binddn` and `bindpw` are used to
            perform to obtain the ticket necessary for GSSAPI authentication.
          nullable: true
          title: kerberos_realm
          type: integer
        kerberos_principal:
          description: |-
            `kerberos_principal` kerberos principal to use for SASL GSSAPI
            authentication to the remote server. If `kerberos_realm` is specified
            without a keytab, then the `binddn` and `bindpw` are used to
            perform to obtain the ticket necessary for GSSAPI authentication.
          title: kerberos_principal
          type: string
        has_samba_schema:
          default: false
          title: has_samba_schema
          type: boolean
        auxiliary_parameters:
          default: "false"
          title: auxiliary_parameters
          type: string
        schema:
          default: RFC2307
          enum:
          - RFC2307
          - RFC2307BIS
          title: nss_info_ldap
          type: string
        enable:
          title: enable
          type: boolean
      title: ldap_update
      type: object
    mail_update_0:
      additionalProperties: false
      default: {}
      properties:
        fromemail:
          description: '`fromemail` is used as a sending address which the mail server
            will use for sending emails.'
          title: fromemail
          type: string
        fromname:
          title: fromname
          type: string
        outgoingserver:
          description: '`outgoingserver` is the hostname or IP address of SMTP server
            used for sending an email.'
          title: outgoingserver
          type: string
        port:
          title: port
          type: integer
        security:
          description: '`security` is type of encryption desired.'
          enum:
          - PLAIN
          - SSL
          - TLS
          title: security
          type: string
        smtp:
          title: smtp
          type: boolean
        user:
          nullable: true
          title: user
          type: string
        pass:
          nullable: true
          title: pass
          type: string
        oauth:
          $ref: '#/components/schemas/oauth'
      title: mail_entry
      type: object
    mail_send_0:
      additionalProperties: false
      default: {}
      properties:
        subject:
          title: subject
          type: string
        text:
          description: '`text` will be formatted to HTML using Markdown and rendered
            using default E-Mail template.'
          title: text
          type: string
        html:
          description: "You can put your own HTML using `html`. If `html` is null,\
            \ no HTML MIME part will be added to E-Mail."
          nullable: true
          title: html
          type: string
        to:
          default: []
          items:
            title: email
            type: string
          title: to
          type: array
        cc:
          default: []
          items:
            title: email
            type: string
          title: cc
          type: array
        interval:
          nullable: true
          title: interval
          type: integer
        channel:
          nullable: true
          title: channel
          type: string
        timeout:
          default: 300
          title: timeout
          type: integer
        attachments:
          default: false
          description: |-
            If `attachments` is true, a list compromised of the following dict is required
            via HTTP upload:
              - headers(list)
                - name(str)
                - value(str)
                - params(dict)
              - content (str)
          title: attachments
          type: boolean
        queue:
          default: true
          title: queue
          type: boolean
        extra_headers:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra_headers
          type: object
      title: mail_message
      type: object
    mail_send_1:
      additionalProperties: false
      default: {}
      properties:
        fromemail:
          title: fromemail
          type: string
        fromname:
          title: fromname
          type: string
        outgoingserver:
          title: outgoingserver
          type: string
        port:
          title: port
          type: integer
        security:
          enum:
          - PLAIN
          - SSL
          - TLS
          title: security
          type: string
        smtp:
          title: smtp
          type: boolean
        user:
          nullable: true
          title: user
          type: string
        pass:
          nullable: true
          title: pass
          type: string
        oauth:
          $ref: '#/components/schemas/oauth'
      title: mail_entry
      type: object
    mail_send:
      properties:
        mail_message:
          $ref: '#/components/schemas/mail_send_0'
        mail_entry:
          $ref: '#/components/schemas/mail_send_1'
      type: object
    network_configuration_update_0:
      additionalProperties: false
      default: {}
      properties:
        hostname:
          title: hostname
          type: string
        domain:
          title: domain
          type: string
        ipv4gateway:
          description: '`ipv4gateway` if set is used instead of the default gateway
            provided by DHCP.'
          title: ipv4gateway
          type: string
        ipv6gateway:
          title: ipv6gateway
          type: string
        nameserver1:
          description: '`nameserver1` is primary DNS server.'
          title: nameserver1
          type: string
        nameserver2:
          description: '`nameserver2` is secondary DNS server.'
          title: nameserver2
          type: string
        nameserver3:
          description: '`nameserver3` is tertiary DNS server.'
          title: nameserver3
          type: string
        httpproxy:
          description: '`httpproxy` attribute must be provided if a proxy is to be
            used for network operations.'
          title: httpproxy
          type: string
        netwait_enabled:
          description: |-
            `netwait_enabled` is a boolean attribute which when set indicates that network services will not start at
            boot unless they are able to ping the addresses listed in `netwait_ip` list.
          title: netwait_enabled
          type: boolean
        netwait_ip:
          default: []
          description: |-
            `netwait_enabled` is a boolean attribute which when set indicates that network services will not start at
            boot unless they are able to ping the addresses listed in `netwait_ip` list.
          items:
            title: netwait_ip
            type: string
          title: netwait_ip
          type: array
        hosts:
          title: hosts
          type: string
        domains:
          default: []
          items:
            title: domain
            type: string
          title: domains
          type: array
        service_announcement:
          $ref: '#/components/schemas/service_announcement'
        activity:
          $ref: '#/components/schemas/activity'
        hostname_b:
          nullable: true
          title: hostname_b
          type: string
        hostname_virtual:
          nullable: true
          title: hostname_virtual
          type: string
      title: network_configuration_entry
      type: object
    nfs_update_0:
      additionalProperties: false
      default: {}
      properties:
        servers:
          description: '`servers` represents number of servers to create.'
          title: servers
          type: integer
        udp:
          title: udp
          type: boolean
        allow_nonroot:
          description: "When `allow_nonroot` is set, it allows non-root mount requests\
            \ to be served."
          title: allow_nonroot
          type: boolean
        v4:
          description: '`v4` when set means that we switch from NFSv3 to NFSv4.'
          title: v4
          type: boolean
        v4_v3owner:
          description: '`v4_v3owner` when set means that system will use NFSv3 ownership
            model for NFSv4.'
          title: v4_v3owner
          type: boolean
        v4_krb:
          description: '`v4_krb` will force NFS shares to fail if the Kerberos ticket
            is unavailable.'
          title: v4_krb
          type: boolean
        v4_domain:
          description: '`v4_domain` overrides the default DNS domain name for NFSv4.'
          title: v4_domain
          type: string
        bindip:
          default: []
          description: |-
            `bindip` is a list of IP's on which NFS will listen for requests. When it is unset/empty, NFS listens on
            all available addresses.
          items:
            title: ip
            type: string
          title: bindip
          type: array
        mountd_port:
          description: '`mountd_port` specifies the port mountd(8) binds to.'
          nullable: true
          title: mountd_port
          type: integer
        rpcstatd_port:
          description: '`rpcstatd_port` specifies the port rpc.statd(8) binds to.'
          nullable: true
          title: rpcstatd_port
          type: integer
        rpclockd_port:
          description: '`rpclockd_port` specifies the port rpclockd_port(8) binds
            to.'
          nullable: true
          title: rpclockd_port
          type: integer
        mountd_log:
          title: mountd_log
          type: boolean
        statd_lockd_log:
          title: statd_lockd_log
          type: boolean
        userd_manage_gids:
          title: userd_manage_gids
          type: boolean
      title: nfs_entry
      type: object
    nfs_add_principal_0:
      additionalProperties: false
      default: {}
      properties:
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      title: kerberos_username_password
      type: object
    openvpn_client_update_0:
      additionalProperties: false
      default: {}
      properties:
        nobind:
          title: nobind
          type: boolean
        tls_crypt_auth_enabled:
          title: tls_crypt_auth_enabled
          type: boolean
        client_certificate:
          nullable: true
          title: client_certificate
          type: integer
        root_ca:
          nullable: true
          title: root_ca
          type: integer
        port:
          title: port
          type: integer
        additional_parameters:
          title: additional_parameters
          type: string
        authentication_algorithm:
          nullable: true
          title: authentication_algorithm
          type: string
        cipher:
          nullable: true
          title: cipher
          type: string
        compression:
          enum:
          - LZO
          - LZ4
          nullable: true
          title: compression
          type: string
        device_type:
          enum:
          - TUN
          - TAP
          title: device_type
          type: string
        protocol:
          enum:
          - UDP
          - UDP4
          - UDP6
          - TCP
          - TCP4
          - TCP6
          title: protocol
          type: string
        remote:
          description: '`remote` can be a valid ip address / domain which openvpn
            will try to connect to.'
          title: remote
          type: string
        tls_crypt_auth:
          nullable: true
          title: tls_crypt_auth
          type: string
        remove_certificates:
          default: false
          title: remove_certificates
          type: boolean
      title: openvpn_client_entry
      type: object
    openvpn_server_update_0:
      additionalProperties: false
      default: {}
      properties:
        tls_crypt_auth_enabled:
          title: tls_crypt_auth_enabled
          type: boolean
        netmask:
          title: netmask
          type: integer
        server_certificate:
          nullable: true
          title: server_certificate
          type: integer
        port:
          title: port
          type: integer
        root_ca:
          nullable: true
          title: root_ca
          type: integer
        server:
          title: server
          type: string
        additional_parameters:
          title: additional_parameters
          type: string
        authentication_algorithm:
          nullable: true
          title: authentication_algorithm
          type: string
        cipher:
          nullable: true
          title: cipher
          type: string
        compression:
          enum:
          - LZO
          - LZ4
          nullable: true
          title: compression
          type: string
        device_type:
          enum:
          - TUN
          - TAP
          title: device_type
          type: string
        protocol:
          enum:
          - UDP
          - UDP4
          - UDP6
          - TCP
          - TCP4
          - TCP6
          title: protocol
          type: string
        tls_crypt_auth:
          nullable: true
          title: tls_crypt_auth
          type: string
        topology:
          enum:
          - NET30
          - P2P
          - SUBNET
          nullable: true
          title: topology
          type: string
        remove_certificates:
          default: false
          title: remove_certificates
          type: boolean
      title: openvpn_server_entry
      type: object
    openvpn_server_client_configuration_generation_0:
      description: '`client_certificate_id` should be a valid certificate issued for
        use with OpenVPN client service.'
      title: client_certificate_id
      type: integer
    openvpn_server_client_configuration_generation_1:
      nullable: true
      title: server_address
      type: string
    openvpn_server_client_configuration_generation:
      properties:
        client_certificate_id:
          description: '`client_certificate_id` should be a valid certificate issued
            for use with OpenVPN client service.'
          title: client_certificate_id
          type: integer
        server_address:
          nullable: true
          title: server_address
          type: string
      type: object
    pool_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: |-
            `encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.
            `encryption_options` specifies configuration for encryption of root dataset for `name` pool.
            `encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase
            as a key.
            Otherwise a hex encoded key can be specified by providing `encryption_options.key`.
            `encryption_options.generate_key` when enabled automatically generates the key to be used
            for dataset encryption.
          title: name
          type: string
        encryption:
          default: false
          description: '`encryption` when enabled will create an ZFS encrypted root
            dataset for `name` pool.'
          title: encryption
          type: boolean
        deduplication:
          description: |-
            `deduplication` when set to ON or VERIFY makes sure that no block of data is duplicated in the pool. When
            VERIFY is specified, if two blocks have similar signatures, byte to byte comparison is performed to ensure that
            the blocks are identical. This should be used in special circumstances as it carries a significant overhead.
          enum:
          - null
          - "ON"
          - VERIFY
          - "OFF"
          nullable: true
          title: deduplication
          type: string
        checksum:
          enum:
          - null
          - "ON"
          - "OFF"
          - FLETCHER2
          - FLETCHER4
          - SHA256
          - SHA512
          - SKEIN
          - EDONR
          nullable: true
          title: checksum
          type: string
        encryption_options:
          $ref: '#/components/schemas/encryption_options'
        topology:
          $ref: '#/components/schemas/topology'
        allow_duplicate_serials:
          default: false
          title: allow_duplicate_serials
          type: boolean
      title: pool_create
      type: object
    pool_attach_0:
      description: |-
        For TrueNAS Core/Enterprise platform, if the `oid` pool is passphrase GELI encrypted, `passphrase`
        must be specified for this operation to succeed.
      title: oid
      type: integer
    pool_attach_1:
      additionalProperties: false
      default: {}
      properties:
        target_vdev:
          title: target_vdev
          type: string
        new_disk:
          title: new_disk
          type: string
        allow_duplicate_serials:
          default: false
          title: allow_duplicate_serials
          type: boolean
      title: pool_attach
      type: object
    pool_attach:
      properties:
        oid:
          description: |-
            For TrueNAS Core/Enterprise platform, if the `oid` pool is passphrase GELI encrypted, `passphrase`
            must be specified for this operation to succeed.
          title: oid
          type: integer
        pool_attach:
          $ref: '#/components/schemas/pool_attach_1'
      type: object
    pool_filesystem_choices_0:
      default:
      - FILESYSTEM
      - VOLUME
      items:
        enum:
        - FILESYSTEM
        - VOLUME
        title: type
        type: string
      title: types
      type: array
    pool_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    pool_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    pool_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/pool_get_instance_0'
        query-options:
          $ref: '#/components/schemas/pool_get_instance_1'
      type: object
    pool_get_instance_by_name_0:
      title: name
      type: string
    pool_import_disk_0:
      title: device
      type: string
    pool_import_disk_1:
      title: fs_type
      type: string
    pool_import_disk_2:
      additionalProperties: true
      default: {}
      properties: {}
      title: fs_options
      type: object
    pool_import_disk_3:
      title: dst_path
      type: string
    pool_import_disk:
      properties:
        device:
          title: device
          type: string
        fs_type:
          title: fs_type
          type: string
        fs_options:
          additionalProperties: true
          default: {}
          properties: {}
          title: fs_options
          type: object
        dst_path:
          title: dst_path
          type: string
      type: object
    pool_import_disk_autodetect_fs_type_0:
      title: device
      type: string
    pool_import_pool_0:
      additionalProperties: false
      default: {}
      properties:
        guid:
          title: guid
          type: string
        name:
          description: If a `name` is specified the pool will be imported using that
            new name.
          title: name
          type: string
        passphrase:
          description: '`passphrase` DEPRECATED. GELI not supported on SCALE.'
          title: passphrase
          type: string
        enable_attachments:
          description: |-
            If `enable_attachments` is set to true, attachments that were disabled during pool export will be
            re-enabled.
          title: enable_attachments
          type: boolean
      title: pool_import
      type: object
    pool_dataset_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: |-
            `encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.
            There are 2 cases where ZFS encryption is not allowed for a dataset:
            1) Pool in question is GELI encrypted.
            2) If the parent dataset is encrypted with a passphrase and `name` is being created
               with a key for encrypting the dataset.
            `encryption_options` specifies configuration for encryption of dataset for `name` pool.
            `encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase
            as a key.
            Otherwise a hex encoded key can be specified by providing `encryption_options.key`.
            `encryption_options.generate_key` when enabled automatically generates the key to be used
            for dataset encryption.
          title: name
          type: string
        type:
          default: FILESYSTEM
          enum:
          - FILESYSTEM
          - VOLUME
          title: type
          type: string
        volsize:
          description: '`volsize` is required for type=VOLUME and is supposed to be
            a multiple of the block size.'
          title: volsize
          type: integer
        volblocksize:
          description: '`sparse` and `volblocksize` are only used for type=VOLUME.'
          enum:
          - "512"
          - 512B
          - 1K
          - 2K
          - 4K
          - 8K
          - 16K
          - 32K
          - 64K
          - 128K
          title: volblocksize
          type: string
        sparse:
          description: '`sparse` and `volblocksize` are only used for type=VOLUME.'
          title: sparse
          type: boolean
        force_size:
          title: force_size
          type: boolean
        comments:
          $ref: '#/components/schemas/comments'
        sync:
          enum:
          - STANDARD
          - ALWAYS
          - DISABLED
          - INHERIT
          nullable: false
          title: sync
          type: string
        snapdev:
          enum:
          - HIDDEN
          - VISIBLE
          - INHERIT
          nullable: false
          title: snapdev
          type: string
        compression:
          enum:
          - "OFF"
          - LZ4
          - GZIP
          - GZIP-1
          - GZIP-9
          - ZSTD
          - ZSTD-FAST
          - ZLE
          - LZJB
          - ZSTD-1
          - ZSTD-2
          - ZSTD-3
          - ZSTD-4
          - ZSTD-5
          - ZSTD-6
          - ZSTD-7
          - ZSTD-8
          - ZSTD-9
          - ZSTD-10
          - ZSTD-11
          - ZSTD-12
          - ZSTD-13
          - ZSTD-14
          - ZSTD-15
          - ZSTD-16
          - ZSTD-17
          - ZSTD-18
          - ZSTD-19
          - ZSTD-FAST-1
          - ZSTD-FAST-2
          - ZSTD-FAST-3
          - ZSTD-FAST-4
          - ZSTD-FAST-5
          - ZSTD-FAST-6
          - ZSTD-FAST-7
          - ZSTD-FAST-8
          - ZSTD-FAST-9
          - ZSTD-FAST-10
          - ZSTD-FAST-20
          - ZSTD-FAST-30
          - ZSTD-FAST-40
          - ZSTD-FAST-50
          - ZSTD-FAST-60
          - ZSTD-FAST-70
          - ZSTD-FAST-80
          - ZSTD-FAST-90
          - ZSTD-FAST-100
          - ZSTD-FAST-500
          - ZSTD-FAST-1000
          - INHERIT
          nullable: false
          title: compression
          type: string
        atime:
          enum:
          - "ON"
          - "OFF"
          - INHERIT
          nullable: false
          title: atime
          type: string
        exec:
          enum:
          - "ON"
          - "OFF"
          - INHERIT
          nullable: false
          title: exec
          type: string
        managedby:
          $ref: '#/components/schemas/managedby'
        quota:
          nullable: true
          title: quota
          type: integer
        quota_warning:
          $ref: '#/components/schemas/quota_warning'
        quota_critical:
          $ref: '#/components/schemas/quota_critical'
        refquota:
          nullable: true
          title: refquota
          type: integer
        refquota_warning:
          $ref: '#/components/schemas/refquota_warning'
        refquota_critical:
          $ref: '#/components/schemas/refquota_critical'
        reservation:
          title: reservation
          type: integer
        refreservation:
          title: refreservation
          type: integer
        special_small_block_size:
          $ref: '#/components/schemas/special_small_block_size'
        copies:
          $ref: '#/components/schemas/copies'
        snapdir:
          enum:
          - VISIBLE
          - HIDDEN
          - INHERIT
          nullable: false
          title: snapdir
          type: string
        deduplication:
          enum:
          - "ON"
          - VERIFY
          - "OFF"
          - INHERIT
          nullable: false
          title: deduplication
          type: string
        checksum:
          enum:
          - "ON"
          - "OFF"
          - FLETCHER2
          - FLETCHER4
          - SHA256
          - SHA512
          - SKEIN
          - EDONR
          - INHERIT
          nullable: false
          title: checksum
          type: string
        readonly:
          enum:
          - "ON"
          - "OFF"
          - INHERIT
          nullable: false
          title: readonly
          type: string
        recordsize:
          $ref: '#/components/schemas/recordsize'
        casesensitivity:
          enum:
          - SENSITIVE
          - INSENSITIVE
          - INHERIT
          nullable: false
          title: casesensitivity
          type: string
        aclmode:
          enum:
          - PASSTHROUGH
          - RESTRICTED
          - DISCARD
          - INHERIT
          nullable: false
          title: aclmode
          type: string
        acltype:
          enum:
          - "OFF"
          - NFSV4
          - POSIX
          - INHERIT
          nullable: false
          title: acltype
          type: string
        share_type:
          default: GENERIC
          enum:
          - GENERIC
          - SMB
          title: share_type
          type: string
        xattr:
          default: SA
          enum:
          - "ON"
          - SA
          - INHERIT
          nullable: false
          title: xattr
          type: string
        encryption_options:
          $ref: '#/components/schemas/encryption_options_1'
        encryption:
          default: false
          description: |-
            `encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.
            There are 2 cases where ZFS encryption is not allowed for a dataset:
            1) Pool in question is GELI encrypted.
            2) If the parent dataset is encrypted with a passphrase and `name` is being created
               with a key for encrypting the dataset.
          title: encryption
          type: boolean
        inherit_encryption:
          default: true
          title: inherit_encryption
          type: boolean
        user_properties:
          default: []
          items:
            $ref: '#/components/schemas/user_property'
          title: user_properties
          type: array
        create_ancestors:
          default: false
          title: create_ancestors
          type: boolean
      title: pool_dataset_create
      type: object
    pool_dataset_change_key_0:
      description: Change encryption properties for `id` encrypted dataset.
      title: id
      type: string
    pool_dataset_change_key_1:
      additionalProperties: false
      default: {}
      properties:
        generate_key:
          default: false
          title: generate_key
          type: boolean
        key_file:
          default: false
          title: key_file
          type: boolean
        pbkdf2iters:
          default: 350000
          title: pbkdf2iters
          type: integer
        passphrase:
          nullable: true
          title: passphrase
          type: string
        key:
          nullable: true
          title: key
          type: string
      title: change_key_options
      type: object
    pool_dataset_change_key:
      properties:
        id:
          description: Change encryption properties for `id` encrypted dataset.
          title: id
          type: string
        change_key_options:
          $ref: '#/components/schemas/pool_dataset_change_key_1'
      type: object
    pool_dataset_destroy_snapshots_0:
      title: name
      type: string
    pool_dataset_destroy_snapshots_1:
      additionalProperties: false
      default: {}
      properties:
        all:
          default: true
          title: all
          type: boolean
        recursive:
          default: false
          title: recursive
          type: boolean
        snapshots:
          default: []
          items:
            $ref: '#/components/schemas/snapshots_inner'
          title: snapshots
          type: array
      title: snapshots
      type: object
    pool_dataset_destroy_snapshots:
      properties:
        name:
          title: name
          type: string
        snapshots:
          $ref: '#/components/schemas/pool_dataset_destroy_snapshots_1'
      type: object
    pool_dataset_encryption_summary_0:
      description: |-
        Retrieve summary of all encrypted roots under `id`.
        It should be noted that there are 2 keys which show if a recursive unlock operation is
        done for `id`, which dataset will be unlocked and if not why it won't be unlocked. The keys
        namely are "unlock_successful" and "unlock_error". The former is a boolean value showing if unlock
        would succeed/fail. The latter is description why it failed if it failed.
      title: id
      type: string
    pool_dataset_encryption_summary_1:
      additionalProperties: false
      default: {}
      properties:
        key_file:
          default: false
          title: key_file
          type: boolean
        force:
          default: false
          title: force
          type: boolean
        datasets:
          default: []
          items:
            $ref: '#/components/schemas/dataset'
          title: datasets
          type: array
      title: encryption_root_summary_options
      type: object
    pool_dataset_encryption_summary:
      properties:
        id:
          description: |-
            Retrieve summary of all encrypted roots under `id`.
            It should be noted that there are 2 keys which show if a recursive unlock operation is
            done for `id`, which dataset will be unlocked and if not why it won't be unlocked. The keys
            namely are "unlock_successful" and "unlock_error". The former is a boolean value showing if unlock
            would succeed/fail. The latter is description why it failed if it failed.
          title: id
          type: string
        encryption_root_summary_options:
          $ref: '#/components/schemas/pool_dataset_encryption_summary_1'
      type: object
    pool_dataset_export_key_0:
      description: |-
        Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file
        where the same file can be used to unlock the dataset, otherwise it will be returned as string.
      title: id
      type: string
    pool_dataset_export_key_1:
      default: false
      description: |-
        Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file
        where the same file can be used to unlock the dataset, otherwise it will be returned as string.
      title: download
      type: boolean
    pool_dataset_export_key:
      properties:
        id:
          description: |-
            Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file
            where the same file can be used to unlock the dataset, otherwise it will be returned as string.
          title: id
          type: string
        download:
          default: false
          description: |-
            Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file
            where the same file can be used to unlock the dataset, otherwise it will be returned as string.
          title: download
          type: boolean
      type: object
    pool_dataset_export_keys_0:
      description: |-
        Export keys for `id` and its children which are stored in the system. The exported file is a JSON file
        which has a dictionary containing dataset names as keys and their keys as the value.
      title: id
      type: string
    pool_dataset_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    pool_dataset_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    pool_dataset_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/pool_dataset_get_instance_0'
        query-options:
          $ref: '#/components/schemas/pool_dataset_get_instance_1'
      type: object
    pool_dataset_inherit_parent_encryption_properties_0:
      title: id
      type: string
    pool_dataset_lock_0:
      description: Locks `id` dataset. It will unmount the dataset and its children
        before locking.
      title: id
      type: string
    pool_dataset_lock_1:
      additionalProperties: false
      default: {}
      properties:
        force_umount:
          default: false
          title: force_umount
          type: boolean
      title: lock_options
      type: object
    pool_dataset_lock:
      properties:
        id:
          description: Locks `id` dataset. It will unmount the dataset and its children
            before locking.
          title: id
          type: string
        lock_options:
          $ref: '#/components/schemas/pool_dataset_lock_1'
      type: object
    pool_dataset_mountpoint_0:
      title: dataset
      type: string
    pool_dataset_mountpoint_1:
      default: true
      title: raise
      type: boolean
    pool_dataset_mountpoint:
      properties:
        dataset:
          title: dataset
          type: string
        raise:
          default: true
          title: raise
          type: boolean
      type: object
    pool_dataset_recommended_zvol_blocksize_0:
      title: pool
      type: string
    pool_dataset_snapshot_count_0:
      title: dataset
      type: string
    pool_dataset_unlock_0:
      description: |-
        Unlock dataset `id` (and its children if `unlock_options.recursive` is `true`).
        If `id` dataset is not encrypted an exception will be raised. There is one exception:
        when `id` is a root dataset and `unlock_options.recursive` is specified, encryption
        validation will not be performed for `id`. This allow unlocking encrypted children for the entire pool `id`.
      title: id
      type: string
    pool_dataset_unlock_1:
      additionalProperties: false
      default: {}
      properties:
        force:
          default: false
          title: force
          type: boolean
        key_file:
          default: false
          title: key_file
          type: boolean
        recursive:
          default: false
          title: recursive
          type: boolean
        toggle_attachments:
          default: true
          title: toggle_attachments
          type: boolean
        datasets:
          default: []
          items:
            $ref: '#/components/schemas/dataset_1'
          title: datasets
          type: array
      title: unlock_options
      type: object
    pool_dataset_unlock:
      properties:
        id:
          description: |-
            Unlock dataset `id` (and its children if `unlock_options.recursive` is `true`).
            If `id` dataset is not encrypted an exception will be raised. There is one exception:
            when `id` is a root dataset and `unlock_options.recursive` is specified, encryption
            validation will not be performed for `id`. This allow unlocking encrypted children for the entire pool `id`.
          title: id
          type: string
        unlock_options:
          $ref: '#/components/schemas/pool_dataset_unlock_1'
      type: object
    pool_dataset_unlock_services_restart_choices_0:
      title: dataset
      type: string
    pool_dataset_userprop_create_0:
      additionalProperties: false
      default: {}
      properties:
        id:
          title: id
          type: string
        property:
          $ref: '#/components/schemas/property'
      title: dataset_user_prop_create
      type: object
    pool_dataset_userprop_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    pool_dataset_userprop_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    pool_dataset_userprop_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/pool_dataset_userprop_get_instance_0'
        query-options:
          $ref: '#/components/schemas/pool_dataset_userprop_get_instance_1'
      type: object
    pool_resilver_update_0:
      additionalProperties: false
      default: {}
      properties:
        begin:
          description: |-
            If `begin` time is greater than `end` time it means it will rollover the day, e.g.
            begin = "19:00", end = "05:00" will increase pool resilver priority from 19:00 of one day
            until 05:00 of the next day.
          title: begin
          type: string
        end:
          description: |-
            If `begin` time is greater than `end` time it means it will rollover the day, e.g.
            begin = "19:00", end = "05:00" will increase pool resilver priority from 19:00 of one day
            until 05:00 of the next day.
          title: end
          type: string
        enabled:
          title: enabled
          type: boolean
        weekday:
          default: []
          description: '`weekday` follows crontab(5) values 0-7 (0 or 7 is Sun).'
          items:
            title: weekday
            type: integer
          title: weekday
          type: array
      title: pool_resilver_entry
      type: object
    pool_scrub_create_0:
      additionalProperties: false
      default: {}
      properties:
        pool:
          title: pool
          type: integer
        threshold:
          description: |-
            `threshold` refers to the minimum amount of time in days has to be passed before
            a scrub can run again.
          title: threshold
          type: integer
        description:
          title: description
          type: string
        schedule:
          $ref: '#/components/schemas/schedule_1'
        enabled:
          default: true
          title: enabled
          type: boolean
      title: pool_scrub_entry
      type: object
    pool_scrub_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    pool_scrub_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    pool_scrub_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/pool_scrub_get_instance_0'
        query-options:
          $ref: '#/components/schemas/pool_scrub_get_instance_1'
      type: object
    pool_scrub_run_0:
      title: name
      type: string
    pool_scrub_run_1:
      default: 35
      title: threshold
      type: integer
    pool_scrub_run:
      properties:
        name:
          title: name
          type: string
        threshold:
          default: 35
          title: threshold
          type: integer
      type: object
    pool_scrub_scrub_0:
      title: name
      type: string
    pool_scrub_scrub_1:
      default: START
      enum:
      - START
      - STOP
      - PAUSE
      title: action
      type: string
    pool_scrub_scrub:
      properties:
        name:
          title: name
          type: string
        action:
          $ref: '#/components/schemas/pool_scrub_scrub_1'
      type: object
    pool_snapshottask_create_0:
      additionalProperties: false
      default: {}
      properties:
        dataset:
          description: Create a Periodic Snapshot Task that will take snapshots of
            specified `dataset` at specified `schedule`.
          title: dataset
          type: string
        recursive:
          description: |-
            Recursive snapshots can be created if `recursive` flag is enabled. You can `exclude` specific child datasets
            or zvols from the snapshot.
            Snapshots will be automatically destroyed after a certain amount of time, specified by
          title: recursive
          type: boolean
        exclude:
          default: []
          description: |-
            Recursive snapshots can be created if `recursive` flag is enabled. You can `exclude` specific child datasets
            or zvols from the snapshot.
            Snapshots will be automatically destroyed after a certain amount of time, specified by
          items:
            title: item
            type: string
          title: exclude
          type: array
        lifetime_value:
          description: |-
            `lifetime_value` and `lifetime_unit`.
            If multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot
            will be kept until the last of these tasks reaches its expiry time.
          title: lifetime_value
          type: integer
        lifetime_unit:
          description: |-
            `lifetime_value` and `lifetime_unit`.
            If multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot
            will be kept until the last of these tasks reaches its expiry time.
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          title: lifetime_unit
          type: string
        naming_schema:
          description: |-
            Snapshots will be named according to `naming_schema` which is a `strftime`-like template for snapshot name
            and must contain `%Y`, `%m`, `%d`, `%H` and `%M`.
          title: naming_schema
          type: string
        schedule:
          $ref: '#/components/schemas/schedule_2'
        allow_empty:
          default: true
          title: allow_empty
          type: boolean
        enabled:
          default: true
          title: enabled
          type: boolean
      title: periodic_snapshot_create
      type: object
    pool_snapshottask_foreseen_count_0:
      additionalProperties: false
      default: {}
      properties:
        lifetime_value:
          title: lifetime_value
          type: integer
        lifetime_unit:
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          title: lifetime_unit
          type: string
        schedule:
          $ref: '#/components/schemas/schedule_3'
      title: periodic_snapshot_foreseen_count
      type: object
    pool_snapshottask_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    pool_snapshottask_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    pool_snapshottask_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/pool_snapshottask_get_instance_0'
        query-options:
          $ref: '#/components/schemas/pool_snapshottask_get_instance_1'
      type: object
    privilege_create_0:
      additionalProperties: false
      default: {}
      properties:
        id:
          title: id
          type: integer
        name:
          description: '`name` is a name for privilege (must be unique).'
          title: name
          type: string
        local_groups:
          default: []
          description: '`local_groups` is a list of local user account group GIDs
            that gain this privilege.'
          items:
            title: local_group
            type: integer
          title: local_groups
          type: array
        ds_groups:
          default: []
          description: '`ds_groups` is list of Directory Service group GIDs that will
            gain this privilege.'
          items:
            title: ds_group
            type: integer
          title: ds_groups
          type: array
        allowlist:
          default: []
          description: '`allowlist` is a list of API endpoints allowed for this privilege.'
          items:
            $ref: '#/components/schemas/allowlist_item'
          title: allowlist
          type: array
        web_shell:
          title: web_shell
          type: boolean
      title: privilege_entry
      type: object
    privilege_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    privilege_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    privilege_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/privilege_get_instance_0'
        query-options:
          $ref: '#/components/schemas/privilege_get_instance_1'
      type: object
    replication_create_0:
      additionalProperties: false
      default: {}
      properties:
        name:
          description: '* `name` specifies a name for replication task'
          title: name
          type: string
        direction:
          description: '* `direction` specifies whether task will `PUSH` or `PULL`
            snapshots'
          enum:
          - PUSH
          - PULL
          title: direction
          type: string
        transport:
          description: |-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
              `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be
              passwordless) to run `zfs` command on the remote machine.
          enum:
          - SSH
          - SSH+NETCAT
          - LOCAL
          title: transport
          type: string
        ssh_credentials:
          description: |-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
              `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be
              passwordless) to run `zfs` command on the remote machine.
          nullable: true
          title: ssh_credentials
          type: integer
        netcat_active_side:
          description: |-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
              `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be
              passwordless) to run `zfs` command on the remote machine.
          enum:
          - LOCAL
          - REMOTE
          nullable: true
          title: netcat_active_side
          type: string
        netcat_active_side_listen_address:
          nullable: true
          title: netcat_active_side_listen_address
          type: string
        netcat_active_side_port_min:
          description: |-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
              `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be
              passwordless) to run `zfs` command on the remote machine.
          nullable: true
          title: netcat_active_side_port_min
          type: integer
        netcat_active_side_port_max:
          description: |-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
              `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be
              passwordless) to run `zfs` command on the remote machine.
          nullable: true
          title: netcat_active_side_port_max
          type: integer
        netcat_passive_side_connect_address:
          nullable: true
          title: netcat_passive_side_connect_address
          type: string
        sudo:
          default: false
          description: |-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
              `sudo` flag controls whether `SSH` and `SSH+NETCAT` transports should use sudo (which is expected to be
              passwordless) to run `zfs` command on the remote machine.
          title: sudo
          type: boolean
        source_datasets:
          default: []
          description: '* `source_datasets` is a non-empty list of datasets to replicate
            snapshots from'
          items:
            title: dataset
            type: string
          title: source_datasets
          type: array
        target_dataset:
          description: '* `target_dataset` is a dataset to put snapshots into. It
            must exist on target side'
          title: target_dataset
          type: string
        recursive:
          description: '* `recursive` and `exclude` have the same meaning as for Periodic
            Snapshot Task'
          title: recursive
          type: boolean
        exclude:
          default: []
          description: '* `recursive` and `exclude` have the same meaning as for Periodic
            Snapshot Task'
          items:
            title: dataset
            type: string
          title: exclude
          type: array
        properties:
          default: true
          description: '* `properties` control whether we should send dataset properties
            along with snapshots'
          title: properties
          type: boolean
        properties_exclude:
          default: []
          items:
            title: property
            type: string
          title: properties_exclude
          type: array
        properties_override:
          additionalProperties: true
          default: {}
          properties: {}
          title: properties_override
          type: object
        replicate:
          default: false
          title: replicate
          type: boolean
        encryption:
          default: false
          title: encryption
          type: boolean
        encryption_key:
          nullable: true
          title: encryption_key
          type: string
        encryption_key_format:
          enum:
          - HEX
          - PASSPHRASE
          nullable: true
          title: encryption_key_format
          type: string
        encryption_key_location:
          nullable: true
          title: encryption_key_location
          type: string
        periodic_snapshot_tasks:
          default: []
          description: |-
            * `periodic_snapshot_tasks` is a list of periodic snapshot task IDs that are sources of snapshots for this
              replication task. Only push replication tasks can be bound to periodic snapshot tasks.
          items:
            title: periodic_snapshot_task
            type: integer
          title: periodic_snapshot_tasks
          type: array
        naming_schema:
          default: []
          description: '* `naming_schema` is a list of naming schemas for pull replication'
          items:
            title: naming_schema
            type: string
          title: naming_schema
          type: array
        also_include_naming_schema:
          default: []
          description: '* `also_include_naming_schema` is a list of naming schemas
            for push replication'
          items:
            title: naming_schema
            type: string
          title: also_include_naming_schema
          type: array
        name_regex:
          description: '* `name_regex` will replicate all snapshots which names match
            specified regular expression'
          nullable: true
          title: name_regex
          type: string
        auto:
          description: |-
            * `auto` allows replication to run automatically on schedule or after bound periodic snapshot task
            * `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic
              snapshot tasks can have a schedule
          title: auto
          type: boolean
        schedule:
          $ref: '#/components/schemas/schedule_4'
        restrict_schedule:
          $ref: '#/components/schemas/restrict_schedule'
        only_matching_schedule:
          default: false
          description: |-
            * Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or
              `restrict_schedule`
          title: only_matching_schedule
          type: boolean
        allow_from_scratch:
          default: false
          description: |-
            * `allow_from_scratch` will destroy all snapshots on target side and replicate everything from scratch if none
              of the snapshots on target side matches source snapshots
          title: allow_from_scratch
          type: boolean
        readonly:
          default: SET
          description: |-
            * `readonly` controls destination datasets readonly property:
              * `SET` will set all destination datasets to readonly=on after finishing the replication
              * `REQUIRE` will require all existing destination datasets to have readonly=on property
              * `IGNORE` will avoid this kind of behavior
          enum:
          - SET
          - REQUIRE
          - IGNORE
          title: readonly
          type: string
        hold_pending_snapshots:
          default: false
          description: |-
            * `hold_pending_snapshots` will prevent source snapshots from being deleted by retention of replication fails
              for some reason
          title: hold_pending_snapshots
          type: boolean
        retention_policy:
          description: |-
            * `retention_policy` specifies how to delete old snapshots on target side:
              * `SOURCE` deletes snapshots that are absent on source side
              * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`
              * `NONE` does not delete any snapshots
          enum:
          - SOURCE
          - CUSTOM
          - NONE
          title: retention_policy
          type: string
        lifetime_value:
          description: |-
            * `retention_policy` specifies how to delete old snapshots on target side:
              * `SOURCE` deletes snapshots that are absent on source side
              * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`
              * `NONE` does not delete any snapshots
          nullable: true
          title: lifetime_value
          type: integer
        lifetime_unit:
          description: |-
            * `retention_policy` specifies how to delete old snapshots on target side:
              * `SOURCE` deletes snapshots that are absent on source side
              * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`
              * `NONE` does not delete any snapshots
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          nullable: true
          title: lifetime_unit
          type: string
        lifetimes:
          default: []
          items:
            $ref: '#/components/schemas/lifetime'
          title: lifetimes
          type: array
        compression:
          description: '* `compression` compresses SSH stream. Available only for
            SSH transport'
          enum:
          - LZ4
          - PIGZ
          - PLZIP
          nullable: true
          title: compression
          type: string
        speed_limit:
          description: '* `speed_limit` limits speed of SSH stream. Available only
            for SSH transport'
          nullable: true
          title: speed_limit
          type: integer
        large_block:
          default: true
          description: "* `large_block`, `embed` and `compressed` are various ZFS\
            \ stream flag documented in `man zfs send`"
          title: large_block
          type: boolean
        embed:
          default: false
          description: "* `large_block`, `embed` and `compressed` are various ZFS\
            \ stream flag documented in `man zfs send`"
          title: embed
          type: boolean
        compressed:
          default: true
          description: "* `large_block`, `embed` and `compressed` are various ZFS\
            \ stream flag documented in `man zfs send`"
          title: compressed
          type: boolean
        retries:
          default: 5
          description: '* `retries` specifies number of retries before considering
            replication failed'
          title: retries
          type: integer
        logging_level:
          enum:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
          nullable: true
          title: logging_level
          type: string
        enabled:
          default: true
          title: enabled
          type: boolean
      title: replication_create
      type: object
    replication_count_eligible_manual_snapshots_0:
      additionalProperties: false
      default: {}
      properties:
        datasets:
          default: []
          items:
            title: dataset
            type: string
          title: datasets
          type: array
        naming_schema:
          default: []
          description: Count how many existing snapshots of `dataset` match `naming_schema`.
          items:
            title: naming_schema
            type: string
          title: naming_schema
          type: array
        name_regex:
          nullable: true
          title: name_regex
          type: string
        transport:
          enum:
          - SSH
          - SSH+NETCAT
          - LOCAL
          title: transport
          type: string
        ssh_credentials:
          nullable: true
          title: ssh_credentials
          type: integer
      title: count_eligible_manual_snapshots
      type: object
    replication_create_dataset_0:
      description: "Accepts `dataset` name, `transport` and SSH credentials ID (for\
        \ non-local transport)"
      title: dataset
      type: string
    replication_create_dataset_1:
      description: "Accepts `dataset` name, `transport` and SSH credentials ID (for\
        \ non-local transport)"
      enum:
      - SSH
      - SSH+NETCAT
      - LOCAL
      title: transport
      type: string
    replication_create_dataset_2:
      nullable: true
      title: ssh_credentials
      type: integer
    replication_create_dataset:
      properties:
        dataset:
          description: "Accepts `dataset` name, `transport` and SSH credentials ID\
            \ (for non-local transport)"
          title: dataset
          type: string
        transport:
          $ref: '#/components/schemas/replication_create_dataset_1'
        ssh_credentials:
          nullable: true
          title: ssh_credentials
          type: integer
      type: object
    replication_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    replication_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    replication_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/replication_get_instance_0'
        query-options:
          $ref: '#/components/schemas/replication_get_instance_1'
      type: object
    replication_list_datasets_0:
      description: Accepts `transport` and SSH credentials ID (for non-local transport)
      enum:
      - SSH
      - SSH+NETCAT
      - LOCAL
      title: transport
      type: string
    replication_list_datasets_1:
      nullable: true
      title: ssh_credentials
      type: integer
    replication_list_datasets:
      properties:
        transport:
          $ref: '#/components/schemas/replication_list_datasets_0'
        ssh_credentials:
          nullable: true
          title: ssh_credentials
          type: integer
      type: object
    replication_run_onetime_0:
      additionalProperties: false
      default: {}
      properties:
        direction:
          enum:
          - PUSH
          - PULL
          title: direction
          type: string
        transport:
          enum:
          - SSH
          - SSH+NETCAT
          - LOCAL
          title: transport
          type: string
        ssh_credentials:
          nullable: true
          title: ssh_credentials
          type: integer
        netcat_active_side:
          enum:
          - LOCAL
          - REMOTE
          nullable: true
          title: netcat_active_side
          type: string
        netcat_active_side_listen_address:
          nullable: true
          title: netcat_active_side_listen_address
          type: string
        netcat_active_side_port_min:
          nullable: true
          title: netcat_active_side_port_min
          type: integer
        netcat_active_side_port_max:
          nullable: true
          title: netcat_active_side_port_max
          type: integer
        netcat_passive_side_connect_address:
          nullable: true
          title: netcat_passive_side_connect_address
          type: string
        sudo:
          default: false
          title: sudo
          type: boolean
        source_datasets:
          default: []
          items:
            title: dataset
            type: string
          title: source_datasets
          type: array
        target_dataset:
          title: target_dataset
          type: string
        recursive:
          title: recursive
          type: boolean
        exclude:
          default: []
          items:
            title: dataset
            type: string
          title: exclude
          type: array
        properties:
          default: true
          title: properties
          type: boolean
        properties_exclude:
          default: []
          items:
            title: property
            type: string
          title: properties_exclude
          type: array
        properties_override:
          additionalProperties: true
          default: {}
          properties: {}
          title: properties_override
          type: object
        replicate:
          default: false
          title: replicate
          type: boolean
        encryption:
          default: false
          title: encryption
          type: boolean
        encryption_key:
          nullable: true
          title: encryption_key
          type: string
        encryption_key_format:
          enum:
          - HEX
          - PASSPHRASE
          nullable: true
          title: encryption_key_format
          type: string
        encryption_key_location:
          nullable: true
          title: encryption_key_location
          type: string
        periodic_snapshot_tasks:
          default: []
          items:
            title: periodic_snapshot_task
            type: integer
          title: periodic_snapshot_tasks
          type: array
        naming_schema:
          default: []
          items:
            title: naming_schema
            type: string
          title: naming_schema
          type: array
        also_include_naming_schema:
          default: []
          items:
            title: naming_schema
            type: string
          title: also_include_naming_schema
          type: array
        name_regex:
          nullable: true
          title: name_regex
          type: string
        restrict_schedule:
          $ref: '#/components/schemas/restrict_schedule_1'
        allow_from_scratch:
          default: false
          title: allow_from_scratch
          type: boolean
        readonly:
          default: SET
          enum:
          - SET
          - REQUIRE
          - IGNORE
          title: readonly
          type: string
        hold_pending_snapshots:
          default: false
          title: hold_pending_snapshots
          type: boolean
        retention_policy:
          enum:
          - SOURCE
          - CUSTOM
          - NONE
          title: retention_policy
          type: string
        lifetime_value:
          nullable: true
          title: lifetime_value
          type: integer
        lifetime_unit:
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          nullable: true
          title: lifetime_unit
          type: string
        lifetimes:
          default: []
          items:
            $ref: '#/components/schemas/lifetime'
          title: lifetimes
          type: array
        compression:
          enum:
          - LZ4
          - PIGZ
          - PLZIP
          nullable: true
          title: compression
          type: string
        speed_limit:
          nullable: true
          title: speed_limit
          type: integer
        large_block:
          default: true
          title: large_block
          type: boolean
        embed:
          default: false
          title: embed
          type: boolean
        compressed:
          default: true
          title: compressed
          type: boolean
        retries:
          default: 5
          title: retries
          type: integer
        logging_level:
          enum:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
          nullable: true
          title: logging_level
          type: string
        exclude_mountpoint_property:
          default: true
          title: exclude_mountpoint_property
          type: boolean
        only_from_scratch:
          default: false
          title: only_from_scratch
          type: boolean
      title: replication_create
      type: object
    replication_target_unmatched_snapshots_0:
      enum:
      - PUSH
      - PULL
      title: direction
      type: string
    replication_target_unmatched_snapshots_1:
      default: []
      items:
        title: dataset
        type: string
      title: source_datasets
      type: array
    replication_target_unmatched_snapshots_2:
      title: target_dataset
      type: string
    replication_target_unmatched_snapshots_3:
      enum:
      - SSH
      - SSH+NETCAT
      - LOCAL
      - LEGACY
      title: transport
      type: string
    replication_target_unmatched_snapshots_4:
      nullable: true
      title: ssh_credentials
      type: integer
    replication_target_unmatched_snapshots:
      properties:
        direction:
          $ref: '#/components/schemas/replication_target_unmatched_snapshots_0'
        source_datasets:
          default: []
          items:
            title: dataset
            type: string
          title: source_datasets
          type: array
        target_dataset:
          title: target_dataset
          type: string
        transport:
          $ref: '#/components/schemas/replication_target_unmatched_snapshots_3'
        ssh_credentials:
          nullable: true
          title: ssh_credentials
          type: integer
      type: object
    replication_config_update_0:
      additionalProperties: false
      default: {}
      properties:
        max_parallel_replication_tasks:
          nullable: true
          title: max_parallel_replication_tasks
          type: integer
      title: replication_config_update
      type: object
    reporting_update_0:
      additionalProperties: false
      default: {}
      properties:
        cpu_in_percentage:
          description: "If `cpu_in_percentage` is `true`, collectd reports CPU usage\
            \ in percentage instead of \"jiffies\"."
          title: cpu_in_percentage
          type: boolean
        graphite:
          description: '`graphite` specifies a destination hostname or IP for collectd
            data sent by the Graphite plugin..'
          title: graphite
          type: string
        graphite_separateinstances:
          description: '`graphite_separateinstances` corresponds to collectd SeparateInstances
            option.'
          title: graphite_separateinstances
          type: boolean
        graph_age:
          description: |-
            `graph_age` specifies the maximum age of stored graphs in months. `graph_points` is the number of points for
            each hourly, daily, weekly, etc. graph. Changing these requires destroying the current reporting database,
            so when these fields are changed, an additional `confirm_rrd_destroy: true` flag must be present.
          title: graph_age
          type: integer
        graph_points:
          description: |-
            `graph_age` specifies the maximum age of stored graphs in months. `graph_points` is the number of points for
            each hourly, daily, weekly, etc. graph. Changing these requires destroying the current reporting database,
            so when these fields are changed, an additional `confirm_rrd_destroy: true` flag must be present.
          title: graph_points
          type: integer
        confirm_rrd_destroy:
          title: confirm_rrd_destroy
          type: boolean
      title: reporting_entry
      type: object
    reporting_get_data_0:
      default: []
      items:
        $ref: '#/components/schemas/graph'
      title: graphs
      type: array
    reporting_get_data_1:
      additionalProperties: false
      default: {}
      properties:
        unit:
          description: |-
            For the time period of the graph either `unit` and `page` OR `start` and `end` should be
            used, not both.
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          title: unit
          type: string
        page:
          default: 0
          description: |-
            For the time period of the graph either `unit` and `page` OR `start` and `end` should be
            used, not both.
          title: page
          type: integer
        start:
          description: |-
            For the time period of the graph either `unit` and `page` OR `start` and `end` should be
            used, not both.
          title: start
          type: string
        end:
          description: |-
            For the time period of the graph either `unit` and `page` OR `start` and `end` should be
            used, not both.
          title: end
          type: string
        aggregate:
          default: true
          description: "`aggregate` will return aggregate available data for each\
            \ graph (e.g. min, max, mean)."
          title: aggregate
          type: boolean
      title: reporting_query
      type: object
    reporting_get_data:
      properties:
        graphs:
          default: []
          items:
            $ref: '#/components/schemas/graph'
          title: graphs
          type: array
        reporting_query:
          $ref: '#/components/schemas/reporting_get_data_1'
      type: object
    route_ipv4gw_reachable_0:
      title: ipv4_gateway
      type: string
    rsyncd_update_0:
      additionalProperties: false
      default: {}
      properties:
        port:
          title: port
          type: integer
        auxiliary:
          title: auxiliary
          type: string
      title: rsyncd_entry
      type: object
    rsyncmod_create_0:
      additionalProperties: false
      default: {}
      properties:
        enabled:
          default: true
          title: enabled
          type: boolean
        name:
          title: name
          type: string
        comment:
          title: comment
          type: string
        path:
          description: |-
            `path` represents the path to a dataset. Path length is limited to 1023 characters maximum as per the limit
            enforced by FreeBSD. It is possible that we reach this max length recursively while transferring data. In that
            case, the user must ensure the maximum path will not be too long or modify the recursed path to shorter
            than the limit.
          title: path
          type: string
        mode:
          enum:
          - RO
          - RW
          - WO
          title: mode
          type: string
        maxconn:
          description: |-
            `maxconn` is an integer value representing the maximum number of simultaneous connections. Zero represents
            unlimited.
          title: maxconn
          type: integer
        user:
          default: nobody
          title: user
          type: string
        group:
          default: nobody
          title: group
          type: string
        hostsallow:
          default: []
          description: |-
            `hostsallow` is a list of patterns to match hostname/ip address of a connecting client. If list is empty,
            all hosts are allowed.
          items:
            title: hostsallow
            type: string
          title: hostsallow
          type: array
        hostsdeny:
          default: []
          description: |-
            `hostsdeny` is a list of patterns to match hostname/ip address of a connecting client. If the pattern is
            matched, access is denied to the client. If no client should be denied, this should be left empty.
          items:
            title: hostdeny
            type: string
          title: hostsdeny
          type: array
        auxiliary:
          title: auxiliary
          type: string
      title: rsyncmod_create
      type: object
    rsyncmod_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    rsyncmod_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    rsyncmod_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/rsyncmod_get_instance_0'
        query-options:
          $ref: '#/components/schemas/rsyncmod_get_instance_1'
      type: object
    rsynctask_create_0:
      additionalProperties: false
      default: {}
      properties:
        path:
          description: See the comment in Rsyncmod about `path` length limits.
          title: path
          type: string
        user:
          description: |-
            In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used
            to connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.
          title: user
          type: string
        mode:
          default: MODULE
          description: |-
            `mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.
            `remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.
          enum:
          - MODULE
          - SSH
          title: mode
          type: string
        remotehost:
          description: |-
            `remotehost` is ip address or hostname of the remote system. If username differs on the remote host,
            "username@remote_host" format should be used.
            `remotehost` and `remoteport` are not used in this case.
          nullable: true
          title: remotehost
          type: string
        remoteport:
          description: '`remotehost` and `remoteport` are not used in this case.'
          nullable: true
          title: remoteport
          type: integer
        remotemodule:
          description: "`remotemodule` is the name of remote module, this attribute\
            \ should be specified when `mode` is set to MODULE."
          nullable: true
          title: remotemodule
          type: string
        ssh_credentials:
          description: |-
            In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used
            to connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.
          nullable: true
          title: ssh_credentials
          type: integer
        remotepath:
          description: '`remotepath` specifies the path on the remote system.'
          title: remotepath
          type: string
        validate_rpath:
          default: true
          description: '`validate_rpath` is a boolean which when sets validates the
            existence of the remote path.'
          title: validate_rpath
          type: boolean
        direction:
          default: PUSH
          description: '`direction` specifies if data should be PULLED or PUSHED from
            the remote system.'
          enum:
          - PULL
          - PUSH
          title: direction
          type: string
        desc:
          title: desc
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        recursive:
          title: recursive
          type: boolean
        times:
          title: times
          type: boolean
        compress:
          description: '`compress` when set reduces the size of the data which is
            to be transmitted.'
          title: compress
          type: boolean
        archive:
          description: |-
            `archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,
            and special files.
          title: archive
          type: boolean
        delete:
          description: '`delete` when set deletes files in the destination directory
            which do not exist in the source directory.'
          title: delete
          type: boolean
        quiet:
          title: quiet
          type: boolean
        preserveperm:
          description: '`preserveperm` when set preserves original file permissions.'
          title: preserveperm
          type: boolean
        preserveattr:
          title: preserveattr
          type: boolean
        delayupdates:
          title: delayupdates
          type: boolean
        extra:
          default: []
          items:
            title: extra
            type: string
          title: extra
          type: array
        enabled:
          default: true
          title: enabled
          type: boolean
      title: rsync_task_create
      type: object
    rsynctask_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    rsynctask_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    rsynctask_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/rsynctask_get_instance_0'
        query-options:
          $ref: '#/components/schemas/rsynctask_get_instance_1'
      type: object
    s3_update_0:
      additionalProperties: false
      default: {}
      properties:
        bindip:
          title: bindip
          type: string
        bindport:
          title: bindport
          type: integer
        console_bindport:
          title: console_bindport
          type: integer
        access_key:
          description: '`access_key` must only contain alphanumeric characters and
            should be between 5 and 20 characters.'
          title: access_key
          type: string
        secret_key:
          description: '`secret_key` must only contain alphanumeric characters and
            should be between 8 and 40 characters.'
          title: secret_key
          type: string
        browser:
          description: "`browser` when set, enables the web user interface for the\
            \ S3 Service."
          title: browser
          type: boolean
        tls_server_uri:
          nullable: true
          title: tls_server_uri
          type: string
        storage_path:
          title: storage_path
          type: string
        certificate:
          nullable: true
          title: certificate
          type: integer
      title: s3_entry
      type: object
    service_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    service_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    service_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/service_get_instance_0'
        query-options:
          $ref: '#/components/schemas/service_get_instance_1'
      type: object
    service_reload_0:
      title: service
      type: string
    service_reload_1:
      additionalProperties: false
      default: {}
      properties:
        ha_propagate:
          default: true
          title: ha_propagate
          type: boolean
        silent:
          default: true
          title: silent
          type: boolean
      title: service-control
      type: object
    service_reload:
      properties:
        service:
          title: service
          type: string
        service-control:
          $ref: '#/components/schemas/service_reload_1'
      type: object
    service_restart_0:
      title: service
      type: string
    service_restart_1:
      additionalProperties: false
      default: {}
      properties:
        ha_propagate:
          default: true
          title: ha_propagate
          type: boolean
        silent:
          default: true
          title: silent
          type: boolean
      title: service-control
      type: object
    service_restart:
      properties:
        service:
          title: service
          type: string
        service-control:
          $ref: '#/components/schemas/service_restart_1'
      type: object
    service_start_0:
      description: Start the service specified by `service`.
      title: service
      type: string
    service_start_1:
      additionalProperties: false
      default: {}
      properties:
        ha_propagate:
          default: true
          title: ha_propagate
          type: boolean
        silent:
          default: true
          title: silent
          type: boolean
      title: service-control
      type: object
    service_start:
      properties:
        service:
          description: Start the service specified by `service`.
          title: service
          type: string
        service-control:
          $ref: '#/components/schemas/service_start_1'
      type: object
    service_started_0:
      title: service
      type: string
    service_started_or_enabled_0:
      title: service
      type: string
    service_stop_0:
      title: service
      type: string
    service_stop_1:
      additionalProperties: false
      default: {}
      properties:
        ha_propagate:
          default: true
          title: ha_propagate
          type: boolean
        silent:
          default: true
          title: silent
          type: boolean
      title: service-control
      type: object
    service_stop:
      properties:
        service:
          title: service
          type: string
        service-control:
          $ref: '#/components/schemas/service_stop_1'
      type: object
    service_terminate_process_0:
      description: Terminate process by `pid`.
      title: pid
      type: integer
    service_terminate_process_1:
      default: 10
      title: timeout
      type: integer
    service_terminate_process:
      properties:
        pid:
          description: Terminate process by `pid`.
          title: pid
          type: integer
        timeout:
          default: 10
          title: timeout
          type: integer
      type: object
    sharing_nfs_create_0:
      additionalProperties: false
      default: {}
      properties:
        path:
          description: '`path` local path to be exported.'
          title: path
          type: string
        aliases:
          default: []
          description: "`aliases` IGNORED, for now."
          items:
            title: path
            type: string
          title: aliases
          type: array
        comment:
          default: ""
          title: comment
          type: string
        networks:
          default: []
          description: |-
            `networks` is a list of authorized networks that are allowed to access the share having format
            "network/mask" CIDR notation. If empty, all networks are allowed.
          items:
            title: network
            type: string
          title: networks
          type: array
        hosts:
          default: []
          items:
            title: host
            type: string
          title: hosts
          type: array
        ro:
          default: false
          title: ro
          type: boolean
        quiet:
          default: false
          title: quiet
          type: boolean
        maproot_user:
          nullable: true
          title: maproot_user
          type: string
        maproot_group:
          nullable: true
          title: maproot_group
          type: string
        mapall_user:
          nullable: true
          title: mapall_user
          type: string
        mapall_group:
          nullable: true
          title: mapall_group
          type: string
        security:
          default: []
          items:
            enum:
            - SYS
            - KRB5
            - KRB5I
            - KRB5P
            title: provider
            type: string
          title: security
          type: array
        enabled:
          default: true
          title: enabled
          type: boolean
      title: sharingnfs_create
      type: object
    sharing_nfs_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    sharing_nfs_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    sharing_nfs_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/sharing_nfs_get_instance_0'
        query-options:
          $ref: '#/components/schemas/sharing_nfs_get_instance_1'
      type: object
    sharing_smb_create_0:
      additionalProperties: false
      default: {}
      properties:
        purpose:
          default: DEFAULT_SHARE
          description: '`purpose` applies common configuration presets depending on
            intended purpose.'
          enum:
          - NO_PRESET
          - DEFAULT_CLUSTER_SHARE
          - DEFAULT_SHARE
          - TIMEMACHINE
          - ENHANCED_TIMEMACHINE
          - MULTI_PROTOCOL_NFS
          - PRIVATE_DATASETS
          - READ_ONLY
          - WORM_DROPBOX
          title: purpose
          type: string
        path:
          description: |-
            `path` path to export over the SMB protocol. If server is clustered, then this path will be
            relative to the `cluster_volname`.
          title: path
          type: string
        path_suffix:
          default: ""
          title: path_suffix
          type: string
        home:
          default: false
          title: home
          type: boolean
        name:
          title: name
          type: string
        comment:
          default: ""
          title: comment
          type: string
        ro:
          default: false
          description: "`ro` when enabled, prohibits write access to the share."
          title: ro
          type: boolean
        browsable:
          default: true
          title: browsable
          type: boolean
        timemachine:
          default: false
          description: "`timemachine` when set, enables Time Machine backups for this\
            \ share."
          title: timemachine
          type: boolean
        timemachine_quota:
          default: 0
          title: timemachine_quota
          type: integer
        recyclebin:
          default: false
          title: recyclebin
          type: boolean
        guestok:
          default: false
          description: "`guestok` when enabled, allows access to this share without\
            \ a password."
          title: guestok
          type: boolean
        abe:
          default: false
          title: abe
          type: boolean
        hostsallow:
          default: []
          description: |-
            `hostsallow` is a list of hostnames / IP addresses which have access to this share.
            `hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful
            of hostnames are to be only allowed access, `hostsdeny` can be passed "ALL" which means that it will deny
            access to ALL hostnames except for the ones which have been listed in `hostsallow`.
          items: {}
          title: hostsallow
          type: array
        hostsdeny:
          default: []
          description: |-
            `hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful
            of hostnames are to be only allowed access, `hostsdeny` can be passed "ALL" which means that it will deny
            access to ALL hostnames except for the ones which have been listed in `hostsallow`.
          items: {}
          title: hostsdeny
          type: array
        aapl_name_mangling:
          default: false
          title: aapl_name_mangling
          type: boolean
        acl:
          default: true
          description: '`acl` enables support for storing the SMB Security Descriptor
            as a Filesystem ACL.'
          title: acl
          type: boolean
        durablehandle:
          default: true
          title: durablehandle
          type: boolean
        shadowcopy:
          default: true
          description: '`shadowcopy` enables support for the volume shadow copy service.'
          title: shadowcopy
          type: boolean
        streams:
          default: true
          description: '`streams` enables support for storing alternate datastreams
            as filesystem extended attributes.'
          title: streams
          type: boolean
        fsrvp:
          default: false
          description: |-
            `fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create
            ZFS snapshots through RPC.
          title: fsrvp
          type: boolean
        auxsmbconf:
          default: ""
          title: auxsmbconf
          type: string
        enabled:
          default: true
          title: enabled
          type: boolean
        cluster_volname:
          default: ""
          description: |-
            `path` path to export over the SMB protocol. If server is clustered, then this path will be
            relative to the `cluster_volname`.
          title: cluster_volname
          type: string
        afp:
          default: false
          title: afp
          type: boolean
      title: sharingsmb_create
      type: object
    sharing_smb_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    sharing_smb_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    sharing_smb_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/sharing_smb_get_instance_0'
        query-options:
          $ref: '#/components/schemas/sharing_smb_get_instance_1'
      type: object
    sharing_webdav_create_0:
      additionalProperties: false
      default: {}
      properties:
        perm:
          default: true
          title: perm
          type: boolean
        ro:
          default: false
          description: '`ro` when enabled prohibits users from writing to this share.'
          title: ro
          type: boolean
        comment:
          title: comment
          type: string
        name:
          title: name
          type: string
        path:
          title: path
          type: string
        enabled:
          default: true
          title: enabled
          type: boolean
      title: webdav_share_create
      type: object
    sharing_webdav_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    sharing_webdav_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    sharing_webdav_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/sharing_webdav_get_instance_0'
        query-options:
          $ref: '#/components/schemas/sharing_webdav_get_instance_1'
      type: object
    smart_update_0:
      additionalProperties: false
      default: {}
      properties:
        interval:
          description: |-
            `interval` is an integer value in minutes which defines how often smartd activates to check if any tests
            are configured to run.
          title: interval
          type: integer
        powermode:
          enum:
          - NEVER
          - SLEEP
          - STANDBY
          - IDLE
          title: powermode
          type: string
        difference:
          title: difference
          type: integer
        informational:
          title: informational
          type: integer
        critical:
          title: critical
          type: integer
      title: smart_entry
      type: object
    smart_test_create_0:
      additionalProperties: false
      default: {}
      properties:
        schedule:
          $ref: '#/components/schemas/schedule_6'
        desc:
          title: desc
          type: string
        all_disks:
          default: false
          description: '`all_disks` when enabled sets the task to cover all disks
            in which case `disks` is not required.'
          title: all_disks
          type: boolean
        disks:
          default: []
          description: |-
            `disks` is a list of valid disks which should be monitored in this task.
            `all_disks` when enabled sets the task to cover all disks in which case `disks` is not required.
          items:
            title: disk
            type: string
          title: disks
          type: array
        type:
          description: '`type` is specified to represent the type of SMART test to
            be executed.'
          enum:
          - LONG
          - SHORT
          - CONVEYANCE
          - OFFLINE
          title: type
          type: string
      title: smart_task_create
      type: object
    smart_test_disk_choices_0:
      default: false
      title: full_disk
      type: boolean
    smart_test_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    smart_test_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    smart_test_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/smart_test_get_instance_0'
        query-options:
          $ref: '#/components/schemas/smart_test_get_instance_1'
      type: object
    smart_test_manual_test_0:
      default: []
      description: Run manual SMART tests for `disks`.
      items:
        $ref: '#/components/schemas/disk_run'
      title: disks
      type: array
    smart_test_query_for_disk_0:
      title: disk
      type: string
    smb_update_0:
      additionalProperties: false
      default: {}
      properties:
        netbiosname:
          description: |-
            `netbiosname` defaults to the original hostname of the system.
            `workgroup` specifies the NetBIOS workgroup to which the TrueNAS server belongs. This will be
            automatically set to the correct value during the process of joining an AD domain.
            NOTE: `workgroup` and `netbiosname` should have different values.
          title: netbiosname
          type: string
        netbiosname_b:
          title: netbiosname_b
          type: string
        netbiosalias:
          default: []
          description: |-
            `netbiosalias` a list of netbios aliases. If Server is joined to an AD domain, additional Kerberos
            Service Principal Names will be generated for these aliases.
          items:
            title: netbios_alias
            type: string
          title: netbiosalias
          type: array
        workgroup:
          description: |-
            `workgroup` specifies the NetBIOS workgroup to which the TrueNAS server belongs. This will be
            automatically set to the correct value during the process of joining an AD domain.
            NOTE: `workgroup` and `netbiosname` should have different values.
          title: workgroup
          type: string
        description:
          title: description
          type: string
        enable_smb1:
          description: '`enable_smb1` allows legacy SMB clients to connect to the
            server when enabled.'
          title: enable_smb1
          type: boolean
        unixcharset:
          title: unixcharset
          type: string
        loglevel:
          enum:
          - NONE
          - MINIMUM
          - NORMAL
          - FULL
          - DEBUG
          title: loglevel
          type: string
        syslog:
          title: syslog
          type: boolean
        aapl_extensions:
          description: |-
            `aapl_extensions` enables support for SMB2 protocol extensions for MacOS clients. This is not a
            requirement for MacOS support, but is currently a requirement for time machine support.
          title: aapl_extensions
          type: boolean
        localmaster:
          description: "`localmaster` when set, determines if the system participates\
            \ in a browser election."
          title: localmaster
          type: boolean
        guest:
          description: '`guest` attribute is specified to select the account to be
            used for guest access. It defaults to "nobody".'
          title: guest
          type: string
        admin_group:
          description: "The group specified as the SMB `admin_group` will be automatically\
            \ added as a foreign group member\nof S-1-5-32-544 (builtin\admins). This\
            \ will afford the group all privileges granted to a local admin.\nAny\
            \ SMB group may be selected (including AD groups)."
          nullable: true
          title: admin_group
          type: string
        filemask:
          title: filemask
          type: string
        dirmask:
          title: dirmask
          type: string
        ntlmv1_auth:
          description: |-
            `ntlmv1_auth` enables a legacy and insecure authentication method, which may be required for legacy or
            poorly-implemented SMB clients.
          title: ntlmv1_auth
          type: boolean
        multichannel:
          default: false
          title: multichannel
          type: boolean
        bindip:
          default: []
          items:
            title: ip
            type: string
          title: bindip
          type: array
        smb_options:
          title: smb_options
          type: string
      title: smb_update
      type: object
    smb_get_remote_acl_0:
      additionalProperties: false
      default: {}
      properties:
        server:
          description: '`server` IP Address or hostname of the remote server'
          title: server
          type: string
        share:
          description: '`share` Share name'
          title: share
          type: string
        path:
          default: \
          description: '`path` path on the remote SMB server. Use "" to separate path
            components'
          title: path
          type: string
        username:
          description: '`username` username to use for authentication'
          title: username
          type: string
        password:
          description: '`password` password to use for authentication'
          title: password
          type: string
        options:
          $ref: '#/components/schemas/options_3'
      title: get_remote_acl
      type: object
    smb_status_0:
      default: ALL
      description: '`info_level` type of information requests. Defaults to ALL.'
      enum:
      - AUTH_LOG
      - ALL
      - SESSIONS
      - SHARES
      - LOCKS
      - BYTERANGE
      - NOTIFICATIONS
      title: info_level
      type: string
    smb_status_1:
      default: []
      items: {}
      title: query-filters
      type: array
    smb_status_2:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: false
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    smb_status_3:
      additionalProperties: false
      default: {}
      description: |-
        `status_options` additional options to filter query results. Supported
        values are as follows: `verbose` gives more verbose status output
      properties:
        verbose:
          default: true
          description: |-
            `status_options` additional options to filter query results. Supported
            values are as follows: `verbose` gives more verbose status output
          title: verbose
          type: boolean
        fast:
          default: false
          title: fast
          type: boolean
        restrict_user:
          default: ""
          title: restrict_user
          type: string
        restrict_session:
          default: ""
          title: restrict_session
          type: string
      title: status_options
      type: object
    smb_status:
      properties:
        info_level:
          $ref: '#/components/schemas/smb_status_0'
        query-filters:
          default: []
          items: {}
          title: query-filters
          type: array
        query-options:
          $ref: '#/components/schemas/smb_status_2'
        status_options:
          $ref: '#/components/schemas/smb_status_3'
      type: object
    smb_sharesec_create_0:
      additionalProperties: false
      default: {}
      properties:
        share_name:
          description: '`share_name` - name of SMB share.'
          title: share_name
          type: string
        share_acl:
          default:
          - ae_who_sid: S-1-1-0
            ae_perm: FULL
            ae_type: ALLOWED
          description: '`share_acl` a list of ACL entries (dictionaries) with the
            following keys:'
          items:
            $ref: '#/components/schemas/aclentry'
          title: share_acl
          type: array
      title: smbsharesec_create
      type: object
    smb_sharesec_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    smb_sharesec_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    smb_sharesec_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/smb_sharesec_get_instance_0'
        query-options:
          $ref: '#/components/schemas/smb_sharesec_get_instance_1'
      type: object
    smb_sharesec_getacl_0:
      description: |-
        View the ACL information for `share_name`. The share ACL is distinct from filesystem
        ACLs which can be viewed by calling `filesystem.getacl`. `ae_who_name` will appear
        as `None` if the SMB service is stopped or if winbind is unable  to resolve the SID
        to a name.
      title: share_name
      type: string
    smb_sharesec_getacl_1:
      additionalProperties: false
      default: {}
      properties:
        resolve_sids:
          default: true
          title: resolve_sids
          type: boolean
      title: options
      type: object
    smb_sharesec_getacl:
      properties:
        share_name:
          description: |-
            View the ACL information for `share_name`. The share ACL is distinct from filesystem
            ACLs which can be viewed by calling `filesystem.getacl`. `ae_who_name` will appear
            as `None` if the SMB service is stopped or if winbind is unable  to resolve the SID
            to a name.
          title: share_name
          type: string
        options:
          $ref: '#/components/schemas/smb_sharesec_getacl_1'
      type: object
    snmp_update_0:
      additionalProperties: false
      default: {}
      properties:
        location:
          title: location
          type: string
        contact:
          title: contact
          type: string
        traps:
          title: traps
          type: boolean
        v3:
          description: '`v3` when set enables SNMP version 3.'
          title: v3
          type: boolean
        community:
          default: public
          title: community
          type: string
        v3_username:
          title: v3_username
          type: string
        v3_authtype:
          enum:
          - ""
          - MD5
          - SHA
          title: v3_authtype
          type: string
        v3_password:
          title: v3_password
          type: string
        v3_privproto:
          enum:
          - null
          - AES
          - DES
          nullable: true
          title: v3_privproto
          type: string
        v3_privpassphrase:
          nullable: true
          title: v3_privpassphrase
          type: string
        loglevel:
          title: loglevel
          type: integer
        options:
          title: options
          type: string
        zilstat:
          title: zilstat
          type: boolean
      title: snmp_entry
      type: object
    ssh_update_0:
      additionalProperties: false
      default: {}
      properties:
        bindiface:
          default: []
          description: If `bindiface` is empty it will listen for all available addresses.
          items:
            title: iface
            type: string
          title: bindiface
          type: array
        tcpport:
          title: tcpport
          type: integer
        rootlogin:
          title: rootlogin
          type: boolean
        adminlogin:
          title: adminlogin
          type: boolean
        passwordauth:
          title: passwordauth
          type: boolean
        kerberosauth:
          title: kerberosauth
          type: boolean
        tcpfwd:
          title: tcpfwd
          type: boolean
        compression:
          title: compression
          type: boolean
        sftp_log_level:
          enum:
          - ""
          - QUIET
          - FATAL
          - ERROR
          - INFO
          - VERBOSE
          - DEBUG
          - DEBUG2
          - DEBUG3
          title: sftp_log_level
          type: string
        sftp_log_facility:
          enum:
          - ""
          - DAEMON
          - USER
          - AUTH
          - LOCAL0
          - LOCAL1
          - LOCAL2
          - LOCAL3
          - LOCAL4
          - LOCAL5
          - LOCAL6
          - LOCAL7
          title: sftp_log_facility
          type: string
        weak_ciphers:
          default: []
          items:
            enum:
            - AES128-CBC
            - NONE
            title: cipher
            type: string
          title: weak_ciphers
          type: array
        options:
          title: options
          type: string
      title: ssh_entry
      type: object
    staticroute_create_0:
      additionalProperties: false
      default: {}
      properties:
        destination:
          description: Address families of `gateway` and `destination` should match
            when creating a static route.
          title: destination
          type: string
        gateway:
          description: Address families of `gateway` and `destination` should match
            when creating a static route.
          title: gateway
          type: string
        description:
          default: ""
          title: description
          type: string
      title: staticroute_entry
      type: object
    staticroute_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    staticroute_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    staticroute_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/staticroute_get_instance_0'
        query-options:
          $ref: '#/components/schemas/staticroute_get_instance_1'
      type: object
    stats_get_data_0:
      default: []
      items:
        $ref: '#/components/schemas/stats_data'
      title: stats_list
      type: array
    stats_get_data_1:
      additionalProperties: false
      default: {}
      properties:
        step:
          default: 10
          title: step
          type: integer
        start:
          default: now-1h
          title: start
          type: string
        end:
          default: now
          title: end
          type: string
      title: stats-filter
      type: object
    stats_get_data:
      properties:
        stats_list:
          default: []
          items:
            $ref: '#/components/schemas/stats_data'
          title: stats_list
          type: array
        stats-filter:
          $ref: '#/components/schemas/stats_get_data_1'
      type: object
    stats_get_dataset_info_0:
      title: source
      type: string
    stats_get_dataset_info_1:
      title: type
      type: string
    stats_get_dataset_info:
      properties:
        source:
          title: source
          type: string
        type:
          title: type
          type: string
      type: object
    support_update_0:
      additionalProperties: false
      default: {}
      properties:
        enabled:
          nullable: true
          title: enabled
          type: boolean
        name:
          title: name
          type: string
        title:
          title: title
          type: string
        email:
          title: email
          type: string
        phone:
          title: phone
          type: string
        secondary_name:
          title: secondary_name
          type: string
        secondary_title:
          title: secondary_title
          type: string
        secondary_email:
          title: secondary_email
          type: string
        secondary_phone:
          title: secondary_phone
          type: string
      title: support_entry
      type: object
    support_attach_ticket_0:
      additionalProperties: false
      default: {}
      properties:
        ticket:
          title: ticket
          type: integer
        filename:
          title: filename
          type: string
        token:
          title: token
          type: string
      title: attach_ticket
      type: object
    support_fetch_categories_0:
      default: ""
      title: token
      type: string
    support_new_ticket_0:
      additionalProperties: false
      default: {}
      properties:
        title:
          title: title
          type: string
        body:
          title: body
          type: string
        category:
          title: category
          type: string
        attach_debug:
          default: false
          title: attach_debug
          type: boolean
        token:
          title: token
          type: string
        type:
          enum:
          - BUG
          - FEATURE
          title: type
          type: string
        criticality:
          description: "For SCALE `criticality`, `environment`, `phone`, `name` and\
            \ `email` attributes are not required."
          title: criticality
          type: string
        environment:
          description: "For SCALE `criticality`, `environment`, `phone`, `name` and\
            \ `email` attributes are not required."
          title: environment
          type: string
        phone:
          description: "For SCALE `criticality`, `environment`, `phone`, `name` and\
            \ `email` attributes are not required."
          title: phone
          type: string
        name:
          description: "For SCALE `criticality`, `environment`, `phone`, `name` and\
            \ `email` attributes are not required."
          title: name
          type: string
        email:
          description: "For SCALE `criticality`, `environment`, `phone`, `name` and\
            \ `email` attributes are not required."
          title: email
          type: string
        cc:
          default: []
          items:
            title: email
            type: string
          title: cc
          type: array
      title: new_ticket
      type: object
    system_feature_enabled_0:
      enum:
      - DEDUP
      - FIBRECHANNEL
      - VM
      title: feature
      type: string
    system_license_update_0:
      title: license
      type: string
    system_reboot_0:
      additionalProperties: false
      default: {}
      properties:
        delay:
          title: delay
          type: integer
      title: system-reboot
      type: object
    system_shutdown_0:
      additionalProperties: false
      default: {}
      properties:
        delay:
          title: delay
          type: integer
      title: system-shutdown
      type: object
    system_advanced_update_0:
      additionalProperties: false
      default: {}
      properties:
        advancedmode:
          title: advancedmode
          type: boolean
        autotune:
          description: |-
            `autotune` when enabled executes autotune script which attempts to optimize the system based on the installed
            hardware.
          title: autotune
          type: boolean
        kdump_enabled:
          title: kdump_enabled
          type: boolean
        boot_scrub:
          title: boot_scrub
          type: integer
        consolemenu:
          description: |-
            `consolemenu` should be disabled if the menu at console is not desired. It will default to standard login
            in the console if disabled.
          title: consolemenu
          type: boolean
        consolemsg:
          description: |-
            `consolemsg` is a deprecated attribute and will be removed in further releases. Please, use `consolemsg`
            attribute in the `system.general` plugin.
          title: consolemsg
          type: boolean
        debugkernel:
          title: debugkernel
          type: boolean
        fqdn_syslog:
          title: fqdn_syslog
          type: boolean
        motd:
          title: motd
          type: string
        powerdaemon:
          title: powerdaemon
          type: boolean
        serialconsole:
          title: serialconsole
          type: boolean
        serialport:
          title: serialport
          type: string
        serialspeed:
          enum:
          - "9600"
          - "19200"
          - "38400"
          - "57600"
          - "115200"
          title: serialspeed
          type: string
        swapondrive:
          title: swapondrive
          type: integer
        overprovision:
          nullable: true
          title: overprovision
          type: integer
        traceback:
          title: traceback
          type: boolean
        uploadcrash:
          title: uploadcrash
          type: boolean
        anonstats:
          title: anonstats
          type: boolean
        sed_user:
          enum:
          - USER
          - MASTER
          title: sed_user
          type: string
        sysloglevel:
          description: "When `syslogserver` is defined, logs of `sysloglevel` or above\
            \ are sent."
          enum:
          - F_EMERG
          - F_ALERT
          - F_CRIT
          - F_ERR
          - F_WARNING
          - F_NOTICE
          - F_INFO
          - F_DEBUG
          title: sysloglevel
          type: string
        syslogserver:
          description: "When `syslogserver` is defined, logs of `sysloglevel` or above\
            \ are sent."
          title: syslogserver
          type: string
        syslog_transport:
          enum:
          - UDP
          - TCP
          - TLS
          title: syslog_transport
          type: string
        syslog_tls_certificate:
          nullable: true
          title: syslog_tls_certificate
          type: integer
        syslog_tls_certificate_authority:
          nullable: true
          title: syslog_tls_certificate_authority
          type: integer
        isolated_gpu_pci_ids:
          default: []
          items:
            title: pci_id
            type: string
          title: isolated_gpu_pci_ids
          type: array
        kernel_extra_options:
          title: kernel_extra_options
          type: string
        sed_passwd:
          title: sed_passwd
          type: string
      title: system_advanced_entry
      type: object
    system_advanced_update_gpu_pci_ids_0:
      default: []
      items:
        title: pci_id
        type: string
      title: isolated_gpu_pci_ids
      type: array
    system_general_update_0:
      additionalProperties: false
      default: {}
      properties:
        ui_httpsport:
          title: ui_httpsport
          type: integer
        ui_httpsredirect:
          description: |-
            `ui_httpsredirect` when set, makes sure that all HTTP requests are converted to HTTPS requests to better
            enhance security.
          title: ui_httpsredirect
          type: boolean
        ui_httpsprotocols:
          default: []
          items:
            enum:
            - TLSv1
            - TLSv1.1
            - TLSv1.2
            - TLSv1.3
            title: protocol
            type: string
          title: ui_httpsprotocols
          type: array
        ui_port:
          title: ui_port
          type: integer
        ui_address:
          default: []
          description: |-
            `ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will
            listen on.
          items:
            title: addr
            type: string
          title: ui_address
          type: array
        ui_v6address:
          default: []
          description: |-
            `ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will
            listen on.
          items:
            title: addr
            type: string
          title: ui_v6address
          type: array
        ui_allowlist:
          default: []
          description: |-
            `ui_allowlist` is a list of IP addresses and networks that are allow to use API and UI. If this list is empty,
            then all IP addresses are allowed to use API and UI.
          items:
            title: addr
            type: string
          title: ui_allowlist
          type: array
        ui_consolemsg:
          title: ui_consolemsg
          type: boolean
        ui_x_frame_options:
          enum:
          - SAMEORIGIN
          - DENY
          - ALLOW_ALL
          title: ui_x_frame_options
          type: string
        kbdmap:
          title: kbdmap
          type: string
        language:
          title: language
          type: string
        timezone:
          title: timezone
          type: string
        crash_reporting:
          nullable: true
          title: crash_reporting
          type: boolean
        usage_collection:
          nullable: true
          title: usage_collection
          type: boolean
        birthday:
          title: birthday
          type: string
        ds_auth:
          description: |-
            `ds_auth` controls whether configured Directory Service users that are granted with Privileges are allowed to
            log in to the Web UI or use TrueNAS API.
          title: ds_auth
          type: boolean
        ui_certificate:
          description: |-
            `ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate` is not configured on boot,
            it is automatically created by the system.
          nullable: true
          title: ui_certificate
          type: integer
        rollback_timeout:
          nullable: true
          title: rollback_timeout
          type: integer
        ui_restart_delay:
          description: |-
            HTTP connections will be aborted) or specify `ui_restart_delay` (in seconds) to automatically apply them after
            some small amount of time necessary you might need to receive the response for your settings update request.
          nullable: true
          title: ui_restart_delay
          type: integer
      title: system_general_entry
      type: object
    system_general_ui_restart_0:
      default: 3
      title: delay
      type: integer
    system_ntpserver_create_0:
      additionalProperties: false
      default: {}
      properties:
        address:
          description: '`address` specifies the hostname/IP address of the NTP server.'
          title: address
          type: string
        burst:
          default: false
          description: |-
            `burst` when enabled makes sure that if server is reachable, sends a burst of eight packets instead of one.
            This is designed to improve timekeeping quality with the server command.
          title: burst
          type: boolean
        iburst:
          default: true
          description: "`iburst` when enabled speeds up the initial synchronization,\
            \ taking seconds rather than minutes."
          title: iburst
          type: boolean
        prefer:
          default: false
          description: |-
            `prefer` marks the specified server as preferred. When all other things are equal, this host is chosen
            for synchronization acquisition with the server command. It is recommended that they be used for servers with
            time monitoring hardware.
          title: prefer
          type: boolean
        minpoll:
          default: 6
          description: |-
            `minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.
            `maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`.
          title: minpoll
          type: integer
        maxpoll:
          default: 10
          description: |-
            `minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.
            `maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`.
          title: maxpoll
          type: integer
        force:
          title: force
          type: boolean
      title: ntp_create
      type: object
    system_ntpserver_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    system_ntpserver_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    system_ntpserver_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/system_ntpserver_get_instance_0'
        query-options:
          $ref: '#/components/schemas/system_ntpserver_get_instance_1'
      type: object
    systemdataset_update_0:
      additionalProperties: false
      default: {}
      properties:
        pool:
          description: '`pool` is the name of a valid pool configured in the system
            which will be used to host the system dataset.'
          nullable: true
          title: pool
          type: string
        pool_exclude:
          nullable: true
          title: pool_exclude
          type: string
        syslog:
          title: syslog
          type: boolean
      title: sysdataset_update
      type: object
    systemdataset_pool_choices_0:
      default: true
      title: include_current_pool
      type: boolean
    tftp_update_0:
      additionalProperties: false
      default: {}
      properties:
        newfiles:
          description: '`newfiles` when set enables network devices to send files
            to the system.'
          title: newfiles
          type: boolean
        host:
          title: host
          type: string
        port:
          title: port
          type: integer
        options:
          title: options
          type: string
        umask:
          title: umask
          type: string
        username:
          title: username
          type: string
        directory:
          title: directory
          type: string
      title: tftp_entry
      type: object
    truecommand_update_0:
      additionalProperties: false
      default: {}
      properties:
        enabled:
          title: enabled
          type: boolean
        api_key:
          nullable: true
          title: api_key
          type: string
      title: truecommand_update
      type: object
    truenas_set_production_0:
      title: production
      type: boolean
    truenas_set_production_1:
      default: false
      title: attach_debug
      type: boolean
    truenas_set_production:
      properties:
        production:
          title: production
          type: boolean
        attach_debug:
          default: false
          title: attach_debug
          type: boolean
      type: object
    truenas_update_customer_information_0:
      additionalProperties: false
      default: {}
      properties:
        company:
          title: company
          type: string
        administrative_user:
          $ref: '#/components/schemas/administrative_user'
        technical_user:
          $ref: '#/components/schemas/technical_user'
        reseller:
          $ref: '#/components/schemas/reseller'
        physical_location:
          $ref: '#/components/schemas/physical_location'
        primary_use_case:
          title: primary_use_case
          type: string
        other_primary_use_case:
          title: other_primary_use_case
          type: string
      title: customer_information_update
      type: object
    tunable_create_0:
      additionalProperties: false
      default: {}
      properties:
        type:
          default: SYSCTL
          description: |-
            If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding
            value (e.g. `0`).
          enum:
          - SYSCTL
          - UDEV
          title: type
          type: string
        var:
          description: |-
            If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding
            value (e.g. `0`).
          title: var
          type: string
        value:
          description: |-
            If `type` is `SYSCTL` then `var` is a sysctl name (e.g. `kernel.watchdog`) and `value` is its corresponding
            value (e.g. `0`).
          title: value
          type: string
        comment:
          default: ""
          title: comment
          type: string
        enabled:
          default: true
          title: enabled
          type: boolean
      title: tunable_create
      type: object
    tunable_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    tunable_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    tunable_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/tunable_get_instance_0'
        query-options:
          $ref: '#/components/schemas/tunable_get_instance_1'
      type: object
    update_check_available_0:
      additionalProperties: false
      default: {}
      properties:
        train:
          title: train
          type: string
      title: update-check-available
      type: object
    update_file_0:
      additionalProperties: false
      default: {}
      properties:
        destination:
          nullable: true
          title: destination
          type: string
      title: updatefile
      type: object
    update_get_pending_0:
      nullable: true
      title: path
      type: string
    update_manual_0:
      title: path
      type: string
    update_manual_1:
      additionalProperties: false
      default: {}
      properties:
        cleanup:
          default: true
          title: cleanup
          type: boolean
      title: options
      type: object
    update_manual:
      properties:
        path:
          title: path
          type: string
        options:
          $ref: '#/components/schemas/update_manual_1'
      type: object
    update_set_auto_download_0:
      title: autocheck
      type: boolean
    update_set_train_0:
      title: train
      type: string
    update_update_0:
      additionalProperties: false
      default: {}
      properties:
        train:
          title: train
          type: string
        reboot:
          default: false
          title: reboot
          type: boolean
      title: update
      type: object
    ups_update_0:
      additionalProperties: false
      default: {}
      properties:
        powerdown:
          description: "`powerdown` when enabled, sets UPS to power off after shutting\
            \ down the system."
          title: powerdown
          type: boolean
        rmonitor:
          title: rmonitor
          type: boolean
        nocommwarntime:
          description: |-
            `nocommwarntime` is a value in seconds which makes UPS Service wait the specified seconds before alerting that
            the Service cannot reach configured UPS.
          nullable: true
          title: nocommwarntime
          type: integer
        remoteport:
          title: remoteport
          type: integer
        shutdowntimer:
          description: |-
            `shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before
            initiating a shutdown. This only applies when `shutdown` is set to "BATT".
          title: shutdowntimer
          type: integer
        hostsync:
          title: hostsync
          type: integer
        description:
          title: description
          type: string
        driver:
          title: driver
          type: string
        extrausers:
          title: extrausers
          type: string
        identifier:
          title: identifier
          type: string
        mode:
          enum:
          - MASTER
          - SLAVE
          title: mode
          type: string
        monpwd:
          title: monpwd
          type: string
        monuser:
          title: monuser
          type: string
        options:
          title: options
          type: string
        optionsupsd:
          title: optionsupsd
          type: string
        port:
          title: port
          type: string
        remotehost:
          title: remotehost
          type: string
        shutdown:
          description: |-
            `shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before
            initiating a shutdown. This only applies when `shutdown` is set to "BATT".
          enum:
          - LOWBATT
          - BATT
          title: shutdown
          type: string
        shutdowncmd:
          nullable: true
          title: shutdowncmd
          type: string
      title: ups_entry
      type: object
    user_create_0:
      additionalProperties: false
      default: {}
      properties:
        uid:
          description: If `uid` is not provided it is automatically filled with the
            next one available.
          title: uid
          type: integer
        username:
          title: username
          type: string
        group:
          description: '`group` is required if `group_create` is false.'
          title: group
          type: integer
        group_create:
          default: false
          description: '`group` is required if `group_create` is false.'
          title: group_create
          type: boolean
        home:
          default: /nonexistent
          title: home
          type: string
        home_mode:
          default: "700"
          title: home_mode
          type: string
        shell:
          default: /usr/bin/zsh
          description: Available choices for `shell` can be retrieved with `user.shell_choices`.
          title: shell
          type: string
        full_name:
          title: full_name
          type: string
        email:
          nullable: true
          title: email
          type: string
        password:
          description: '`password` is required if `password_disabled` is false.'
          title: password
          type: string
        password_disabled:
          default: false
          description: '`password` is required if `password_disabled` is false.'
          title: password_disabled
          type: boolean
        locked:
          default: false
          title: locked
          type: boolean
        smb:
          default: true
          title: smb
          type: boolean
        sudo_commands:
          default: []
          items:
            title: command
            type: string
          title: sudo_commands
          type: array
        sudo_commands_nopasswd:
          default: []
          items:
            title: command
            type: string
          title: sudo_commands_nopasswd
          type: array
        sshpubkey:
          nullable: true
          title: sshpubkey
          type: string
        groups:
          default: []
          items:
            title: group
            type: integer
          title: groups
          type: array
        attributes:
          additionalProperties: true
          default: {}
          description: '`attributes` is a general-purpose object for storing arbitrary
            user information.'
          properties: {}
          title: attributes
          type: object
      title: user_create
      type: object
    user_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    user_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    user_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/user_get_instance_0'
        query-options:
          $ref: '#/components/schemas/user_get_instance_1'
      type: object
    user_get_user_obj_0:
      additionalProperties: false
      default: {}
      properties:
        username:
          title: username
          type: string
        uid:
          title: uid
          type: integer
        get_groups:
          default: false
          title: get_groups
          type: boolean
      title: get_user_obj
      type: object
    user_shell_choices_0:
      nullable: true
      title: user_id
      type: integer
    vm_create_0:
      additionalProperties: false
      default: {}
      properties:
        command_line_args:
          default: ""
          title: command_line_args
          type: string
        cpu_mode:
          default: CUSTOM
          enum:
          - CUSTOM
          - HOST-MODEL
          - HOST-PASSTHROUGH
          title: cpu_mode
          type: string
        cpu_model:
          nullable: true
          title: cpu_model
          type: string
        name:
          title: name
          type: string
        description:
          title: description
          type: string
        vcpus:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          title: vcpus
          type: integer
        cores:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          title: cores
          type: integer
        threads:
          default: 1
          description: |-
            Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a
            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.
            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`
            specifies number of threads per core.
          title: threads
          type: integer
        cpuset:
          nullable: true
          title: cpuset
          type: string
        nodeset:
          nullable: true
          title: nodeset
          type: string
        pin_vcpus:
          default: false
          title: pin_vcpus
          type: boolean
        suspend_on_snapshot:
          default: false
          title: suspend_on_snapshot
          type: boolean
        memory:
          title: memory
          type: integer
        min_memory:
          nullable: true
          title: min_memory
          type: integer
        hyperv_enlightenments:
          default: false
          description: |-
            `hyperv_enlightenments` can be used to enable subset of predefined Hyper-V enlightenments for Windows guests.
            These enlightenments improve performance and enable otherwise missing features.
          title: hyperv_enlightenments
          type: boolean
        bootloader:
          default: UEFI
          enum:
          - UEFI
          - UEFI_CSM
          title: bootloader
          type: string
        bootloader_ovmf:
          default: OVMF_CODE.fd
          title: bootloader_ovmf
          type: string
        autostart:
          default: true
          title: autostart
          type: boolean
        hide_from_msr:
          default: false
          description: |-
            `hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and
            is useful to enable when doing GPU passthrough.
          title: hide_from_msr
          type: boolean
        ensure_display_device:
          default: true
          description: |-
            `ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.
            For headless installations like ubuntu server this is required for the guest to operate properly. However
            for cases where consumer would like to use GPU passthrough and does not want a display device added should set
            this to `false`.
          title: ensure_display_device
          type: boolean
        time:
          default: LOCAL
          enum:
          - LOCAL
          - UTC
          title: time
          type: string
        shutdown_timeout:
          default: 90
          description: |-
            `shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system
            shutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within
            `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.
          title: shutdown_timeout
          type: integer
        arch_type:
          description: |-
            `arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and
            system in this case will choose a reasonable default based on host.
            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
            configuration.
          nullable: true
          title: arch_type
          type: string
        machine_type:
          description: |-
            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.
            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`
            configuration.
          nullable: true
          title: machine_type
          type: string
        uuid:
          nullable: true
          title: uuid
          type: string
      title: vm_create
      type: object
    vm_get_available_memory_0:
      default: false
      description: |-
        In case of `overcommit` being `true`, calculations are done in the following manner:
        1. If a VM has requested 10G but is only consuming 5G, only 5G will be counted
        2. System will consider shrinkable ZFS ARC as free memory ( shrinkable ZFS ARC is current ZFS ARC
           minus ZFS ARC minimum )
        In case of `overcommit` being `false`, calculations are done in the following manner:
        1. Complete VM requested memory will be taken into account regardless of how much actual physical
           memory the VM is consuming
        2. System will not consider shrinkable ZFS ARC as free memory
      title: overcommit
      type: boolean
    vm_get_console_0:
      title: id
      type: integer
    vm_get_display_devices_0:
      title: id
      type: integer
    vm_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    vm_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    vm_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/vm_get_instance_0'
        query-options:
          $ref: '#/components/schemas/vm_get_instance_1'
      type: object
    vm_get_memory_usage_0:
      title: vm_id
      type: integer
    vm_get_vm_memory_info_0:
      description: Returns memory information for `vm_id` VM if it is going to be
        started.
      title: vm_id
      type: integer
    vm_log_file_path_0:
      description: Retrieve log file path of `id` VM.
      title: id
      type: integer
    vm_device_create_0:
      additionalProperties: false
      default: {}
      properties:
        dtype:
          description: |-
            If `dtype` is the `RAW` type and a new raw file is to be created, `attributes.exists` will be passed as false.
            This means the API handles creating the raw file and raises the appropriate exception if file creation fails.
          enum:
          - NIC
          - DISK
          - CDROM
          - PCI
          - DISPLAY
          - RAW
          - USB
          title: dtype
          type: string
        vm:
          description: Create a new device for the VM of id `vm`.
          title: vm
          type: integer
        attributes:
          additionalProperties: true
          properties: {}
          title: attributes
          type: object
        order:
          nullable: true
          title: order
          type: integer
      title: vmdevice_create
      type: object
    vm_device_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    vm_device_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    vm_device_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/vm_device_get_instance_0'
        query-options:
          $ref: '#/components/schemas/vm_device_get_instance_1'
      type: object
    vm_device_passthrough_device_0:
      title: device
      type: string
    vm_device_usb_passthrough_device_0:
      title: device
      type: string
    vmware_create_0:
      additionalProperties: false
      default: {}
      properties:
        datastore:
          title: datastore
          type: string
        filesystem:
          title: filesystem
          type: string
        hostname:
          description: |-
            `hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for
            the cluster.
          title: hostname
          type: string
        password:
          description: '`username` and `password` are the credentials used to authorize
            access to the VMWare host.'
          title: password
          type: string
        username:
          description: '`username` and `password` are the credentials used to authorize
            access to the VMWare host.'
          title: username
          type: string
      title: vmware_create
      type: object
    vmware_dataset_has_vms_0:
      title: dataset
      type: string
    vmware_dataset_has_vms_1:
      title: recursive
      type: boolean
    vmware_dataset_has_vms:
      properties:
        dataset:
          title: dataset
          type: string
        recursive:
          title: recursive
          type: boolean
      type: object
    vmware_get_datastores_0:
      additionalProperties: false
      default: {}
      properties:
        hostname:
          title: hostname
          type: string
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      title: vmware-creds
      type: object
    vmware_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    vmware_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    vmware_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/vmware_get_instance_0'
        query-options:
          $ref: '#/components/schemas/vmware_get_instance_1'
      type: object
    vmware_get_virtual_machines_0:
      title: pk
      type: integer
    vmware_match_datastores_with_datasets_0:
      additionalProperties: false
      default: {}
      properties:
        hostname:
          title: hostname
          type: string
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      title: vmware-creds
      type: object
    webdav_update_0:
      additionalProperties: false
      default: {}
      properties:
        protocol:
          description: |-
            `protocol` specifies which protocol should be used for connecting to Webdav Serivce. Value of "HTTPHTTPS"
            allows both HTTP and HTTPS connections to the share.
          enum:
          - HTTP
          - HTTPS
          - HTTPHTTPS
          title: protocol
          type: string
        tcpport:
          title: tcpport
          type: integer
        tcpportssl:
          title: tcpportssl
          type: integer
        password:
          title: password
          type: string
        htauth:
          enum:
          - NONE
          - BASIC
          - DIGEST
          title: htauth
          type: string
        certssl:
          description: |-
            `certssl` is a valid id of a certificate configured in the system. This is required if HTTPS connection is
            desired with Webdave Service.
          nullable: true
          title: certssl
          type: integer
      title: webdav_entry
      type: object
    webui_image_create_0:
      additionalProperties: false
      default: {}
      properties:
        identifier:
          title: identifier
          type: string
      title: options
      type: object
    webui_image_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    webui_image_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    webui_image_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/webui_image_get_instance_0'
        query-options:
          $ref: '#/components/schemas/webui_image_get_instance_1'
      type: object
    zfs_snapshot_create_0:
      additionalProperties: false
      default: {}
      properties:
        dataset:
          title: dataset
          type: string
        name:
          title: name
          type: string
        naming_schema:
          title: naming_schema
          type: string
        recursive:
          default: false
          title: recursive
          type: boolean
        exclude:
          default: []
          items:
            title: dataset
            type: string
          title: exclude
          type: array
        suspend_vms:
          default: false
          title: suspend_vms
          type: boolean
        vmware_sync:
          default: false
          title: vmware_sync
          type: boolean
        properties:
          additionalProperties: true
          default: {}
          properties: {}
          title: properties
          type: object
      title: snapshot_create
      type: object
    zfs_snapshot_clone_0:
      additionalProperties: false
      default: {}
      properties:
        snapshot:
          title: snapshot
          type: string
        dataset_dst:
          title: dataset_dst
          type: string
        dataset_properties:
          additionalProperties: true
          default: {}
          properties: {}
          title: dataset_properties
          type: object
      title: snapshot_clone
      type: object
    zfs_snapshot_get_instance_0:
      anyOf:
      - type: string
      - type: integer
      description: "Returns instance matching `id`. If `id` is not found, Validation\
        \ error is raised."
      nullable: false
      title: id
    zfs_snapshot_get_instance_1:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: true
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    zfs_snapshot_get_instance:
      properties:
        id:
          $ref: '#/components/schemas/zfs_snapshot_get_instance_0'
        query-options:
          $ref: '#/components/schemas/zfs_snapshot_get_instance_1'
      type: object
    zfs_snapshot_hold_0:
      description: Holds snapshot `id`.
      title: id
      type: string
    zfs_snapshot_hold_1:
      additionalProperties: false
      default: {}
      properties:
        recursive:
          default: false
          title: recursive
          type: boolean
      title: options
      type: object
    zfs_snapshot_hold:
      properties:
        id:
          description: Holds snapshot `id`.
          title: id
          type: string
        options:
          $ref: '#/components/schemas/zfs_snapshot_hold_1'
      type: object
    zfs_snapshot_release_0:
      description: Release held snapshot `id`.
      title: id
      type: string
    zfs_snapshot_release_1:
      additionalProperties: false
      default: {}
      properties:
        recursive:
          default: false
          title: recursive
          type: boolean
      title: options
      type: object
    zfs_snapshot_release:
      properties:
        id:
          description: Release held snapshot `id`.
          title: id
          type: string
        options:
          $ref: '#/components/schemas/zfs_snapshot_release_1'
      type: object
    zfs_snapshot_remove_0:
      additionalProperties: false
      default: {}
      properties:
        dataset:
          title: dataset
          type: string
        name:
          title: name
          type: string
        defer_delete:
          title: defer_delete
          type: boolean
      title: snapshot_remove
      type: object
    zfs_snapshot_rollback_0:
      description: Rollback to a given snapshot `id`.
      title: id
      type: string
    zfs_snapshot_rollback_1:
      additionalProperties: false
      default: {}
      properties:
        recursive:
          default: false
          description: '`options.recursive_clones` is just like `recursive` but will
            also destroy any clones.'
          title: recursive
          type: boolean
        recursive_clones:
          default: false
          title: recursive_clones
          type: boolean
        force:
          default: false
          title: force
          type: boolean
        recursive_rollback:
          default: false
          title: recursive_rollback
          type: boolean
      title: options
      type: object
    zfs_snapshot_rollback:
      properties:
        id:
          description: Rollback to a given snapshot `id`.
          title: id
          type: string
        options:
          $ref: '#/components/schemas/zfs_snapshot_rollback_1'
      type: object
    allowlist_item:
      additionalProperties: false
      default: {}
      properties:
        method:
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - CALL
          - SUBSCRIBE
          - '*'
          title: method
          type: string
        resource:
          title: resource
          type: string
      title: allowlist_item
      type: object
    services:
      additionalProperties: false
      default: {}
      properties:
        ssh:
          default: false
          title: ssh
          type: boolean
      title: services
      type: object
    BasicConstraints:
      additionalProperties: false
      default: {}
      properties:
        ca:
          default: false
          title: ca
          type: boolean
        enabled:
          default: false
          title: enabled
          type: boolean
        path_length:
          nullable: true
          title: path_length
          type: integer
        extension_critical:
          default: false
          title: extension_critical
          type: boolean
      title: BasicConstraints
      type: object
    AuthorityKeyIdentifier:
      additionalProperties: false
      default: {}
      properties:
        authority_cert_issuer:
          default: false
          title: authority_cert_issuer
          type: boolean
        enabled:
          default: false
          title: enabled
          type: boolean
        extension_critical:
          default: false
          title: extension_critical
          type: boolean
      title: AuthorityKeyIdentifier
      type: object
    ExtendedKeyUsage:
      additionalProperties: false
      default: {}
      properties:
        usages:
          default: []
          items:
            enum:
            - ANY_EXTENDED_KEY_USAGE
            - CLIENT_AUTH
            - CODE_SIGNING
            - EMAIL_PROTECTION
            - OCSP_SIGNING
            - SERVER_AUTH
            - TIME_STAMPING
            title: usage
            type: string
          title: usages
          type: array
        enabled:
          default: false
          title: enabled
          type: boolean
        extension_critical:
          default: false
          title: extension_critical
          type: boolean
      title: ExtendedKeyUsage
      type: object
    KeyUsage:
      additionalProperties: false
      default: {}
      properties:
        enabled:
          default: false
          title: enabled
          type: boolean
        digital_signature:
          default: false
          title: digital_signature
          type: boolean
        content_commitment:
          default: false
          title: content_commitment
          type: boolean
        key_encipherment:
          default: false
          title: key_encipherment
          type: boolean
        data_encipherment:
          default: false
          title: data_encipherment
          type: boolean
        key_agreement:
          default: false
          title: key_agreement
          type: boolean
        key_cert_sign:
          default: false
          title: key_cert_sign
          type: boolean
        crl_sign:
          default: false
          title: crl_sign
          type: boolean
        encipher_only:
          default: false
          title: encipher_only
          type: boolean
        decipher_only:
          default: false
          title: decipher_only
          type: boolean
        extension_critical:
          default: false
          title: extension_critical
          type: boolean
      title: KeyUsage
      type: object
    cert_extensions:
      additionalProperties: false
      default: {}
      description: '`cert_extensions` can be specified to set X509v3 extensions.'
      properties:
        BasicConstraints:
          $ref: '#/components/schemas/BasicConstraints'
        AuthorityKeyIdentifier:
          $ref: '#/components/schemas/AuthorityKeyIdentifier'
        ExtendedKeyUsage:
          $ref: '#/components/schemas/ExtendedKeyUsage'
        KeyUsage:
          $ref: '#/components/schemas/KeyUsage'
      title: cert_extensions
      type: object
    BasicConstraints_1:
      additionalProperties: false
      default: {}
      properties:
        ca:
          default: true
          title: ca
          type: boolean
        enabled:
          default: true
          title: enabled
          type: boolean
        path_length:
          nullable: true
          title: path_length
          type: integer
        extension_critical:
          default: true
          title: extension_critical
          type: boolean
      title: BasicConstraints
      type: object
    ExtendedKeyUsage_1:
      additionalProperties: false
      default: {}
      properties:
        usages:
          default:
          - SERVER_AUTH
          items:
            enum:
            - ANY_EXTENDED_KEY_USAGE
            - CLIENT_AUTH
            - CODE_SIGNING
            - EMAIL_PROTECTION
            - OCSP_SIGNING
            - SERVER_AUTH
            - TIME_STAMPING
            title: usage
            type: string
          title: usages
          type: array
        enabled:
          default: true
          title: enabled
          type: boolean
        extension_critical:
          default: false
          title: extension_critical
          type: boolean
      title: ExtendedKeyUsage
      type: object
    KeyUsage_1:
      additionalProperties: false
      default: {}
      properties:
        enabled:
          default: true
          title: enabled
          type: boolean
        digital_signature:
          default: false
          title: digital_signature
          type: boolean
        content_commitment:
          default: false
          title: content_commitment
          type: boolean
        key_encipherment:
          default: false
          title: key_encipherment
          type: boolean
        data_encipherment:
          default: false
          title: data_encipherment
          type: boolean
        key_agreement:
          default: false
          title: key_agreement
          type: boolean
        key_cert_sign:
          default: true
          title: key_cert_sign
          type: boolean
        crl_sign:
          default: true
          title: crl_sign
          type: boolean
        encipher_only:
          default: false
          title: encipher_only
          type: boolean
        decipher_only:
          default: false
          title: decipher_only
          type: boolean
        extension_critical:
          default: true
          title: extension_critical
          type: boolean
      title: KeyUsage
      type: object
    cert_extensions_1:
      additionalProperties: false
      default: {}
      description: '`cert_extensions` can be specified to set X509v3 extensions.'
      properties:
        BasicConstraints:
          $ref: '#/components/schemas/BasicConstraints_1'
        AuthorityKeyIdentifier:
          $ref: '#/components/schemas/AuthorityKeyIdentifier'
        ExtendedKeyUsage:
          $ref: '#/components/schemas/ExtendedKeyUsage_1'
        KeyUsage:
          $ref: '#/components/schemas/KeyUsage_1'
      title: cert_extensions
      type: object
    cert_extensions_2:
      additionalProperties: false
      default: {}
      description: '`cert_extensions` can be specified if specific extensions are
        to be set in the newly signed certificate.'
      properties:
        BasicConstraints:
          $ref: '#/components/schemas/BasicConstraints'
        AuthorityKeyIdentifier:
          $ref: '#/components/schemas/AuthorityKeyIdentifier'
        ExtendedKeyUsage:
          $ref: '#/components/schemas/ExtendedKeyUsage'
        KeyUsage:
          $ref: '#/components/schemas/KeyUsage'
      title: cert_extensions
      type: object
    scale_workload:
      additionalProperties: false
      default: {}
      properties:
        replica_count:
          title: replica_count
          type: integer
        type:
          enum:
          - DEPLOYMENT
          - STATEFULSET
          title: type
          type: string
        name:
          title: name
          type: string
      title: scale_workload
      type: object
    schedule:
      additionalProperties: false
      default: {}
      properties:
        minute:
          default: "00"
          title: minute
          type: string
        hour:
          default: '*'
          title: hour
          type: string
        dom:
          default: '*'
          title: dom
          type: string
        month:
          default: '*'
          title: month
          type: string
        dow:
          default: '*'
          title: dow
          type: string
      title: schedule
      type: object
    cloud_sync_bwlimit:
      additionalProperties: false
      default: {}
      properties:
        time:
          title: time
          type: string
        bandwidth:
          title: bandwidth
      title: cloud_sync_bwlimit
      type: object
    docker_authentication:
      additionalProperties: false
      properties:
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      title: docker_authentication
      type: object
    disk_resize_0_inner:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        size:
          title: size
          type: integer
      type: object
    pool_keys:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        passphrase:
          title: passphrase
          type: string
      title: pool_keys
      type: object
    dataset_keys:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        passphrase:
          title: passphrase
          type: string
      title: dataset_keys
      type: object
    options:
      additionalProperties: false
      default: {}
      properties:
        recursive:
          default: false
          title: recursive
          type: boolean
        traverse:
          default: false
          title: traverse
          type: boolean
      title: options
      type: object
    dosmode:
      additionalProperties: false
      default: {}
      properties:
        readonly:
          title: readonly
          type: boolean
        hidden:
          title: hidden
          type: boolean
        system:
          title: system
          type: boolean
        archive:
          title: archive
          type: boolean
        reparse:
          title: reparse
          type: boolean
        offline:
          title: offline
          type: boolean
        sparse:
          title: sparse
          type: boolean
      title: dosmode
      type: object
    filesystem_setacl_0_dacl:
      anyOf:
      - default: []
        title: nfs4_acl
        type: array
      - default: []
        title: posix1e_acl
        type: array
      description: |-
        `dacl` ACL entries. Formatting depends on the underlying `acltype`. NFS4ACL requires
        NFSv4 entries. POSIX1e requires POSIX1e entries.
      nullable: false
    nfs41_flags:
      additionalProperties: false
      default: {}
      properties:
        autoinherit:
          default: false
          title: autoinherit
          type: boolean
        protected:
          default: false
          title: protected
          type: boolean
      title: nfs41_flags
      type: object
    options_1:
      additionalProperties: false
      default: {}
      properties:
        stripacl:
          default: false
          title: stripacl
          type: boolean
        recursive:
          default: false
          title: recursive
          type: boolean
        traverse:
          default: false
          title: traverse
          type: boolean
        canonicalize:
          default: true
          title: canonicalize
          type: boolean
      title: options
      type: object
    options_2:
      additionalProperties: false
      default: {}
      description: |-
        If `mode` is specified then the mode will be applied to the
        path and files and subdirectories depending on which `options` are
        selected. Mode should be formatted as string representation of octal
        permissions bits.
      properties:
        stripacl:
          default: false
          title: stripacl
          type: boolean
        recursive:
          default: false
          title: recursive
          type: boolean
        traverse:
          default: false
          title: traverse
          type: boolean
      title: options
      type: object
    filesystem_acltemplate_create_0_acl:
      anyOf:
      - default: []
        title: nfs4_acl
        type: array
      - default: []
        title: posix1e_acl
        type: array
      nullable: false
    query_options:
      additionalProperties: false
      default: {}
      properties:
        relationships:
          default: true
          title: relationships
          type: boolean
        extend:
          nullable: true
          title: extend
          type: string
        extend_context:
          nullable: true
          title: extend_context
          type: string
        prefix:
          nullable: true
          title: prefix
          type: string
        extra:
          additionalProperties: true
          default: {}
          properties: {}
          title: extra
          type: object
        order_by:
          default: []
          items: {}
          title: order_by
          type: array
        select:
          default: []
          items: {}
          title: select
          type: array
        count:
          default: false
          title: count
          type: boolean
        get:
          default: false
          title: get
          type: boolean
        offset:
          default: 0
          title: offset
          type: integer
        limit:
          default: 0
          title: limit
          type: integer
        force_sql_filters:
          default: false
          title: force_sql_filters
          type: boolean
      title: query-options
      type: object
    format_options:
      additionalProperties: false
      default: {}
      properties:
        canonicalize:
          default: false
          title: canonicalize
          type: boolean
        ensure_builtins:
          default: false
          title: ensure_builtins
          type: boolean
        resolve_names:
          default: false
          title: resolve_names
          type: boolean
      title: format-options
      type: object
    brick:
      additionalProperties: false
      default: {}
      properties:
        peer_name:
          title: peer_name
          type: string
        peer_path:
          title: peer_path
          type: string
      title: brick
      type: object
    idmap_ad_options:
      additionalProperties: false
      default: {}
      properties:
        schema_mode:
          default: SFU
          enum:
          - SFU
          - SFU20
          - RFC2307
          title: nss_info_ad
          type: string
        unix_primary_group:
          default: false
          title: unix_primary_group
          type: boolean
        unix_nss_info:
          default: false
          title: unix_nss_info
          type: boolean
      title: idmap_ad_options
      type: object
    idmap_autorid_options:
      additionalProperties: false
      default: {}
      properties:
        rangesize:
          default: 100000
          title: rangesize
          type: integer
        readonly:
          default: false
          title: readonly
          type: boolean
        ignore_builtin:
          default: false
          title: ignore_builtin
          type: boolean
      title: idmap_autorid_options
      type: object
    idmap_ldap_options:
      additionalProperties: false
      default: {}
      properties:
        ldap_base_dn:
          title: ldap_base_dn
          type: string
        ldap_user_dn:
          title: ldap_user_dn
          type: string
        ldap_user_dn_password:
          title: ldap_user_dn_password
          type: string
        ldap_url:
          title: ldap_url
          type: string
        readonly:
          default: false
          title: readonly
          type: boolean
        ssl:
          default: "ON"
          enum:
          - "OFF"
          - "ON"
          - START_TLS
          title: ldap_ssl_choice
          type: string
        validate_certificates:
          default: true
          title: validate_certificates
          type: boolean
      title: idmap_ldap_options
      type: object
    idmap_nss_options:
      additionalProperties: false
      default: {}
      properties:
        linked_service:
          default: LOCAL_ACCOUNT
          enum:
          - LOCAL_ACCOUNT
          - LDAP
          title: linked_service
          type: string
      title: idmap_nss_options
      type: object
    idmap_rfc2307_options:
      additionalProperties: false
      default: {}
      properties:
        ldap_server:
          enum:
          - AD
          - STANDALONE
          title: ldap_server
          type: string
        ldap_realm:
          default: false
          title: ldap_realm
          type: boolean
        bind_path_user:
          title: bind_path_user
          type: string
        bind_path_group:
          title: bind_path_group
          type: string
        user_cn:
          default: false
          title: user_cn
          type: boolean
        cn_realm:
          title: cn_realm
          type: string
        ldap_domain:
          title: ldap_domain
          type: string
        ldap_url:
          title: ldap_url
          type: string
        ldap_user_dn:
          title: ldap_user_dn
          type: string
        ldap_user_dn_password:
          title: ldap_user_dn_password
          type: string
        ssl:
          default: "ON"
          enum:
          - "OFF"
          - "ON"
          - START_TLS
          title: ldap_ssl_choice
          type: string
        validate_certificates:
          default: true
          title: validate_certificates
          type: boolean
      title: idmap_rfc2307_options
      type: object
    idmap_rid_options:
      additionalProperties: false
      default: {}
      properties:
        sssd_compat:
          default: false
          title: sssd_compat
          type: boolean
      title: idmap_rid_options
      type: object
    idmap_create_0_options:
      anyOf:
      - $ref: '#/components/schemas/idmap_ad_options'
      - $ref: '#/components/schemas/idmap_autorid_options'
      - $ref: '#/components/schemas/idmap_ldap_options'
      - $ref: '#/components/schemas/idmap_nss_options'
      - $ref: '#/components/schemas/idmap_rfc2307_options'
      - $ref: '#/components/schemas/idmap_rid_options'
      description: '`options` are additional parameters that are backend-dependent:'
      nullable: false
    interface_alias:
      additionalProperties: false
      default: {}
      properties:
        type:
          default: INET
          enum:
          - INET
          - INET6
          title: type
          type: string
        address:
          title: address
          type: string
        netmask:
          title: netmask
          type: integer
      title: interface_alias
      type: object
    interface_failover_alias:
      additionalProperties: false
      default: {}
      properties:
        type:
          default: INET
          enum:
          - INET
          - INET6
          title: type
          type: string
        address:
          title: address
          type: string
      title: interface_failover_alias
      type: object
    interface_virtual_alias:
      additionalProperties: false
      default: {}
      properties:
        type:
          default: INET
          enum:
          - INET
          - INET6
          title: type
          type: string
        address:
          title: address
          type: string
      title: interface_virtual_alias
      type: object
    listen:
      additionalProperties: false
      default: {}
      properties:
        ip:
          title: ip
          type: string
      title: listen
      type: object
    group:
      additionalProperties: false
      default: {}
      properties:
        portal:
          title: portal
          type: integer
        initiator:
          default: null
          title: initiator
        authmethod:
          default: NONE
          enum:
          - NONE
          - CHAP
          - CHAP_MUTUAL
          title: authmethod
          type: string
        auth:
          default: null
          title: auth
      title: group
      type: object
    private_key:
      additionalProperties: false
      default: {}
      properties:
        generate_key:
          default: true
          title: generate_key
          type: boolean
        existing_key_id:
          title: existing_key_id
          type: integer
        name:
          title: name
          type: string
      title: private_key
      type: object
    keychain_remote_ssh_semiautomatic_setup:
      additionalProperties: false
      properties:
        url:
          title: url
          type: string
        token:
          title: token
          type: string
        admin_username:
          default: root
          title: admin_username
          type: string
        password:
          title: password
          type: string
        otp_token:
          title: otp_token
          type: string
        username:
          default: root
          title: username
          type: string
        cipher:
          default: STANDARD
          enum:
          - STANDARD
          - FAST
          - DISABLED
          title: cipher
          type: string
        connect_timeout:
          default: 10
          title: connect_timeout
          type: integer
        sudo:
          default: false
          title: sudo
          type: boolean
      title: keychain_remote_ssh_semiautomatic_setup
      type: object
    migration_options:
      additionalProperties: false
      default: {}
      properties:
        passphrase:
          title: passphrase
          type: string
      title: migration_options
      type: object
    oauth:
      additionalProperties: false
      default: {}
      properties:
        client_id:
          title: client_id
          type: string
        client_secret:
          title: client_secret
          type: string
        refresh_token:
          title: refresh_token
          type: string
      title: oauth
      type: object
    service_announcement:
      additionalProperties: false
      default: {}
      properties:
        netbios:
          title: netbios
          type: boolean
        mdns:
          title: mdns
          type: boolean
        wsd:
          title: wsd
          type: boolean
      title: service_announcement
      type: object
    activity:
      additionalProperties: false
      default: {}
      properties:
        type:
          enum:
          - ALLOW
          - DENY
          title: type
          type: string
        activities:
          default: []
          items:
            title: activity
            type: string
          title: activities
          type: array
      title: activity
      type: object
    encryption_options:
      additionalProperties: false
      default: {}
      description: |-
        `encryption_options` specifies configuration for encryption of root dataset for `name` pool.
        `encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase
        as a key.
        Otherwise a hex encoded key can be specified by providing `encryption_options.key`.
        `encryption_options.generate_key` when enabled automatically generates the key to be used
        for dataset encryption.
      properties:
        generate_key:
          default: false
          title: generate_key
          type: boolean
        pbkdf2iters:
          default: 350000
          title: pbkdf2iters
          type: integer
        algorithm:
          default: AES-256-GCM
          enum:
          - AES-128-CCM
          - AES-192-CCM
          - AES-256-CCM
          - AES-128-GCM
          - AES-192-GCM
          - AES-256-GCM
          title: algorithm
          type: string
        passphrase:
          nullable: true
          title: passphrase
          type: string
        key:
          nullable: true
          title: key
          type: string
      title: encryption_options
      type: object
    datavdevs:
      additionalProperties: false
      default: {}
      properties:
        type:
          enum:
          - RAIDZ1
          - RAIDZ2
          - RAIDZ3
          - MIRROR
          - STRIPE
          title: type
          type: string
        disks:
          default: []
          title: disks
          type: array
      title: datavdevs
      type: object
    specialvdevs:
      additionalProperties: false
      default: {}
      properties:
        type:
          enum:
          - MIRROR
          - STRIPE
          title: type
          type: string
        disks:
          default: []
          title: disks
          type: array
      title: specialvdevs
      type: object
    dedupvdevs:
      additionalProperties: false
      default: {}
      properties:
        type:
          enum:
          - MIRROR
          - STRIPE
          title: type
          type: string
        disks:
          default: []
          title: disks
          type: array
      title: dedupvdevs
      type: object
    cachevdevs:
      additionalProperties: false
      default: {}
      properties:
        type:
          enum:
          - STRIPE
          title: type
          type: string
        disks:
          default: []
          title: disks
          type: array
      title: cachevdevs
      type: object
    logvdevs:
      additionalProperties: false
      default: {}
      properties:
        type:
          enum:
          - STRIPE
          - MIRROR
          title: type
          type: string
        disks:
          default: []
          title: disks
          type: array
      title: logvdevs
      type: object
    topology:
      additionalProperties: false
      default: {}
      description: |-
        `topology` is a object which requires at least one `data` entry.
        All of `data` entries (vdevs) require to be of the same type.
        Example of `topology`:
      properties:
        data:
          default: []
          items:
            $ref: '#/components/schemas/datavdevs'
          title: data
          type: array
        special:
          default: []
          items:
            $ref: '#/components/schemas/specialvdevs'
          title: special
          type: array
        dedup:
          default: []
          items:
            $ref: '#/components/schemas/dedupvdevs'
          title: dedup
          type: array
        cache:
          default: []
          items:
            $ref: '#/components/schemas/cachevdevs'
          title: cache
          type: array
        log:
          default: []
          items:
            $ref: '#/components/schemas/logvdevs'
          title: log
          type: array
        spares:
          default: []
          items:
            title: disk
            type: string
          title: spares
          type: array
      title: topology
      type: object
    comments:
      anyOf:
      - type: string
      - enum:
        - INHERIT
        type: string
      nullable: false
      title: comments
    managedby:
      anyOf:
      - type: string
      - enum:
        - INHERIT
        type: string
      nullable: false
      title: managedby
    quota_warning:
      anyOf:
      - type: integer
      - enum:
        - INHERIT
        type: string
      nullable: false
      title: quota_warning
    quota_critical:
      anyOf:
      - type: integer
      - enum:
        - INHERIT
        type: string
      nullable: false
      title: quota_critical
    refquota_warning:
      anyOf:
      - type: integer
      - enum:
        - INHERIT
        type: string
      nullable: false
      title: refquota_warning
    refquota_critical:
      anyOf:
      - type: integer
      - enum:
        - INHERIT
        type: string
      nullable: false
      title: refquota_critical
    special_small_block_size:
      anyOf:
      - type: integer
      - enum:
        - INHERIT
        type: string
      nullable: false
      title: special_small_block_size
    copies:
      anyOf:
      - type: integer
      - enum:
        - INHERIT
        type: string
      nullable: false
      title: copies
    recordsize:
      anyOf:
      - type: string
      - enum:
        - INHERIT
        type: string
      nullable: false
      title: recordsize
    encryption_options_1:
      additionalProperties: false
      default: {}
      description: |-
        `encryption_options` specifies configuration for encryption of dataset for `name` pool.
        `encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase
        as a key.
        Otherwise a hex encoded key can be specified by providing `encryption_options.key`.
        `encryption_options.generate_key` when enabled automatically generates the key to be used
        for dataset encryption.
      properties:
        generate_key:
          default: false
          title: generate_key
          type: boolean
        pbkdf2iters:
          default: 350000
          title: pbkdf2iters
          type: integer
        algorithm:
          default: AES-256-GCM
          enum:
          - AES-128-CCM
          - AES-192-CCM
          - AES-256-CCM
          - AES-128-GCM
          - AES-192-GCM
          - AES-256-GCM
          title: algorithm
          type: string
        passphrase:
          nullable: true
          title: passphrase
          type: string
        key:
          nullable: true
          title: key
          type: string
      title: encryption_options
      type: object
    user_property:
      additionalProperties: false
      default: {}
      properties:
        key:
          title: key
          type: string
        value:
          title: value
          type: string
      title: user_property
      type: object
    snapshot_spec:
      additionalProperties: false
      default: {}
      properties:
        start:
          title: start
          type: string
        end:
          title: end
          type: string
      title: snapshot_spec
      type: object
    snapshots_inner:
      oneOf:
      - $ref: '#/components/schemas/snapshot_spec'
      - title: snapshot_name
        type: string
    dataset:
      additionalProperties: false
      default: {}
      properties:
        force:
          default: false
          title: force
          type: boolean
        name:
          title: name
          type: string
        key:
          title: key
          type: string
        passphrase:
          title: passphrase
          type: string
      title: dataset
      type: object
    dataset_1:
      additionalProperties: false
      default: {}
      properties:
        force:
          default: false
          title: force
          type: boolean
        name:
          title: name
          type: string
        key:
          title: key
          type: string
        passphrase:
          title: passphrase
          type: string
        recursive:
          default: false
          title: recursive
          type: boolean
      title: dataset
      type: object
    property:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        value:
          title: value
          type: string
      title: property
      type: object
    schedule_1:
      additionalProperties: false
      default: {}
      properties:
        minute:
          default: "00"
          title: minute
          type: string
        hour:
          default: "00"
          title: hour
          type: string
        dom:
          default: '*'
          title: dom
          type: string
        month:
          default: '*'
          title: month
          type: string
        dow:
          default: "7"
          title: dow
          type: string
      title: schedule
      type: object
    schedule_2:
      additionalProperties: false
      default: {}
      description: Create a Periodic Snapshot Task that will take snapshots of specified
        `dataset` at specified `schedule`.
      properties:
        minute:
          default: "00"
          title: minute
          type: string
        hour:
          default: '*'
          title: hour
          type: string
        dom:
          default: '*'
          title: dom
          type: string
        month:
          default: '*'
          title: month
          type: string
        dow:
          default: '*'
          title: dow
          type: string
        begin:
          default: 00:00
          title: begin
          type: string
        end:
          default: 23:59
          title: end
          type: string
      title: schedule
      type: object
    schedule_3:
      additionalProperties: false
      default: {}
      properties:
        minute:
          default: "00"
          title: minute
          type: string
        hour:
          default: '*'
          title: hour
          type: string
        dom:
          default: '*'
          title: dom
          type: string
        month:
          default: '*'
          title: month
          type: string
        dow:
          default: '*'
          title: dow
          type: string
        begin:
          default: 00:00
          title: begin
          type: string
        end:
          default: 23:59
          title: end
          type: string
      title: schedule
      type: object
    schedule_4:
      additionalProperties: false
      description: |-
        * `auto` allows replication to run automatically on schedule or after bound periodic snapshot task
        * `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic
          snapshot tasks can have a schedule
        * Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or
          `restrict_schedule`
      properties:
        minute:
          default: "00"
          title: minute
          type: string
        hour:
          default: '*'
          title: hour
          type: string
        dom:
          default: '*'
          title: dom
          type: string
        month:
          default: '*'
          title: month
          type: string
        dow:
          default: '*'
          title: dow
          type: string
        begin:
          default: 00:00
          title: begin
          type: string
        end:
          default: 23:59
          title: end
          type: string
      title: schedule
      type: object
    restrict_schedule:
      additionalProperties: false
      description: |-
        * `restrict_schedule` restricts when replication task with bound periodic snapshot tasks runs. For example,
          you can have periodic snapshot tasks that run every 15 minutes, but only run replication task every hour.
        * Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or
          `restrict_schedule`
      properties:
        minute:
          default: "00"
          title: minute
          type: string
        hour:
          default: '*'
          title: hour
          type: string
        dom:
          default: '*'
          title: dom
          type: string
        month:
          default: '*'
          title: month
          type: string
        dow:
          default: '*'
          title: dow
          type: string
        begin:
          default: 00:00
          title: begin
          type: string
        end:
          default: 23:59
          title: end
          type: string
      title: restrict_schedule
      type: object
    schedule_5:
      additionalProperties: false
      default: {}
      properties:
        minute:
          default: '*'
          title: minute
          type: string
        hour:
          default: '*'
          title: hour
          type: string
        dom:
          default: '*'
          title: dom
          type: string
        month:
          default: '*'
          title: month
          type: string
        dow:
          default: '*'
          title: dow
          type: string
      title: schedule
      type: object
    lifetime:
      additionalProperties: false
      default: {}
      properties:
        schedule:
          $ref: '#/components/schemas/schedule_5'
        lifetime_value:
          title: lifetime_value
          type: integer
        lifetime_unit:
          enum:
          - HOUR
          - DAY
          - WEEK
          - MONTH
          - YEAR
          title: lifetime_unit
          type: string
      title: lifetime
      type: object
    restrict_schedule_1:
      additionalProperties: false
      properties:
        minute:
          default: "00"
          title: minute
          type: string
        hour:
          default: '*'
          title: hour
          type: string
        dom:
          default: '*'
          title: dom
          type: string
        month:
          default: '*'
          title: month
          type: string
        dow:
          default: '*'
          title: dow
          type: string
        begin:
          default: 00:00
          title: begin
          type: string
        end:
          default: 23:59
          title: end
          type: string
      title: restrict_schedule
      type: object
    graph:
      additionalProperties: false
      default: {}
      properties:
        name:
          title: name
          type: string
        identifier:
          default: null
          title: identifier
      title: graph
      type: object
    schedule_6:
      additionalProperties: false
      default: {}
      properties:
        hour:
          default: '*'
          title: hour
          type: string
        dom:
          default: '*'
          title: dom
          type: string
        month:
          default: '*'
          title: month
          type: string
        dow:
          default: '*'
          title: dow
          type: string
      title: schedule
      type: object
    disk_run:
      additionalProperties: false
      default: {}
      properties:
        identifier:
          title: identifier
          type: string
        mode:
          default: BACKGROUND
          enum:
          - FOREGROUND
          - BACKGROUND
          title: mode
          type: string
        type:
          enum:
          - LONG
          - SHORT
          - CONVEYANCE
          - OFFLINE
          title: type
          type: string
      title: disk_run
      type: object
    options_3:
      additionalProperties: false
      default: {}
      properties:
        use_kerberos:
          default: false
          title: use_kerberos
          type: boolean
        output_format:
          default: SMB
          enum:
          - SMB
          - LOCAL
          title: output_format
          type: string
      title: options
      type: object
    ae_who_name:
      additionalProperties: false
      properties:
        domain:
          default: ""
          title: domain
          type: string
        name:
          default: ""
          title: name
          type: string
      title: ae_who_name
      type: object
    aclentry:
      additionalProperties: false
      default: {}
      properties:
        ae_who_sid:
          title: ae_who_sid
          type: string
        ae_who_name:
          $ref: '#/components/schemas/ae_who_name'
        ae_perm:
          enum:
          - FULL
          - CHANGE
          - READ
          title: ae_perm
          type: string
        ae_type:
          enum:
          - ALLOWED
          - DENIED
          title: ae_type
          type: string
      title: aclentry
      type: object
    stats_data:
      additionalProperties: false
      default: {}
      properties:
        source:
          title: source
          type: string
        type:
          title: type
          type: string
        dataset:
          title: dataset
          type: string
        cf:
          default: AVERAGE
          title: cf
          type: string
      title: stats-data
      type: object
    administrative_user:
      additionalProperties: false
      default: {}
      properties:
        first_name:
          title: first_name
          type: string
        last_name:
          title: last_name
          type: string
        title:
          title: title
          type: string
        office_phone:
          title: office_phone
          type: string
        mobile_phone:
          title: mobile_phone
          type: string
        primary_email:
          title: primary_email
          type: string
        secondary_email:
          title: secondary_email
          type: string
        address:
          title: address
          type: string
        city:
          title: city
          type: string
        state:
          title: state
          type: string
        zip:
          title: zip
          type: string
        country:
          title: country
          type: string
      title: administrative_user
      type: object
    technical_user:
      additionalProperties: false
      default: {}
      properties:
        first_name:
          title: first_name
          type: string
        last_name:
          title: last_name
          type: string
        title:
          title: title
          type: string
        office_phone:
          title: office_phone
          type: string
        mobile_phone:
          title: mobile_phone
          type: string
        primary_email:
          title: primary_email
          type: string
        secondary_email:
          title: secondary_email
          type: string
        address:
          title: address
          type: string
        city:
          title: city
          type: string
        state:
          title: state
          type: string
        zip:
          title: zip
          type: string
        country:
          title: country
          type: string
      title: technical_user
      type: object
    reseller:
      additionalProperties: false
      default: {}
      properties:
        company:
          title: company
          type: string
        first_name:
          title: first_name
          type: string
        last_name:
          title: last_name
          type: string
        title:
          title: title
          type: string
        office_phone:
          title: office_phone
          type: string
        mobile_phone:
          title: mobile_phone
          type: string
      title: reseller
      type: object
    physical_location:
      additionalProperties: false
      default: {}
      properties:
        address:
          title: address
          type: string
        city:
          title: city
          type: string
        state:
          title: state
          type: string
        zip:
          title: zip
          type: string
        country:
          title: country
          type: string
        contact_name:
          title: contact_name
          type: string
        contact_phone_number:
          title: contact_phone_number
          type: string
        contact_email:
          title: contact_email
          type: string
      title: physical_location
      type: object
  securitySchemes:
    basic:
      scheme: basic
      type: http
