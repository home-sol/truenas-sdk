/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the FormatOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormatOptions{}

// FormatOptions struct for FormatOptions
type FormatOptions struct {
	Canonicalize   *bool `json:"canonicalize,omitempty"`
	EnsureBuiltins *bool `json:"ensure_builtins,omitempty"`
	ResolveNames   *bool `json:"resolve_names,omitempty"`
}

// NewFormatOptions instantiates a new FormatOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormatOptions() *FormatOptions {
	this := FormatOptions{}
	var canonicalize bool
	this.Canonicalize = &canonicalize
	var ensureBuiltins bool
	this.EnsureBuiltins = &ensureBuiltins
	var resolveNames bool
	this.ResolveNames = &resolveNames
	return &this
}

// NewFormatOptionsWithDefaults instantiates a new FormatOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormatOptionsWithDefaults() *FormatOptions {
	this := FormatOptions{}
	var canonicalize bool
	this.Canonicalize = &canonicalize
	var ensureBuiltins bool
	this.EnsureBuiltins = &ensureBuiltins
	var resolveNames bool
	this.ResolveNames = &resolveNames
	return &this
}

// GetCanonicalize returns the Canonicalize field value if set, zero value otherwise.
func (o *FormatOptions) GetCanonicalize() bool {
	if o == nil || IsNil(o.Canonicalize) {
		var ret bool
		return ret
	}
	return *o.Canonicalize
}

// GetCanonicalizeOk returns a tuple with the Canonicalize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormatOptions) GetCanonicalizeOk() (*bool, bool) {
	if o == nil || IsNil(o.Canonicalize) {
		return nil, false
	}
	return o.Canonicalize, true
}

// HasCanonicalize returns a boolean if a field has been set.
func (o *FormatOptions) HasCanonicalize() bool {
	if o != nil && !IsNil(o.Canonicalize) {
		return true
	}

	return false
}

// SetCanonicalize gets a reference to the given bool and assigns it to the Canonicalize field.
func (o *FormatOptions) SetCanonicalize(v bool) {
	o.Canonicalize = &v
}

// GetEnsureBuiltins returns the EnsureBuiltins field value if set, zero value otherwise.
func (o *FormatOptions) GetEnsureBuiltins() bool {
	if o == nil || IsNil(o.EnsureBuiltins) {
		var ret bool
		return ret
	}
	return *o.EnsureBuiltins
}

// GetEnsureBuiltinsOk returns a tuple with the EnsureBuiltins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormatOptions) GetEnsureBuiltinsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnsureBuiltins) {
		return nil, false
	}
	return o.EnsureBuiltins, true
}

// HasEnsureBuiltins returns a boolean if a field has been set.
func (o *FormatOptions) HasEnsureBuiltins() bool {
	if o != nil && !IsNil(o.EnsureBuiltins) {
		return true
	}

	return false
}

// SetEnsureBuiltins gets a reference to the given bool and assigns it to the EnsureBuiltins field.
func (o *FormatOptions) SetEnsureBuiltins(v bool) {
	o.EnsureBuiltins = &v
}

// GetResolveNames returns the ResolveNames field value if set, zero value otherwise.
func (o *FormatOptions) GetResolveNames() bool {
	if o == nil || IsNil(o.ResolveNames) {
		var ret bool
		return ret
	}
	return *o.ResolveNames
}

// GetResolveNamesOk returns a tuple with the ResolveNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormatOptions) GetResolveNamesOk() (*bool, bool) {
	if o == nil || IsNil(o.ResolveNames) {
		return nil, false
	}
	return o.ResolveNames, true
}

// HasResolveNames returns a boolean if a field has been set.
func (o *FormatOptions) HasResolveNames() bool {
	if o != nil && !IsNil(o.ResolveNames) {
		return true
	}

	return false
}

// SetResolveNames gets a reference to the given bool and assigns it to the ResolveNames field.
func (o *FormatOptions) SetResolveNames(v bool) {
	o.ResolveNames = &v
}

func (o FormatOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormatOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Canonicalize) {
		toSerialize["canonicalize"] = o.Canonicalize
	}
	if !IsNil(o.EnsureBuiltins) {
		toSerialize["ensure_builtins"] = o.EnsureBuiltins
	}
	if !IsNil(o.ResolveNames) {
		toSerialize["resolve_names"] = o.ResolveNames
	}
	return toSerialize, nil
}

type NullableFormatOptions struct {
	value *FormatOptions
	isSet bool
}

func (v NullableFormatOptions) Get() *FormatOptions {
	return v.value
}

func (v *NullableFormatOptions) Set(val *FormatOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableFormatOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableFormatOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormatOptions(val *FormatOptions) *NullableFormatOptions {
	return &NullableFormatOptions{value: val, isSet: true}
}

func (v NullableFormatOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormatOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
