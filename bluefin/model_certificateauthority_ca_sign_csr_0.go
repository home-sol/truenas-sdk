/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the CertificateauthorityCaSignCsr0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CertificateauthorityCaSignCsr0{}

// CertificateauthorityCaSignCsr0 struct for CertificateauthorityCaSignCsr0
type CertificateauthorityCaSignCsr0 struct {
	// Sign CSR by Certificate Authority of `ca_id` Sign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing a CSR of `csr_cert_id` which exists in the system
	CaId *int32 `json:"ca_id,omitempty"`
	// Sign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing a CSR of `csr_cert_id` which exists in the system
	CsrCertId      *int32           `json:"csr_cert_id,omitempty"`
	Name           *string          `json:"name,omitempty"`
	CertExtensions *CertExtensions2 `json:"cert_extensions,omitempty"`
}

// NewCertificateauthorityCaSignCsr0 instantiates a new CertificateauthorityCaSignCsr0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateauthorityCaSignCsr0() *CertificateauthorityCaSignCsr0 {
	this := CertificateauthorityCaSignCsr0{}
	var certExtensions CertExtensions2
	this.CertExtensions = &certExtensions
	return &this
}

// NewCertificateauthorityCaSignCsr0WithDefaults instantiates a new CertificateauthorityCaSignCsr0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateauthorityCaSignCsr0WithDefaults() *CertificateauthorityCaSignCsr0 {
	this := CertificateauthorityCaSignCsr0{}
	var certExtensions CertExtensions2
	this.CertExtensions = &certExtensions
	return &this
}

// GetCaId returns the CaId field value if set, zero value otherwise.
func (o *CertificateauthorityCaSignCsr0) GetCaId() int32 {
	if o == nil || IsNil(o.CaId) {
		var ret int32
		return ret
	}
	return *o.CaId
}

// GetCaIdOk returns a tuple with the CaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCaSignCsr0) GetCaIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CaId) {
		return nil, false
	}
	return o.CaId, true
}

// HasCaId returns a boolean if a field has been set.
func (o *CertificateauthorityCaSignCsr0) HasCaId() bool {
	if o != nil && !IsNil(o.CaId) {
		return true
	}

	return false
}

// SetCaId gets a reference to the given int32 and assigns it to the CaId field.
func (o *CertificateauthorityCaSignCsr0) SetCaId(v int32) {
	o.CaId = &v
}

// GetCsrCertId returns the CsrCertId field value if set, zero value otherwise.
func (o *CertificateauthorityCaSignCsr0) GetCsrCertId() int32 {
	if o == nil || IsNil(o.CsrCertId) {
		var ret int32
		return ret
	}
	return *o.CsrCertId
}

// GetCsrCertIdOk returns a tuple with the CsrCertId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCaSignCsr0) GetCsrCertIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CsrCertId) {
		return nil, false
	}
	return o.CsrCertId, true
}

// HasCsrCertId returns a boolean if a field has been set.
func (o *CertificateauthorityCaSignCsr0) HasCsrCertId() bool {
	if o != nil && !IsNil(o.CsrCertId) {
		return true
	}

	return false
}

// SetCsrCertId gets a reference to the given int32 and assigns it to the CsrCertId field.
func (o *CertificateauthorityCaSignCsr0) SetCsrCertId(v int32) {
	o.CsrCertId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CertificateauthorityCaSignCsr0) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCaSignCsr0) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CertificateauthorityCaSignCsr0) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CertificateauthorityCaSignCsr0) SetName(v string) {
	o.Name = &v
}

// GetCertExtensions returns the CertExtensions field value if set, zero value otherwise.
func (o *CertificateauthorityCaSignCsr0) GetCertExtensions() CertExtensions2 {
	if o == nil || IsNil(o.CertExtensions) {
		var ret CertExtensions2
		return ret
	}
	return *o.CertExtensions
}

// GetCertExtensionsOk returns a tuple with the CertExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateauthorityCaSignCsr0) GetCertExtensionsOk() (*CertExtensions2, bool) {
	if o == nil || IsNil(o.CertExtensions) {
		return nil, false
	}
	return o.CertExtensions, true
}

// HasCertExtensions returns a boolean if a field has been set.
func (o *CertificateauthorityCaSignCsr0) HasCertExtensions() bool {
	if o != nil && !IsNil(o.CertExtensions) {
		return true
	}

	return false
}

// SetCertExtensions gets a reference to the given CertExtensions2 and assigns it to the CertExtensions field.
func (o *CertificateauthorityCaSignCsr0) SetCertExtensions(v CertExtensions2) {
	o.CertExtensions = &v
}

func (o CertificateauthorityCaSignCsr0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CertificateauthorityCaSignCsr0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CaId) {
		toSerialize["ca_id"] = o.CaId
	}
	if !IsNil(o.CsrCertId) {
		toSerialize["csr_cert_id"] = o.CsrCertId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CertExtensions) {
		toSerialize["cert_extensions"] = o.CertExtensions
	}
	return toSerialize, nil
}

type NullableCertificateauthorityCaSignCsr0 struct {
	value *CertificateauthorityCaSignCsr0
	isSet bool
}

func (v NullableCertificateauthorityCaSignCsr0) Get() *CertificateauthorityCaSignCsr0 {
	return v.value
}

func (v *NullableCertificateauthorityCaSignCsr0) Set(val *CertificateauthorityCaSignCsr0) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateauthorityCaSignCsr0) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateauthorityCaSignCsr0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateauthorityCaSignCsr0(val *CertificateauthorityCaSignCsr0) *NullableCertificateauthorityCaSignCsr0 {
	return &NullableCertificateauthorityCaSignCsr0{value: val, isSet: true}
}

func (v NullableCertificateauthorityCaSignCsr0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateauthorityCaSignCsr0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
