/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the KeychaincredentialRemoteSshHostKeyScan0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeychaincredentialRemoteSshHostKeyScan0{}

// KeychaincredentialRemoteSshHostKeyScan0 struct for KeychaincredentialRemoteSshHostKeyScan0
type KeychaincredentialRemoteSshHostKeyScan0 struct {
	Host           *string `json:"host,omitempty"`
	Port           *string `json:"port,omitempty"`
	ConnectTimeout *int32  `json:"connect_timeout,omitempty"`
}

// NewKeychaincredentialRemoteSshHostKeyScan0 instantiates a new KeychaincredentialRemoteSshHostKeyScan0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeychaincredentialRemoteSshHostKeyScan0() *KeychaincredentialRemoteSshHostKeyScan0 {
	this := KeychaincredentialRemoteSshHostKeyScan0{}
	var port string
	this.Port = &port
	var connectTimeout int32
	this.ConnectTimeout = &connectTimeout
	return &this
}

// NewKeychaincredentialRemoteSshHostKeyScan0WithDefaults instantiates a new KeychaincredentialRemoteSshHostKeyScan0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeychaincredentialRemoteSshHostKeyScan0WithDefaults() *KeychaincredentialRemoteSshHostKeyScan0 {
	this := KeychaincredentialRemoteSshHostKeyScan0{}
	var port string
	this.Port = &port
	var connectTimeout int32
	this.ConnectTimeout = &connectTimeout
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshHostKeyScan0) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshHostKeyScan0) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshHostKeyScan0) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *KeychaincredentialRemoteSshHostKeyScan0) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshHostKeyScan0) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshHostKeyScan0) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshHostKeyScan0) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *KeychaincredentialRemoteSshHostKeyScan0) SetPort(v string) {
	o.Port = &v
}

// GetConnectTimeout returns the ConnectTimeout field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshHostKeyScan0) GetConnectTimeout() int32 {
	if o == nil || IsNil(o.ConnectTimeout) {
		var ret int32
		return ret
	}
	return *o.ConnectTimeout
}

// GetConnectTimeoutOk returns a tuple with the ConnectTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshHostKeyScan0) GetConnectTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectTimeout) {
		return nil, false
	}
	return o.ConnectTimeout, true
}

// HasConnectTimeout returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshHostKeyScan0) HasConnectTimeout() bool {
	if o != nil && !IsNil(o.ConnectTimeout) {
		return true
	}

	return false
}

// SetConnectTimeout gets a reference to the given int32 and assigns it to the ConnectTimeout field.
func (o *KeychaincredentialRemoteSshHostKeyScan0) SetConnectTimeout(v int32) {
	o.ConnectTimeout = &v
}

func (o KeychaincredentialRemoteSshHostKeyScan0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeychaincredentialRemoteSshHostKeyScan0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.ConnectTimeout) {
		toSerialize["connect_timeout"] = o.ConnectTimeout
	}
	return toSerialize, nil
}

type NullableKeychaincredentialRemoteSshHostKeyScan0 struct {
	value *KeychaincredentialRemoteSshHostKeyScan0
	isSet bool
}

func (v NullableKeychaincredentialRemoteSshHostKeyScan0) Get() *KeychaincredentialRemoteSshHostKeyScan0 {
	return v.value
}

func (v *NullableKeychaincredentialRemoteSshHostKeyScan0) Set(val *KeychaincredentialRemoteSshHostKeyScan0) {
	v.value = val
	v.isSet = true
}

func (v NullableKeychaincredentialRemoteSshHostKeyScan0) IsSet() bool {
	return v.isSet
}

func (v *NullableKeychaincredentialRemoteSshHostKeyScan0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeychaincredentialRemoteSshHostKeyScan0(val *KeychaincredentialRemoteSshHostKeyScan0) *NullableKeychaincredentialRemoteSshHostKeyScan0 {
	return &NullableKeychaincredentialRemoteSshHostKeyScan0{value: val, isSet: true}
}

func (v NullableKeychaincredentialRemoteSshHostKeyScan0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeychaincredentialRemoteSshHostKeyScan0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
