/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the GlusterVolumeStatus0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlusterVolumeStatus0{}

// GlusterVolumeStatus0 struct for GlusterVolumeStatus0
type GlusterVolumeStatus0 struct {
	// `name` String representing name of gluster volume
	Name    *string `json:"name,omitempty"`
	Verbose *bool   `json:"verbose,omitempty"`
}

// NewGlusterVolumeStatus0 instantiates a new GlusterVolumeStatus0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlusterVolumeStatus0() *GlusterVolumeStatus0 {
	this := GlusterVolumeStatus0{}
	var verbose bool
	this.Verbose = &verbose
	return &this
}

// NewGlusterVolumeStatus0WithDefaults instantiates a new GlusterVolumeStatus0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlusterVolumeStatus0WithDefaults() *GlusterVolumeStatus0 {
	this := GlusterVolumeStatus0{}
	var verbose bool
	this.Verbose = &verbose
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GlusterVolumeStatus0) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeStatus0) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GlusterVolumeStatus0) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GlusterVolumeStatus0) SetName(v string) {
	o.Name = &v
}

// GetVerbose returns the Verbose field value if set, zero value otherwise.
func (o *GlusterVolumeStatus0) GetVerbose() bool {
	if o == nil || IsNil(o.Verbose) {
		var ret bool
		return ret
	}
	return *o.Verbose
}

// GetVerboseOk returns a tuple with the Verbose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeStatus0) GetVerboseOk() (*bool, bool) {
	if o == nil || IsNil(o.Verbose) {
		return nil, false
	}
	return o.Verbose, true
}

// HasVerbose returns a boolean if a field has been set.
func (o *GlusterVolumeStatus0) HasVerbose() bool {
	if o != nil && !IsNil(o.Verbose) {
		return true
	}

	return false
}

// SetVerbose gets a reference to the given bool and assigns it to the Verbose field.
func (o *GlusterVolumeStatus0) SetVerbose(v bool) {
	o.Verbose = &v
}

func (o GlusterVolumeStatus0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlusterVolumeStatus0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Verbose) {
		toSerialize["verbose"] = o.Verbose
	}
	return toSerialize, nil
}

type NullableGlusterVolumeStatus0 struct {
	value *GlusterVolumeStatus0
	isSet bool
}

func (v NullableGlusterVolumeStatus0) Get() *GlusterVolumeStatus0 {
	return v.value
}

func (v *NullableGlusterVolumeStatus0) Set(val *GlusterVolumeStatus0) {
	v.value = val
	v.isSet = true
}

func (v NullableGlusterVolumeStatus0) IsSet() bool {
	return v.isSet
}

func (v *NullableGlusterVolumeStatus0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlusterVolumeStatus0(val *GlusterVolumeStatus0) *NullableGlusterVolumeStatus0 {
	return &NullableGlusterVolumeStatus0{value: val, isSet: true}
}

func (v NullableGlusterVolumeStatus0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlusterVolumeStatus0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
