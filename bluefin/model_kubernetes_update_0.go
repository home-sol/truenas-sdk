/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the KubernetesUpdate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesUpdate0{}

// KubernetesUpdate0 struct for KubernetesUpdate0
type KubernetesUpdate0 struct {
	// `servicelb` is a boolean to enable or disable the integrated k3s Service Loadbalancer called \"Klipper\". This can be set to disabled to enable the user to run another LoadBalancer or no LoadBalancer at all.
	Servicelb *bool `json:"servicelb,omitempty"`
	// `configure_gpus` is a boolean to enable or disable to prevent automatically loading any GPU Support into kubernetes. This includes not loading any daemonsets for Intel and NVIDIA support.
	ConfigureGpus    *bool `json:"configure_gpus,omitempty"`
	ValidateHostPath *bool `json:"validate_host_path,omitempty"`
	PassthroughMode  *bool `json:"passthrough_mode,omitempty"`
	// `pool` must be a valid ZFS pool configured in the system. Kubernetes service will initialise the pool by creating datasets under `pool_name/ix-applications`.
	Pool NullableString `json:"pool,omitempty"`
	// `cluster_cidr` is the CIDR to be used for default NAT network between workloads. Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset and any data within it when any of the values for the above configuration change.
	ClusterCidr *string `json:"cluster_cidr,omitempty"`
	// `service_cidr` is the CIDR to be used for kubernetes services which are an abstraction and refer to a logically set of kubernetes pods. `cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range of `service_cidr`. Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset and any data within it when any of the values for the above configuration change.
	ServiceCidr *string `json:"service_cidr,omitempty"`
	// `cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range of `service_cidr`. Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset and any data within it when any of the values for the above configuration change.
	ClusterDnsIp *string `json:"cluster_dns_ip,omitempty"`
	// `node_ip` is the IP address which the kubernetes cluster will assign to the TrueNAS node. It defaults to 0.0.0.0 and the cluster in this case will automatically manage which IP address to use for managing traffic for default NAT network.
	NodeIp *string `json:"node_ip,omitempty"`
	// If users want to restrict traffic over a certain gateway / interface, they can specify a default route for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default route for IPv6 traffic.
	RouteV4Interface NullableString `json:"route_v4_interface,omitempty"`
	// If users want to restrict traffic over a certain gateway / interface, they can specify a default route for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default route for IPv6 traffic.
	RouteV4Gateway NullableString `json:"route_v4_gateway,omitempty"`
	// If users want to restrict traffic over a certain gateway / interface, they can specify a default route for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default route for IPv6 traffic.
	RouteV6Interface    NullableString    `json:"route_v6_interface,omitempty"`
	RouteV6Gateway      NullableString    `json:"route_v6_gateway,omitempty"`
	MigrateApplications *bool             `json:"migrate_applications,omitempty"`
	Force               *bool             `json:"force,omitempty"`
	MigrationOptions    *MigrationOptions `json:"migration_options,omitempty"`
}

// NewKubernetesUpdate0 instantiates a new KubernetesUpdate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesUpdate0() *KubernetesUpdate0 {
	this := KubernetesUpdate0{}
	var migrationOptions MigrationOptions
	this.MigrationOptions = &migrationOptions
	return &this
}

// NewKubernetesUpdate0WithDefaults instantiates a new KubernetesUpdate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesUpdate0WithDefaults() *KubernetesUpdate0 {
	this := KubernetesUpdate0{}
	var migrationOptions MigrationOptions
	this.MigrationOptions = &migrationOptions
	return &this
}

// GetServicelb returns the Servicelb field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetServicelb() bool {
	if o == nil || IsNil(o.Servicelb) {
		var ret bool
		return ret
	}
	return *o.Servicelb
}

// GetServicelbOk returns a tuple with the Servicelb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetServicelbOk() (*bool, bool) {
	if o == nil || IsNil(o.Servicelb) {
		return nil, false
	}
	return o.Servicelb, true
}

// HasServicelb returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasServicelb() bool {
	if o != nil && !IsNil(o.Servicelb) {
		return true
	}

	return false
}

// SetServicelb gets a reference to the given bool and assigns it to the Servicelb field.
func (o *KubernetesUpdate0) SetServicelb(v bool) {
	o.Servicelb = &v
}

// GetConfigureGpus returns the ConfigureGpus field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetConfigureGpus() bool {
	if o == nil || IsNil(o.ConfigureGpus) {
		var ret bool
		return ret
	}
	return *o.ConfigureGpus
}

// GetConfigureGpusOk returns a tuple with the ConfigureGpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetConfigureGpusOk() (*bool, bool) {
	if o == nil || IsNil(o.ConfigureGpus) {
		return nil, false
	}
	return o.ConfigureGpus, true
}

// HasConfigureGpus returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasConfigureGpus() bool {
	if o != nil && !IsNil(o.ConfigureGpus) {
		return true
	}

	return false
}

// SetConfigureGpus gets a reference to the given bool and assigns it to the ConfigureGpus field.
func (o *KubernetesUpdate0) SetConfigureGpus(v bool) {
	o.ConfigureGpus = &v
}

// GetValidateHostPath returns the ValidateHostPath field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetValidateHostPath() bool {
	if o == nil || IsNil(o.ValidateHostPath) {
		var ret bool
		return ret
	}
	return *o.ValidateHostPath
}

// GetValidateHostPathOk returns a tuple with the ValidateHostPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetValidateHostPathOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidateHostPath) {
		return nil, false
	}
	return o.ValidateHostPath, true
}

// HasValidateHostPath returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasValidateHostPath() bool {
	if o != nil && !IsNil(o.ValidateHostPath) {
		return true
	}

	return false
}

// SetValidateHostPath gets a reference to the given bool and assigns it to the ValidateHostPath field.
func (o *KubernetesUpdate0) SetValidateHostPath(v bool) {
	o.ValidateHostPath = &v
}

// GetPassthroughMode returns the PassthroughMode field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetPassthroughMode() bool {
	if o == nil || IsNil(o.PassthroughMode) {
		var ret bool
		return ret
	}
	return *o.PassthroughMode
}

// GetPassthroughModeOk returns a tuple with the PassthroughMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetPassthroughModeOk() (*bool, bool) {
	if o == nil || IsNil(o.PassthroughMode) {
		return nil, false
	}
	return o.PassthroughMode, true
}

// HasPassthroughMode returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasPassthroughMode() bool {
	if o != nil && !IsNil(o.PassthroughMode) {
		return true
	}

	return false
}

// SetPassthroughMode gets a reference to the given bool and assigns it to the PassthroughMode field.
func (o *KubernetesUpdate0) SetPassthroughMode(v bool) {
	o.PassthroughMode = &v
}

// GetPool returns the Pool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesUpdate0) GetPool() string {
	if o == nil || IsNil(o.Pool.Get()) {
		var ret string
		return ret
	}
	return *o.Pool.Get()
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesUpdate0) GetPoolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pool.Get(), o.Pool.IsSet()
}

// HasPool returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasPool() bool {
	if o != nil && o.Pool.IsSet() {
		return true
	}

	return false
}

// SetPool gets a reference to the given NullableString and assigns it to the Pool field.
func (o *KubernetesUpdate0) SetPool(v string) {
	o.Pool.Set(&v)
}

// SetPoolNil sets the value for Pool to be an explicit nil
func (o *KubernetesUpdate0) SetPoolNil() {
	o.Pool.Set(nil)
}

// UnsetPool ensures that no value is present for Pool, not even an explicit nil
func (o *KubernetesUpdate0) UnsetPool() {
	o.Pool.Unset()
}

// GetClusterCidr returns the ClusterCidr field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetClusterCidr() string {
	if o == nil || IsNil(o.ClusterCidr) {
		var ret string
		return ret
	}
	return *o.ClusterCidr
}

// GetClusterCidrOk returns a tuple with the ClusterCidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetClusterCidrOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterCidr) {
		return nil, false
	}
	return o.ClusterCidr, true
}

// HasClusterCidr returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasClusterCidr() bool {
	if o != nil && !IsNil(o.ClusterCidr) {
		return true
	}

	return false
}

// SetClusterCidr gets a reference to the given string and assigns it to the ClusterCidr field.
func (o *KubernetesUpdate0) SetClusterCidr(v string) {
	o.ClusterCidr = &v
}

// GetServiceCidr returns the ServiceCidr field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetServiceCidr() string {
	if o == nil || IsNil(o.ServiceCidr) {
		var ret string
		return ret
	}
	return *o.ServiceCidr
}

// GetServiceCidrOk returns a tuple with the ServiceCidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetServiceCidrOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceCidr) {
		return nil, false
	}
	return o.ServiceCidr, true
}

// HasServiceCidr returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasServiceCidr() bool {
	if o != nil && !IsNil(o.ServiceCidr) {
		return true
	}

	return false
}

// SetServiceCidr gets a reference to the given string and assigns it to the ServiceCidr field.
func (o *KubernetesUpdate0) SetServiceCidr(v string) {
	o.ServiceCidr = &v
}

// GetClusterDnsIp returns the ClusterDnsIp field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetClusterDnsIp() string {
	if o == nil || IsNil(o.ClusterDnsIp) {
		var ret string
		return ret
	}
	return *o.ClusterDnsIp
}

// GetClusterDnsIpOk returns a tuple with the ClusterDnsIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetClusterDnsIpOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterDnsIp) {
		return nil, false
	}
	return o.ClusterDnsIp, true
}

// HasClusterDnsIp returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasClusterDnsIp() bool {
	if o != nil && !IsNil(o.ClusterDnsIp) {
		return true
	}

	return false
}

// SetClusterDnsIp gets a reference to the given string and assigns it to the ClusterDnsIp field.
func (o *KubernetesUpdate0) SetClusterDnsIp(v string) {
	o.ClusterDnsIp = &v
}

// GetNodeIp returns the NodeIp field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetNodeIp() string {
	if o == nil || IsNil(o.NodeIp) {
		var ret string
		return ret
	}
	return *o.NodeIp
}

// GetNodeIpOk returns a tuple with the NodeIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetNodeIpOk() (*string, bool) {
	if o == nil || IsNil(o.NodeIp) {
		return nil, false
	}
	return o.NodeIp, true
}

// HasNodeIp returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasNodeIp() bool {
	if o != nil && !IsNil(o.NodeIp) {
		return true
	}

	return false
}

// SetNodeIp gets a reference to the given string and assigns it to the NodeIp field.
func (o *KubernetesUpdate0) SetNodeIp(v string) {
	o.NodeIp = &v
}

// GetRouteV4Interface returns the RouteV4Interface field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesUpdate0) GetRouteV4Interface() string {
	if o == nil || IsNil(o.RouteV4Interface.Get()) {
		var ret string
		return ret
	}
	return *o.RouteV4Interface.Get()
}

// GetRouteV4InterfaceOk returns a tuple with the RouteV4Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesUpdate0) GetRouteV4InterfaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouteV4Interface.Get(), o.RouteV4Interface.IsSet()
}

// HasRouteV4Interface returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasRouteV4Interface() bool {
	if o != nil && o.RouteV4Interface.IsSet() {
		return true
	}

	return false
}

// SetRouteV4Interface gets a reference to the given NullableString and assigns it to the RouteV4Interface field.
func (o *KubernetesUpdate0) SetRouteV4Interface(v string) {
	o.RouteV4Interface.Set(&v)
}

// SetRouteV4InterfaceNil sets the value for RouteV4Interface to be an explicit nil
func (o *KubernetesUpdate0) SetRouteV4InterfaceNil() {
	o.RouteV4Interface.Set(nil)
}

// UnsetRouteV4Interface ensures that no value is present for RouteV4Interface, not even an explicit nil
func (o *KubernetesUpdate0) UnsetRouteV4Interface() {
	o.RouteV4Interface.Unset()
}

// GetRouteV4Gateway returns the RouteV4Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesUpdate0) GetRouteV4Gateway() string {
	if o == nil || IsNil(o.RouteV4Gateway.Get()) {
		var ret string
		return ret
	}
	return *o.RouteV4Gateway.Get()
}

// GetRouteV4GatewayOk returns a tuple with the RouteV4Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesUpdate0) GetRouteV4GatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouteV4Gateway.Get(), o.RouteV4Gateway.IsSet()
}

// HasRouteV4Gateway returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasRouteV4Gateway() bool {
	if o != nil && o.RouteV4Gateway.IsSet() {
		return true
	}

	return false
}

// SetRouteV4Gateway gets a reference to the given NullableString and assigns it to the RouteV4Gateway field.
func (o *KubernetesUpdate0) SetRouteV4Gateway(v string) {
	o.RouteV4Gateway.Set(&v)
}

// SetRouteV4GatewayNil sets the value for RouteV4Gateway to be an explicit nil
func (o *KubernetesUpdate0) SetRouteV4GatewayNil() {
	o.RouteV4Gateway.Set(nil)
}

// UnsetRouteV4Gateway ensures that no value is present for RouteV4Gateway, not even an explicit nil
func (o *KubernetesUpdate0) UnsetRouteV4Gateway() {
	o.RouteV4Gateway.Unset()
}

// GetRouteV6Interface returns the RouteV6Interface field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesUpdate0) GetRouteV6Interface() string {
	if o == nil || IsNil(o.RouteV6Interface.Get()) {
		var ret string
		return ret
	}
	return *o.RouteV6Interface.Get()
}

// GetRouteV6InterfaceOk returns a tuple with the RouteV6Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesUpdate0) GetRouteV6InterfaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouteV6Interface.Get(), o.RouteV6Interface.IsSet()
}

// HasRouteV6Interface returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasRouteV6Interface() bool {
	if o != nil && o.RouteV6Interface.IsSet() {
		return true
	}

	return false
}

// SetRouteV6Interface gets a reference to the given NullableString and assigns it to the RouteV6Interface field.
func (o *KubernetesUpdate0) SetRouteV6Interface(v string) {
	o.RouteV6Interface.Set(&v)
}

// SetRouteV6InterfaceNil sets the value for RouteV6Interface to be an explicit nil
func (o *KubernetesUpdate0) SetRouteV6InterfaceNil() {
	o.RouteV6Interface.Set(nil)
}

// UnsetRouteV6Interface ensures that no value is present for RouteV6Interface, not even an explicit nil
func (o *KubernetesUpdate0) UnsetRouteV6Interface() {
	o.RouteV6Interface.Unset()
}

// GetRouteV6Gateway returns the RouteV6Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesUpdate0) GetRouteV6Gateway() string {
	if o == nil || IsNil(o.RouteV6Gateway.Get()) {
		var ret string
		return ret
	}
	return *o.RouteV6Gateway.Get()
}

// GetRouteV6GatewayOk returns a tuple with the RouteV6Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesUpdate0) GetRouteV6GatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouteV6Gateway.Get(), o.RouteV6Gateway.IsSet()
}

// HasRouteV6Gateway returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasRouteV6Gateway() bool {
	if o != nil && o.RouteV6Gateway.IsSet() {
		return true
	}

	return false
}

// SetRouteV6Gateway gets a reference to the given NullableString and assigns it to the RouteV6Gateway field.
func (o *KubernetesUpdate0) SetRouteV6Gateway(v string) {
	o.RouteV6Gateway.Set(&v)
}

// SetRouteV6GatewayNil sets the value for RouteV6Gateway to be an explicit nil
func (o *KubernetesUpdate0) SetRouteV6GatewayNil() {
	o.RouteV6Gateway.Set(nil)
}

// UnsetRouteV6Gateway ensures that no value is present for RouteV6Gateway, not even an explicit nil
func (o *KubernetesUpdate0) UnsetRouteV6Gateway() {
	o.RouteV6Gateway.Unset()
}

// GetMigrateApplications returns the MigrateApplications field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetMigrateApplications() bool {
	if o == nil || IsNil(o.MigrateApplications) {
		var ret bool
		return ret
	}
	return *o.MigrateApplications
}

// GetMigrateApplicationsOk returns a tuple with the MigrateApplications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetMigrateApplicationsOk() (*bool, bool) {
	if o == nil || IsNil(o.MigrateApplications) {
		return nil, false
	}
	return o.MigrateApplications, true
}

// HasMigrateApplications returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasMigrateApplications() bool {
	if o != nil && !IsNil(o.MigrateApplications) {
		return true
	}

	return false
}

// SetMigrateApplications gets a reference to the given bool and assigns it to the MigrateApplications field.
func (o *KubernetesUpdate0) SetMigrateApplications(v bool) {
	o.MigrateApplications = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetForce() bool {
	if o == nil || IsNil(o.Force) {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetForceOk() (*bool, bool) {
	if o == nil || IsNil(o.Force) {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasForce() bool {
	if o != nil && !IsNil(o.Force) {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *KubernetesUpdate0) SetForce(v bool) {
	o.Force = &v
}

// GetMigrationOptions returns the MigrationOptions field value if set, zero value otherwise.
func (o *KubernetesUpdate0) GetMigrationOptions() MigrationOptions {
	if o == nil || IsNil(o.MigrationOptions) {
		var ret MigrationOptions
		return ret
	}
	return *o.MigrationOptions
}

// GetMigrationOptionsOk returns a tuple with the MigrationOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesUpdate0) GetMigrationOptionsOk() (*MigrationOptions, bool) {
	if o == nil || IsNil(o.MigrationOptions) {
		return nil, false
	}
	return o.MigrationOptions, true
}

// HasMigrationOptions returns a boolean if a field has been set.
func (o *KubernetesUpdate0) HasMigrationOptions() bool {
	if o != nil && !IsNil(o.MigrationOptions) {
		return true
	}

	return false
}

// SetMigrationOptions gets a reference to the given MigrationOptions and assigns it to the MigrationOptions field.
func (o *KubernetesUpdate0) SetMigrationOptions(v MigrationOptions) {
	o.MigrationOptions = &v
}

func (o KubernetesUpdate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesUpdate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Servicelb) {
		toSerialize["servicelb"] = o.Servicelb
	}
	if !IsNil(o.ConfigureGpus) {
		toSerialize["configure_gpus"] = o.ConfigureGpus
	}
	if !IsNil(o.ValidateHostPath) {
		toSerialize["validate_host_path"] = o.ValidateHostPath
	}
	if !IsNil(o.PassthroughMode) {
		toSerialize["passthrough_mode"] = o.PassthroughMode
	}
	if o.Pool.IsSet() {
		toSerialize["pool"] = o.Pool.Get()
	}
	if !IsNil(o.ClusterCidr) {
		toSerialize["cluster_cidr"] = o.ClusterCidr
	}
	if !IsNil(o.ServiceCidr) {
		toSerialize["service_cidr"] = o.ServiceCidr
	}
	if !IsNil(o.ClusterDnsIp) {
		toSerialize["cluster_dns_ip"] = o.ClusterDnsIp
	}
	if !IsNil(o.NodeIp) {
		toSerialize["node_ip"] = o.NodeIp
	}
	if o.RouteV4Interface.IsSet() {
		toSerialize["route_v4_interface"] = o.RouteV4Interface.Get()
	}
	if o.RouteV4Gateway.IsSet() {
		toSerialize["route_v4_gateway"] = o.RouteV4Gateway.Get()
	}
	if o.RouteV6Interface.IsSet() {
		toSerialize["route_v6_interface"] = o.RouteV6Interface.Get()
	}
	if o.RouteV6Gateway.IsSet() {
		toSerialize["route_v6_gateway"] = o.RouteV6Gateway.Get()
	}
	if !IsNil(o.MigrateApplications) {
		toSerialize["migrate_applications"] = o.MigrateApplications
	}
	if !IsNil(o.Force) {
		toSerialize["force"] = o.Force
	}
	if !IsNil(o.MigrationOptions) {
		toSerialize["migration_options"] = o.MigrationOptions
	}
	return toSerialize, nil
}

type NullableKubernetesUpdate0 struct {
	value *KubernetesUpdate0
	isSet bool
}

func (v NullableKubernetesUpdate0) Get() *KubernetesUpdate0 {
	return v.value
}

func (v *NullableKubernetesUpdate0) Set(val *KubernetesUpdate0) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesUpdate0) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesUpdate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesUpdate0(val *KubernetesUpdate0) *NullableKubernetesUpdate0 {
	return &NullableKubernetesUpdate0{value: val, isSet: true}
}

func (v NullableKubernetesUpdate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesUpdate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
