/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the ReplicationCountEligibleManualSnapshots0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationCountEligibleManualSnapshots0{}

// ReplicationCountEligibleManualSnapshots0 struct for ReplicationCountEligibleManualSnapshots0
type ReplicationCountEligibleManualSnapshots0 struct {
	Datasets []string `json:"datasets,omitempty"`
	// Count how many existing snapshots of `dataset` match `naming_schema`.
	NamingSchema   []string       `json:"naming_schema,omitempty"`
	NameRegex      NullableString `json:"name_regex,omitempty"`
	Transport      *string        `json:"transport,omitempty"`
	SshCredentials NullableInt32  `json:"ssh_credentials,omitempty"`
}

// NewReplicationCountEligibleManualSnapshots0 instantiates a new ReplicationCountEligibleManualSnapshots0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationCountEligibleManualSnapshots0() *ReplicationCountEligibleManualSnapshots0 {
	this := ReplicationCountEligibleManualSnapshots0{}
	return &this
}

// NewReplicationCountEligibleManualSnapshots0WithDefaults instantiates a new ReplicationCountEligibleManualSnapshots0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationCountEligibleManualSnapshots0WithDefaults() *ReplicationCountEligibleManualSnapshots0 {
	this := ReplicationCountEligibleManualSnapshots0{}
	return &this
}

// GetDatasets returns the Datasets field value if set, zero value otherwise.
func (o *ReplicationCountEligibleManualSnapshots0) GetDatasets() []string {
	if o == nil || IsNil(o.Datasets) {
		var ret []string
		return ret
	}
	return o.Datasets
}

// GetDatasetsOk returns a tuple with the Datasets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationCountEligibleManualSnapshots0) GetDatasetsOk() ([]string, bool) {
	if o == nil || IsNil(o.Datasets) {
		return nil, false
	}
	return o.Datasets, true
}

// HasDatasets returns a boolean if a field has been set.
func (o *ReplicationCountEligibleManualSnapshots0) HasDatasets() bool {
	if o != nil && !IsNil(o.Datasets) {
		return true
	}

	return false
}

// SetDatasets gets a reference to the given []string and assigns it to the Datasets field.
func (o *ReplicationCountEligibleManualSnapshots0) SetDatasets(v []string) {
	o.Datasets = v
}

// GetNamingSchema returns the NamingSchema field value if set, zero value otherwise.
func (o *ReplicationCountEligibleManualSnapshots0) GetNamingSchema() []string {
	if o == nil || IsNil(o.NamingSchema) {
		var ret []string
		return ret
	}
	return o.NamingSchema
}

// GetNamingSchemaOk returns a tuple with the NamingSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationCountEligibleManualSnapshots0) GetNamingSchemaOk() ([]string, bool) {
	if o == nil || IsNil(o.NamingSchema) {
		return nil, false
	}
	return o.NamingSchema, true
}

// HasNamingSchema returns a boolean if a field has been set.
func (o *ReplicationCountEligibleManualSnapshots0) HasNamingSchema() bool {
	if o != nil && !IsNil(o.NamingSchema) {
		return true
	}

	return false
}

// SetNamingSchema gets a reference to the given []string and assigns it to the NamingSchema field.
func (o *ReplicationCountEligibleManualSnapshots0) SetNamingSchema(v []string) {
	o.NamingSchema = v
}

// GetNameRegex returns the NameRegex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationCountEligibleManualSnapshots0) GetNameRegex() string {
	if o == nil || IsNil(o.NameRegex.Get()) {
		var ret string
		return ret
	}
	return *o.NameRegex.Get()
}

// GetNameRegexOk returns a tuple with the NameRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationCountEligibleManualSnapshots0) GetNameRegexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NameRegex.Get(), o.NameRegex.IsSet()
}

// HasNameRegex returns a boolean if a field has been set.
func (o *ReplicationCountEligibleManualSnapshots0) HasNameRegex() bool {
	if o != nil && o.NameRegex.IsSet() {
		return true
	}

	return false
}

// SetNameRegex gets a reference to the given NullableString and assigns it to the NameRegex field.
func (o *ReplicationCountEligibleManualSnapshots0) SetNameRegex(v string) {
	o.NameRegex.Set(&v)
}

// SetNameRegexNil sets the value for NameRegex to be an explicit nil
func (o *ReplicationCountEligibleManualSnapshots0) SetNameRegexNil() {
	o.NameRegex.Set(nil)
}

// UnsetNameRegex ensures that no value is present for NameRegex, not even an explicit nil
func (o *ReplicationCountEligibleManualSnapshots0) UnsetNameRegex() {
	o.NameRegex.Unset()
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *ReplicationCountEligibleManualSnapshots0) GetTransport() string {
	if o == nil || IsNil(o.Transport) {
		var ret string
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationCountEligibleManualSnapshots0) GetTransportOk() (*string, bool) {
	if o == nil || IsNil(o.Transport) {
		return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *ReplicationCountEligibleManualSnapshots0) HasTransport() bool {
	if o != nil && !IsNil(o.Transport) {
		return true
	}

	return false
}

// SetTransport gets a reference to the given string and assigns it to the Transport field.
func (o *ReplicationCountEligibleManualSnapshots0) SetTransport(v string) {
	o.Transport = &v
}

// GetSshCredentials returns the SshCredentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationCountEligibleManualSnapshots0) GetSshCredentials() int32 {
	if o == nil || IsNil(o.SshCredentials.Get()) {
		var ret int32
		return ret
	}
	return *o.SshCredentials.Get()
}

// GetSshCredentialsOk returns a tuple with the SshCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationCountEligibleManualSnapshots0) GetSshCredentialsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshCredentials.Get(), o.SshCredentials.IsSet()
}

// HasSshCredentials returns a boolean if a field has been set.
func (o *ReplicationCountEligibleManualSnapshots0) HasSshCredentials() bool {
	if o != nil && o.SshCredentials.IsSet() {
		return true
	}

	return false
}

// SetSshCredentials gets a reference to the given NullableInt32 and assigns it to the SshCredentials field.
func (o *ReplicationCountEligibleManualSnapshots0) SetSshCredentials(v int32) {
	o.SshCredentials.Set(&v)
}

// SetSshCredentialsNil sets the value for SshCredentials to be an explicit nil
func (o *ReplicationCountEligibleManualSnapshots0) SetSshCredentialsNil() {
	o.SshCredentials.Set(nil)
}

// UnsetSshCredentials ensures that no value is present for SshCredentials, not even an explicit nil
func (o *ReplicationCountEligibleManualSnapshots0) UnsetSshCredentials() {
	o.SshCredentials.Unset()
}

func (o ReplicationCountEligibleManualSnapshots0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationCountEligibleManualSnapshots0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Datasets) {
		toSerialize["datasets"] = o.Datasets
	}
	if !IsNil(o.NamingSchema) {
		toSerialize["naming_schema"] = o.NamingSchema
	}
	if o.NameRegex.IsSet() {
		toSerialize["name_regex"] = o.NameRegex.Get()
	}
	if !IsNil(o.Transport) {
		toSerialize["transport"] = o.Transport
	}
	if o.SshCredentials.IsSet() {
		toSerialize["ssh_credentials"] = o.SshCredentials.Get()
	}
	return toSerialize, nil
}

type NullableReplicationCountEligibleManualSnapshots0 struct {
	value *ReplicationCountEligibleManualSnapshots0
	isSet bool
}

func (v NullableReplicationCountEligibleManualSnapshots0) Get() *ReplicationCountEligibleManualSnapshots0 {
	return v.value
}

func (v *NullableReplicationCountEligibleManualSnapshots0) Set(val *ReplicationCountEligibleManualSnapshots0) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationCountEligibleManualSnapshots0) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationCountEligibleManualSnapshots0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationCountEligibleManualSnapshots0(val *ReplicationCountEligibleManualSnapshots0) *NullableReplicationCountEligibleManualSnapshots0 {
	return &NullableReplicationCountEligibleManualSnapshots0{value: val, isSet: true}
}

func (v NullableReplicationCountEligibleManualSnapshots0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationCountEligibleManualSnapshots0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
