/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the ServiceStop1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceStop1{}

// ServiceStop1 struct for ServiceStop1
type ServiceStop1 struct {
	HaPropagate *bool `json:"ha_propagate,omitempty"`
	Silent      *bool `json:"silent,omitempty"`
}

// NewServiceStop1 instantiates a new ServiceStop1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceStop1() *ServiceStop1 {
	this := ServiceStop1{}
	var haPropagate bool
	this.HaPropagate = &haPropagate
	var silent bool
	this.Silent = &silent
	return &this
}

// NewServiceStop1WithDefaults instantiates a new ServiceStop1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceStop1WithDefaults() *ServiceStop1 {
	this := ServiceStop1{}
	var haPropagate bool
	this.HaPropagate = &haPropagate
	var silent bool
	this.Silent = &silent
	return &this
}

// GetHaPropagate returns the HaPropagate field value if set, zero value otherwise.
func (o *ServiceStop1) GetHaPropagate() bool {
	if o == nil || IsNil(o.HaPropagate) {
		var ret bool
		return ret
	}
	return *o.HaPropagate
}

// GetHaPropagateOk returns a tuple with the HaPropagate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStop1) GetHaPropagateOk() (*bool, bool) {
	if o == nil || IsNil(o.HaPropagate) {
		return nil, false
	}
	return o.HaPropagate, true
}

// HasHaPropagate returns a boolean if a field has been set.
func (o *ServiceStop1) HasHaPropagate() bool {
	if o != nil && !IsNil(o.HaPropagate) {
		return true
	}

	return false
}

// SetHaPropagate gets a reference to the given bool and assigns it to the HaPropagate field.
func (o *ServiceStop1) SetHaPropagate(v bool) {
	o.HaPropagate = &v
}

// GetSilent returns the Silent field value if set, zero value otherwise.
func (o *ServiceStop1) GetSilent() bool {
	if o == nil || IsNil(o.Silent) {
		var ret bool
		return ret
	}
	return *o.Silent
}

// GetSilentOk returns a tuple with the Silent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStop1) GetSilentOk() (*bool, bool) {
	if o == nil || IsNil(o.Silent) {
		return nil, false
	}
	return o.Silent, true
}

// HasSilent returns a boolean if a field has been set.
func (o *ServiceStop1) HasSilent() bool {
	if o != nil && !IsNil(o.Silent) {
		return true
	}

	return false
}

// SetSilent gets a reference to the given bool and assigns it to the Silent field.
func (o *ServiceStop1) SetSilent(v bool) {
	o.Silent = &v
}

func (o ServiceStop1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceStop1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HaPropagate) {
		toSerialize["ha_propagate"] = o.HaPropagate
	}
	if !IsNil(o.Silent) {
		toSerialize["silent"] = o.Silent
	}
	return toSerialize, nil
}

type NullableServiceStop1 struct {
	value *ServiceStop1
	isSet bool
}

func (v NullableServiceStop1) Get() *ServiceStop1 {
	return v.value
}

func (v *NullableServiceStop1) Set(val *ServiceStop1) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceStop1) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceStop1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceStop1(val *ServiceStop1) *NullableServiceStop1 {
	return &NullableServiceStop1{value: val, isSet: true}
}

func (v NullableServiceStop1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceStop1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
