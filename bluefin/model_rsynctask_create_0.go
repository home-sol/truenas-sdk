/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the RsynctaskCreate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RsynctaskCreate0{}

// RsynctaskCreate0 struct for RsynctaskCreate0
type RsynctaskCreate0 struct {
	// See the comment in Rsyncmod about `path` length limits.
	Path *string `json:"path,omitempty"`
	// In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used to connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.
	User *string `json:"user,omitempty"`
	// `mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode. `remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.
	Mode *string `json:"mode,omitempty"`
	// `remotehost` is ip address or hostname of the remote system. If username differs on the remote host, \"username@remote_host\" format should be used. `remotehost` and `remoteport` are not used in this case.
	Remotehost NullableString `json:"remotehost,omitempty"`
	// `remotehost` and `remoteport` are not used in this case.
	Remoteport NullableInt32 `json:"remoteport,omitempty"`
	// `remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.
	Remotemodule NullableString `json:"remotemodule,omitempty"`
	// In SSH mode, if `ssh_credentials` (a keychain credential of `SSH_CREDENTIALS` type) is specified then it is used to connect to the remote host. If it is not specified, then keys in `user`'s .ssh directory are used.
	SshCredentials NullableInt32 `json:"ssh_credentials,omitempty"`
	// `remotepath` specifies the path on the remote system.
	Remotepath *string `json:"remotepath,omitempty"`
	// `validate_rpath` is a boolean which when sets validates the existence of the remote path.
	ValidateRpath *bool `json:"validate_rpath,omitempty"`
	// `direction` specifies if data should be PULLED or PUSHED from the remote system.
	Direction *string   `json:"direction,omitempty"`
	Desc      *string   `json:"desc,omitempty"`
	Schedule  *Schedule `json:"schedule,omitempty"`
	Recursive *bool     `json:"recursive,omitempty"`
	Times     *bool     `json:"times,omitempty"`
	// `compress` when set reduces the size of the data which is to be transmitted.
	Compress *bool `json:"compress,omitempty"`
	// `archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group, and special files.
	Archive *bool `json:"archive,omitempty"`
	// `delete` when set deletes files in the destination directory which do not exist in the source directory.
	Delete *bool `json:"delete,omitempty"`
	Quiet  *bool `json:"quiet,omitempty"`
	// `preserveperm` when set preserves original file permissions.
	Preserveperm *bool    `json:"preserveperm,omitempty"`
	Preserveattr *bool    `json:"preserveattr,omitempty"`
	Delayupdates *bool    `json:"delayupdates,omitempty"`
	Extra        []string `json:"extra,omitempty"`
	Enabled      *bool    `json:"enabled,omitempty"`
}

// NewRsynctaskCreate0 instantiates a new RsynctaskCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRsynctaskCreate0() *RsynctaskCreate0 {
	this := RsynctaskCreate0{}
	var mode string
	this.Mode = &mode
	var validateRpath bool
	this.ValidateRpath = &validateRpath
	var direction string
	this.Direction = &direction
	var schedule Schedule
	this.Schedule = &schedule
	var enabled bool
	this.Enabled = &enabled
	return &this
}

// NewRsynctaskCreate0WithDefaults instantiates a new RsynctaskCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRsynctaskCreate0WithDefaults() *RsynctaskCreate0 {
	this := RsynctaskCreate0{}
	var mode string
	this.Mode = &mode
	var validateRpath bool
	this.ValidateRpath = &validateRpath
	var direction string
	this.Direction = &direction
	var schedule Schedule
	this.Schedule = &schedule
	var enabled bool
	this.Enabled = &enabled
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *RsynctaskCreate0) SetPath(v string) {
	o.Path = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *RsynctaskCreate0) SetUser(v string) {
	o.User = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *RsynctaskCreate0) SetMode(v string) {
	o.Mode = &v
}

// GetRemotehost returns the Remotehost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RsynctaskCreate0) GetRemotehost() string {
	if o == nil || IsNil(o.Remotehost.Get()) {
		var ret string
		return ret
	}
	return *o.Remotehost.Get()
}

// GetRemotehostOk returns a tuple with the Remotehost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RsynctaskCreate0) GetRemotehostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Remotehost.Get(), o.Remotehost.IsSet()
}

// HasRemotehost returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasRemotehost() bool {
	if o != nil && o.Remotehost.IsSet() {
		return true
	}

	return false
}

// SetRemotehost gets a reference to the given NullableString and assigns it to the Remotehost field.
func (o *RsynctaskCreate0) SetRemotehost(v string) {
	o.Remotehost.Set(&v)
}

// SetRemotehostNil sets the value for Remotehost to be an explicit nil
func (o *RsynctaskCreate0) SetRemotehostNil() {
	o.Remotehost.Set(nil)
}

// UnsetRemotehost ensures that no value is present for Remotehost, not even an explicit nil
func (o *RsynctaskCreate0) UnsetRemotehost() {
	o.Remotehost.Unset()
}

// GetRemoteport returns the Remoteport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RsynctaskCreate0) GetRemoteport() int32 {
	if o == nil || IsNil(o.Remoteport.Get()) {
		var ret int32
		return ret
	}
	return *o.Remoteport.Get()
}

// GetRemoteportOk returns a tuple with the Remoteport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RsynctaskCreate0) GetRemoteportOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Remoteport.Get(), o.Remoteport.IsSet()
}

// HasRemoteport returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasRemoteport() bool {
	if o != nil && o.Remoteport.IsSet() {
		return true
	}

	return false
}

// SetRemoteport gets a reference to the given NullableInt32 and assigns it to the Remoteport field.
func (o *RsynctaskCreate0) SetRemoteport(v int32) {
	o.Remoteport.Set(&v)
}

// SetRemoteportNil sets the value for Remoteport to be an explicit nil
func (o *RsynctaskCreate0) SetRemoteportNil() {
	o.Remoteport.Set(nil)
}

// UnsetRemoteport ensures that no value is present for Remoteport, not even an explicit nil
func (o *RsynctaskCreate0) UnsetRemoteport() {
	o.Remoteport.Unset()
}

// GetRemotemodule returns the Remotemodule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RsynctaskCreate0) GetRemotemodule() string {
	if o == nil || IsNil(o.Remotemodule.Get()) {
		var ret string
		return ret
	}
	return *o.Remotemodule.Get()
}

// GetRemotemoduleOk returns a tuple with the Remotemodule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RsynctaskCreate0) GetRemotemoduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Remotemodule.Get(), o.Remotemodule.IsSet()
}

// HasRemotemodule returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasRemotemodule() bool {
	if o != nil && o.Remotemodule.IsSet() {
		return true
	}

	return false
}

// SetRemotemodule gets a reference to the given NullableString and assigns it to the Remotemodule field.
func (o *RsynctaskCreate0) SetRemotemodule(v string) {
	o.Remotemodule.Set(&v)
}

// SetRemotemoduleNil sets the value for Remotemodule to be an explicit nil
func (o *RsynctaskCreate0) SetRemotemoduleNil() {
	o.Remotemodule.Set(nil)
}

// UnsetRemotemodule ensures that no value is present for Remotemodule, not even an explicit nil
func (o *RsynctaskCreate0) UnsetRemotemodule() {
	o.Remotemodule.Unset()
}

// GetSshCredentials returns the SshCredentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RsynctaskCreate0) GetSshCredentials() int32 {
	if o == nil || IsNil(o.SshCredentials.Get()) {
		var ret int32
		return ret
	}
	return *o.SshCredentials.Get()
}

// GetSshCredentialsOk returns a tuple with the SshCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RsynctaskCreate0) GetSshCredentialsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SshCredentials.Get(), o.SshCredentials.IsSet()
}

// HasSshCredentials returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasSshCredentials() bool {
	if o != nil && o.SshCredentials.IsSet() {
		return true
	}

	return false
}

// SetSshCredentials gets a reference to the given NullableInt32 and assigns it to the SshCredentials field.
func (o *RsynctaskCreate0) SetSshCredentials(v int32) {
	o.SshCredentials.Set(&v)
}

// SetSshCredentialsNil sets the value for SshCredentials to be an explicit nil
func (o *RsynctaskCreate0) SetSshCredentialsNil() {
	o.SshCredentials.Set(nil)
}

// UnsetSshCredentials ensures that no value is present for SshCredentials, not even an explicit nil
func (o *RsynctaskCreate0) UnsetSshCredentials() {
	o.SshCredentials.Unset()
}

// GetRemotepath returns the Remotepath field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetRemotepath() string {
	if o == nil || IsNil(o.Remotepath) {
		var ret string
		return ret
	}
	return *o.Remotepath
}

// GetRemotepathOk returns a tuple with the Remotepath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetRemotepathOk() (*string, bool) {
	if o == nil || IsNil(o.Remotepath) {
		return nil, false
	}
	return o.Remotepath, true
}

// HasRemotepath returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasRemotepath() bool {
	if o != nil && !IsNil(o.Remotepath) {
		return true
	}

	return false
}

// SetRemotepath gets a reference to the given string and assigns it to the Remotepath field.
func (o *RsynctaskCreate0) SetRemotepath(v string) {
	o.Remotepath = &v
}

// GetValidateRpath returns the ValidateRpath field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetValidateRpath() bool {
	if o == nil || IsNil(o.ValidateRpath) {
		var ret bool
		return ret
	}
	return *o.ValidateRpath
}

// GetValidateRpathOk returns a tuple with the ValidateRpath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetValidateRpathOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidateRpath) {
		return nil, false
	}
	return o.ValidateRpath, true
}

// HasValidateRpath returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasValidateRpath() bool {
	if o != nil && !IsNil(o.ValidateRpath) {
		return true
	}

	return false
}

// SetValidateRpath gets a reference to the given bool and assigns it to the ValidateRpath field.
func (o *RsynctaskCreate0) SetValidateRpath(v bool) {
	o.ValidateRpath = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *RsynctaskCreate0) SetDirection(v string) {
	o.Direction = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *RsynctaskCreate0) SetDesc(v string) {
	o.Desc = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetSchedule() Schedule {
	if o == nil || IsNil(o.Schedule) {
		var ret Schedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetScheduleOk() (*Schedule, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given Schedule and assigns it to the Schedule field.
func (o *RsynctaskCreate0) SetSchedule(v Schedule) {
	o.Schedule = &v
}

// GetRecursive returns the Recursive field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetRecursive() bool {
	if o == nil || IsNil(o.Recursive) {
		var ret bool
		return ret
	}
	return *o.Recursive
}

// GetRecursiveOk returns a tuple with the Recursive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetRecursiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Recursive) {
		return nil, false
	}
	return o.Recursive, true
}

// HasRecursive returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasRecursive() bool {
	if o != nil && !IsNil(o.Recursive) {
		return true
	}

	return false
}

// SetRecursive gets a reference to the given bool and assigns it to the Recursive field.
func (o *RsynctaskCreate0) SetRecursive(v bool) {
	o.Recursive = &v
}

// GetTimes returns the Times field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetTimes() bool {
	if o == nil || IsNil(o.Times) {
		var ret bool
		return ret
	}
	return *o.Times
}

// GetTimesOk returns a tuple with the Times field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetTimesOk() (*bool, bool) {
	if o == nil || IsNil(o.Times) {
		return nil, false
	}
	return o.Times, true
}

// HasTimes returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasTimes() bool {
	if o != nil && !IsNil(o.Times) {
		return true
	}

	return false
}

// SetTimes gets a reference to the given bool and assigns it to the Times field.
func (o *RsynctaskCreate0) SetTimes(v bool) {
	o.Times = &v
}

// GetCompress returns the Compress field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetCompress() bool {
	if o == nil || IsNil(o.Compress) {
		var ret bool
		return ret
	}
	return *o.Compress
}

// GetCompressOk returns a tuple with the Compress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetCompressOk() (*bool, bool) {
	if o == nil || IsNil(o.Compress) {
		return nil, false
	}
	return o.Compress, true
}

// HasCompress returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasCompress() bool {
	if o != nil && !IsNil(o.Compress) {
		return true
	}

	return false
}

// SetCompress gets a reference to the given bool and assigns it to the Compress field.
func (o *RsynctaskCreate0) SetCompress(v bool) {
	o.Compress = &v
}

// GetArchive returns the Archive field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetArchive() bool {
	if o == nil || IsNil(o.Archive) {
		var ret bool
		return ret
	}
	return *o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetArchiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Archive) {
		return nil, false
	}
	return o.Archive, true
}

// HasArchive returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasArchive() bool {
	if o != nil && !IsNil(o.Archive) {
		return true
	}

	return false
}

// SetArchive gets a reference to the given bool and assigns it to the Archive field.
func (o *RsynctaskCreate0) SetArchive(v bool) {
	o.Archive = &v
}

// GetDelete returns the Delete field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetDelete() bool {
	if o == nil || IsNil(o.Delete) {
		var ret bool
		return ret
	}
	return *o.Delete
}

// GetDeleteOk returns a tuple with the Delete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Delete) {
		return nil, false
	}
	return o.Delete, true
}

// HasDelete returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasDelete() bool {
	if o != nil && !IsNil(o.Delete) {
		return true
	}

	return false
}

// SetDelete gets a reference to the given bool and assigns it to the Delete field.
func (o *RsynctaskCreate0) SetDelete(v bool) {
	o.Delete = &v
}

// GetQuiet returns the Quiet field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetQuiet() bool {
	if o == nil || IsNil(o.Quiet) {
		var ret bool
		return ret
	}
	return *o.Quiet
}

// GetQuietOk returns a tuple with the Quiet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetQuietOk() (*bool, bool) {
	if o == nil || IsNil(o.Quiet) {
		return nil, false
	}
	return o.Quiet, true
}

// HasQuiet returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasQuiet() bool {
	if o != nil && !IsNil(o.Quiet) {
		return true
	}

	return false
}

// SetQuiet gets a reference to the given bool and assigns it to the Quiet field.
func (o *RsynctaskCreate0) SetQuiet(v bool) {
	o.Quiet = &v
}

// GetPreserveperm returns the Preserveperm field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetPreserveperm() bool {
	if o == nil || IsNil(o.Preserveperm) {
		var ret bool
		return ret
	}
	return *o.Preserveperm
}

// GetPreservepermOk returns a tuple with the Preserveperm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetPreservepermOk() (*bool, bool) {
	if o == nil || IsNil(o.Preserveperm) {
		return nil, false
	}
	return o.Preserveperm, true
}

// HasPreserveperm returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasPreserveperm() bool {
	if o != nil && !IsNil(o.Preserveperm) {
		return true
	}

	return false
}

// SetPreserveperm gets a reference to the given bool and assigns it to the Preserveperm field.
func (o *RsynctaskCreate0) SetPreserveperm(v bool) {
	o.Preserveperm = &v
}

// GetPreserveattr returns the Preserveattr field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetPreserveattr() bool {
	if o == nil || IsNil(o.Preserveattr) {
		var ret bool
		return ret
	}
	return *o.Preserveattr
}

// GetPreserveattrOk returns a tuple with the Preserveattr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetPreserveattrOk() (*bool, bool) {
	if o == nil || IsNil(o.Preserveattr) {
		return nil, false
	}
	return o.Preserveattr, true
}

// HasPreserveattr returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasPreserveattr() bool {
	if o != nil && !IsNil(o.Preserveattr) {
		return true
	}

	return false
}

// SetPreserveattr gets a reference to the given bool and assigns it to the Preserveattr field.
func (o *RsynctaskCreate0) SetPreserveattr(v bool) {
	o.Preserveattr = &v
}

// GetDelayupdates returns the Delayupdates field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetDelayupdates() bool {
	if o == nil || IsNil(o.Delayupdates) {
		var ret bool
		return ret
	}
	return *o.Delayupdates
}

// GetDelayupdatesOk returns a tuple with the Delayupdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetDelayupdatesOk() (*bool, bool) {
	if o == nil || IsNil(o.Delayupdates) {
		return nil, false
	}
	return o.Delayupdates, true
}

// HasDelayupdates returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasDelayupdates() bool {
	if o != nil && !IsNil(o.Delayupdates) {
		return true
	}

	return false
}

// SetDelayupdates gets a reference to the given bool and assigns it to the Delayupdates field.
func (o *RsynctaskCreate0) SetDelayupdates(v bool) {
	o.Delayupdates = &v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetExtra() []string {
	if o == nil || IsNil(o.Extra) {
		var ret []string
		return ret
	}
	return o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetExtraOk() ([]string, bool) {
	if o == nil || IsNil(o.Extra) {
		return nil, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasExtra() bool {
	if o != nil && !IsNil(o.Extra) {
		return true
	}

	return false
}

// SetExtra gets a reference to the given []string and assigns it to the Extra field.
func (o *RsynctaskCreate0) SetExtra(v []string) {
	o.Extra = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *RsynctaskCreate0) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RsynctaskCreate0) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *RsynctaskCreate0) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *RsynctaskCreate0) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o RsynctaskCreate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RsynctaskCreate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if o.Remotehost.IsSet() {
		toSerialize["remotehost"] = o.Remotehost.Get()
	}
	if o.Remoteport.IsSet() {
		toSerialize["remoteport"] = o.Remoteport.Get()
	}
	if o.Remotemodule.IsSet() {
		toSerialize["remotemodule"] = o.Remotemodule.Get()
	}
	if o.SshCredentials.IsSet() {
		toSerialize["ssh_credentials"] = o.SshCredentials.Get()
	}
	if !IsNil(o.Remotepath) {
		toSerialize["remotepath"] = o.Remotepath
	}
	if !IsNil(o.ValidateRpath) {
		toSerialize["validate_rpath"] = o.ValidateRpath
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.Recursive) {
		toSerialize["recursive"] = o.Recursive
	}
	if !IsNil(o.Times) {
		toSerialize["times"] = o.Times
	}
	if !IsNil(o.Compress) {
		toSerialize["compress"] = o.Compress
	}
	if !IsNil(o.Archive) {
		toSerialize["archive"] = o.Archive
	}
	if !IsNil(o.Delete) {
		toSerialize["delete"] = o.Delete
	}
	if !IsNil(o.Quiet) {
		toSerialize["quiet"] = o.Quiet
	}
	if !IsNil(o.Preserveperm) {
		toSerialize["preserveperm"] = o.Preserveperm
	}
	if !IsNil(o.Preserveattr) {
		toSerialize["preserveattr"] = o.Preserveattr
	}
	if !IsNil(o.Delayupdates) {
		toSerialize["delayupdates"] = o.Delayupdates
	}
	if !IsNil(o.Extra) {
		toSerialize["extra"] = o.Extra
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableRsynctaskCreate0 struct {
	value *RsynctaskCreate0
	isSet bool
}

func (v NullableRsynctaskCreate0) Get() *RsynctaskCreate0 {
	return v.value
}

func (v *NullableRsynctaskCreate0) Set(val *RsynctaskCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableRsynctaskCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableRsynctaskCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRsynctaskCreate0(val *RsynctaskCreate0) *NullableRsynctaskCreate0 {
	return &NullableRsynctaskCreate0{value: val, isSet: true}
}

func (v NullableRsynctaskCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRsynctaskCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
