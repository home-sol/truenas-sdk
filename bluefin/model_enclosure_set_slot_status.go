/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the EnclosureSetSlotStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnclosureSetSlotStatus{}

// EnclosureSetSlotStatus struct for EnclosureSetSlotStatus
type EnclosureSetSlotStatus struct {
	EnclosureId          *string                  `json:"enclosure_id,omitempty"`
	Slot                 *int32                   `json:"slot,omitempty"`
	Status               *EnclosureSetSlotStatus2 `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EnclosureSetSlotStatus EnclosureSetSlotStatus

// NewEnclosureSetSlotStatus instantiates a new EnclosureSetSlotStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnclosureSetSlotStatus() *EnclosureSetSlotStatus {
	this := EnclosureSetSlotStatus{}
	return &this
}

// NewEnclosureSetSlotStatusWithDefaults instantiates a new EnclosureSetSlotStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnclosureSetSlotStatusWithDefaults() *EnclosureSetSlotStatus {
	this := EnclosureSetSlotStatus{}
	return &this
}

// GetEnclosureId returns the EnclosureId field value if set, zero value otherwise.
func (o *EnclosureSetSlotStatus) GetEnclosureId() string {
	if o == nil || IsNil(o.EnclosureId) {
		var ret string
		return ret
	}
	return *o.EnclosureId
}

// GetEnclosureIdOk returns a tuple with the EnclosureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosureSetSlotStatus) GetEnclosureIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnclosureId) {
		return nil, false
	}
	return o.EnclosureId, true
}

// HasEnclosureId returns a boolean if a field has been set.
func (o *EnclosureSetSlotStatus) HasEnclosureId() bool {
	if o != nil && !IsNil(o.EnclosureId) {
		return true
	}

	return false
}

// SetEnclosureId gets a reference to the given string and assigns it to the EnclosureId field.
func (o *EnclosureSetSlotStatus) SetEnclosureId(v string) {
	o.EnclosureId = &v
}

// GetSlot returns the Slot field value if set, zero value otherwise.
func (o *EnclosureSetSlotStatus) GetSlot() int32 {
	if o == nil || IsNil(o.Slot) {
		var ret int32
		return ret
	}
	return *o.Slot
}

// GetSlotOk returns a tuple with the Slot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosureSetSlotStatus) GetSlotOk() (*int32, bool) {
	if o == nil || IsNil(o.Slot) {
		return nil, false
	}
	return o.Slot, true
}

// HasSlot returns a boolean if a field has been set.
func (o *EnclosureSetSlotStatus) HasSlot() bool {
	if o != nil && !IsNil(o.Slot) {
		return true
	}

	return false
}

// SetSlot gets a reference to the given int32 and assigns it to the Slot field.
func (o *EnclosureSetSlotStatus) SetSlot(v int32) {
	o.Slot = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EnclosureSetSlotStatus) GetStatus() EnclosureSetSlotStatus2 {
	if o == nil || IsNil(o.Status) {
		var ret EnclosureSetSlotStatus2
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnclosureSetSlotStatus) GetStatusOk() (*EnclosureSetSlotStatus2, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EnclosureSetSlotStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given EnclosureSetSlotStatus2 and assigns it to the Status field.
func (o *EnclosureSetSlotStatus) SetStatus(v EnclosureSetSlotStatus2) {
	o.Status = &v
}

func (o EnclosureSetSlotStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnclosureSetSlotStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnclosureId) {
		toSerialize["enclosure_id"] = o.EnclosureId
	}
	if !IsNil(o.Slot) {
		toSerialize["slot"] = o.Slot
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EnclosureSetSlotStatus) UnmarshalJSON(bytes []byte) (err error) {
	varEnclosureSetSlotStatus := _EnclosureSetSlotStatus{}

	if err = json.Unmarshal(bytes, &varEnclosureSetSlotStatus); err == nil {
		*o = EnclosureSetSlotStatus(varEnclosureSetSlotStatus)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "enclosure_id")
		delete(additionalProperties, "slot")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEnclosureSetSlotStatus struct {
	value *EnclosureSetSlotStatus
	isSet bool
}

func (v NullableEnclosureSetSlotStatus) Get() *EnclosureSetSlotStatus {
	return v.value
}

func (v *NullableEnclosureSetSlotStatus) Set(val *EnclosureSetSlotStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableEnclosureSetSlotStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableEnclosureSetSlotStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnclosureSetSlotStatus(val *EnclosureSetSlotStatus) *NullableEnclosureSetSlotStatus {
	return &NullableEnclosureSetSlotStatus{value: val, isSet: true}
}

func (v NullableEnclosureSetSlotStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnclosureSetSlotStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
