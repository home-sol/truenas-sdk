/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the FilesystemAcltemplateCreate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesystemAcltemplateCreate0{}

// FilesystemAcltemplateCreate0 struct for FilesystemAcltemplateCreate0
type FilesystemAcltemplateCreate0 struct {
	Name    *string                          `json:"name,omitempty"`
	Acltype *string                          `json:"acltype,omitempty"`
	Comment *string                          `json:"comment,omitempty"`
	Acl     *FilesystemAcltemplateCreate0Acl `json:"acl,omitempty"`
}

// NewFilesystemAcltemplateCreate0 instantiates a new FilesystemAcltemplateCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesystemAcltemplateCreate0() *FilesystemAcltemplateCreate0 {
	this := FilesystemAcltemplateCreate0{}
	return &this
}

// NewFilesystemAcltemplateCreate0WithDefaults instantiates a new FilesystemAcltemplateCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesystemAcltemplateCreate0WithDefaults() *FilesystemAcltemplateCreate0 {
	this := FilesystemAcltemplateCreate0{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FilesystemAcltemplateCreate0) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesystemAcltemplateCreate0) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FilesystemAcltemplateCreate0) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FilesystemAcltemplateCreate0) SetName(v string) {
	o.Name = &v
}

// GetAcltype returns the Acltype field value if set, zero value otherwise.
func (o *FilesystemAcltemplateCreate0) GetAcltype() string {
	if o == nil || IsNil(o.Acltype) {
		var ret string
		return ret
	}
	return *o.Acltype
}

// GetAcltypeOk returns a tuple with the Acltype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesystemAcltemplateCreate0) GetAcltypeOk() (*string, bool) {
	if o == nil || IsNil(o.Acltype) {
		return nil, false
	}
	return o.Acltype, true
}

// HasAcltype returns a boolean if a field has been set.
func (o *FilesystemAcltemplateCreate0) HasAcltype() bool {
	if o != nil && !IsNil(o.Acltype) {
		return true
	}

	return false
}

// SetAcltype gets a reference to the given string and assigns it to the Acltype field.
func (o *FilesystemAcltemplateCreate0) SetAcltype(v string) {
	o.Acltype = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *FilesystemAcltemplateCreate0) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesystemAcltemplateCreate0) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *FilesystemAcltemplateCreate0) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *FilesystemAcltemplateCreate0) SetComment(v string) {
	o.Comment = &v
}

// GetAcl returns the Acl field value if set, zero value otherwise.
func (o *FilesystemAcltemplateCreate0) GetAcl() FilesystemAcltemplateCreate0Acl {
	if o == nil || IsNil(o.Acl) {
		var ret FilesystemAcltemplateCreate0Acl
		return ret
	}
	return *o.Acl
}

// GetAclOk returns a tuple with the Acl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesystemAcltemplateCreate0) GetAclOk() (*FilesystemAcltemplateCreate0Acl, bool) {
	if o == nil || IsNil(o.Acl) {
		return nil, false
	}
	return o.Acl, true
}

// HasAcl returns a boolean if a field has been set.
func (o *FilesystemAcltemplateCreate0) HasAcl() bool {
	if o != nil && !IsNil(o.Acl) {
		return true
	}

	return false
}

// SetAcl gets a reference to the given FilesystemAcltemplateCreate0Acl and assigns it to the Acl field.
func (o *FilesystemAcltemplateCreate0) SetAcl(v FilesystemAcltemplateCreate0Acl) {
	o.Acl = &v
}

func (o FilesystemAcltemplateCreate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesystemAcltemplateCreate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Acltype) {
		toSerialize["acltype"] = o.Acltype
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Acl) {
		toSerialize["acl"] = o.Acl
	}
	return toSerialize, nil
}

type NullableFilesystemAcltemplateCreate0 struct {
	value *FilesystemAcltemplateCreate0
	isSet bool
}

func (v NullableFilesystemAcltemplateCreate0) Get() *FilesystemAcltemplateCreate0 {
	return v.value
}

func (v *NullableFilesystemAcltemplateCreate0) Set(val *FilesystemAcltemplateCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesystemAcltemplateCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesystemAcltemplateCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesystemAcltemplateCreate0(val *FilesystemAcltemplateCreate0) *NullableFilesystemAcltemplateCreate0 {
	return &NullableFilesystemAcltemplateCreate0{value: val, isSet: true}
}

func (v NullableFilesystemAcltemplateCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesystemAcltemplateCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
