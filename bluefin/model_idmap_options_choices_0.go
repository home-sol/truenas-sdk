/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
	"fmt"
)

// IdmapOptionsChoices0 the model 'IdmapOptionsChoices0'
type IdmapOptionsChoices0 string

// List of idmap_options_choices_0
const (
	AD      IdmapOptionsChoices0 = "AD"
	AUTORID IdmapOptionsChoices0 = "AUTORID"
	LDAP    IdmapOptionsChoices0 = "LDAP"
	NSS     IdmapOptionsChoices0 = "NSS"
	RFC2307 IdmapOptionsChoices0 = "RFC2307"
	RID     IdmapOptionsChoices0 = "RID"
	TDB     IdmapOptionsChoices0 = "TDB"
)

// All allowed values of IdmapOptionsChoices0 enum
var AllowedIdmapOptionsChoices0EnumValues = []IdmapOptionsChoices0{
	"AD",
	"AUTORID",
	"LDAP",
	"NSS",
	"RFC2307",
	"RID",
	"TDB",
}

func (v *IdmapOptionsChoices0) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := IdmapOptionsChoices0(value)
	for _, existing := range AllowedIdmapOptionsChoices0EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid IdmapOptionsChoices0", value)
}

// NewIdmapOptionsChoices0FromValue returns a pointer to a valid IdmapOptionsChoices0
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIdmapOptionsChoices0FromValue(v string) (*IdmapOptionsChoices0, error) {
	ev := IdmapOptionsChoices0(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for IdmapOptionsChoices0: valid values are %v", v, AllowedIdmapOptionsChoices0EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IdmapOptionsChoices0) IsValid() bool {
	for _, existing := range AllowedIdmapOptionsChoices0EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to idmap_options_choices_0 value
func (v IdmapOptionsChoices0) Ptr() *IdmapOptionsChoices0 {
	return &v
}

type NullableIdmapOptionsChoices0 struct {
	value *IdmapOptionsChoices0
	isSet bool
}

func (v NullableIdmapOptionsChoices0) Get() *IdmapOptionsChoices0 {
	return v.value
}

func (v *NullableIdmapOptionsChoices0) Set(val *IdmapOptionsChoices0) {
	v.value = val
	v.isSet = true
}

func (v NullableIdmapOptionsChoices0) IsSet() bool {
	return v.isSet
}

func (v *NullableIdmapOptionsChoices0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdmapOptionsChoices0(val *IdmapOptionsChoices0) *NullableIdmapOptionsChoices0 {
	return &NullableIdmapOptionsChoices0{value: val, isSet: true}
}

func (v NullableIdmapOptionsChoices0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdmapOptionsChoices0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
