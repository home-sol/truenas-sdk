/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the ContainerImagePull0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerImagePull0{}

// ContainerImagePull0 struct for ContainerImagePull0
type ContainerImagePull0 struct {
	DockerAuthentication *DockerAuthentication `json:"docker_authentication,omitempty"`
	// `from_image` is the name of the image to pull. Format for the name is \"registry/repo/image\" where registry may be omitted and it will default to docker registry in this case.
	FromImage *string `json:"from_image,omitempty"`
	// `tag` specifies tag of the image and defaults to `null`. In case of `null` it will retrieve all the tags of the image.
	Tag NullableString `json:"tag,omitempty"`
}

// NewContainerImagePull0 instantiates a new ContainerImagePull0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerImagePull0() *ContainerImagePull0 {
	this := ContainerImagePull0{}
	return &this
}

// NewContainerImagePull0WithDefaults instantiates a new ContainerImagePull0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerImagePull0WithDefaults() *ContainerImagePull0 {
	this := ContainerImagePull0{}
	return &this
}

// GetDockerAuthentication returns the DockerAuthentication field value if set, zero value otherwise.
func (o *ContainerImagePull0) GetDockerAuthentication() DockerAuthentication {
	if o == nil || IsNil(o.DockerAuthentication) {
		var ret DockerAuthentication
		return ret
	}
	return *o.DockerAuthentication
}

// GetDockerAuthenticationOk returns a tuple with the DockerAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImagePull0) GetDockerAuthenticationOk() (*DockerAuthentication, bool) {
	if o == nil || IsNil(o.DockerAuthentication) {
		return nil, false
	}
	return o.DockerAuthentication, true
}

// HasDockerAuthentication returns a boolean if a field has been set.
func (o *ContainerImagePull0) HasDockerAuthentication() bool {
	if o != nil && !IsNil(o.DockerAuthentication) {
		return true
	}

	return false
}

// SetDockerAuthentication gets a reference to the given DockerAuthentication and assigns it to the DockerAuthentication field.
func (o *ContainerImagePull0) SetDockerAuthentication(v DockerAuthentication) {
	o.DockerAuthentication = &v
}

// GetFromImage returns the FromImage field value if set, zero value otherwise.
func (o *ContainerImagePull0) GetFromImage() string {
	if o == nil || IsNil(o.FromImage) {
		var ret string
		return ret
	}
	return *o.FromImage
}

// GetFromImageOk returns a tuple with the FromImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImagePull0) GetFromImageOk() (*string, bool) {
	if o == nil || IsNil(o.FromImage) {
		return nil, false
	}
	return o.FromImage, true
}

// HasFromImage returns a boolean if a field has been set.
func (o *ContainerImagePull0) HasFromImage() bool {
	if o != nil && !IsNil(o.FromImage) {
		return true
	}

	return false
}

// SetFromImage gets a reference to the given string and assigns it to the FromImage field.
func (o *ContainerImagePull0) SetFromImage(v string) {
	o.FromImage = &v
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerImagePull0) GetTag() string {
	if o == nil || IsNil(o.Tag.Get()) {
		var ret string
		return ret
	}
	return *o.Tag.Get()
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerImagePull0) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tag.Get(), o.Tag.IsSet()
}

// HasTag returns a boolean if a field has been set.
func (o *ContainerImagePull0) HasTag() bool {
	if o != nil && o.Tag.IsSet() {
		return true
	}

	return false
}

// SetTag gets a reference to the given NullableString and assigns it to the Tag field.
func (o *ContainerImagePull0) SetTag(v string) {
	o.Tag.Set(&v)
}

// SetTagNil sets the value for Tag to be an explicit nil
func (o *ContainerImagePull0) SetTagNil() {
	o.Tag.Set(nil)
}

// UnsetTag ensures that no value is present for Tag, not even an explicit nil
func (o *ContainerImagePull0) UnsetTag() {
	o.Tag.Unset()
}

func (o ContainerImagePull0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerImagePull0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DockerAuthentication) {
		toSerialize["docker_authentication"] = o.DockerAuthentication
	}
	if !IsNil(o.FromImage) {
		toSerialize["from_image"] = o.FromImage
	}
	if o.Tag.IsSet() {
		toSerialize["tag"] = o.Tag.Get()
	}
	return toSerialize, nil
}

type NullableContainerImagePull0 struct {
	value *ContainerImagePull0
	isSet bool
}

func (v NullableContainerImagePull0) Get() *ContainerImagePull0 {
	return v.value
}

func (v *NullableContainerImagePull0) Set(val *ContainerImagePull0) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerImagePull0) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerImagePull0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerImagePull0(val *ContainerImagePull0) *NullableContainerImagePull0 {
	return &NullableContainerImagePull0{value: val, isSet: true}
}

func (v NullableContainerImagePull0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerImagePull0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
