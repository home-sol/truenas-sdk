/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the AuthGenerateToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthGenerateToken{}

// AuthGenerateToken struct for AuthGenerateToken
type AuthGenerateToken struct {
	// `ttl` stands for Time To Live, in seconds. The token will be invalidated if the connection has been inactive for a time greater than this.
	Ttl NullableInt32 `json:"ttl,omitempty"`
	// `attrs` is a general purpose object/dictionary to hold information about the token.
	Attrs                map[string]interface{} `json:"attrs,omitempty"`
	MatchOrigin          *bool                  `json:"match_origin,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AuthGenerateToken AuthGenerateToken

// NewAuthGenerateToken instantiates a new AuthGenerateToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthGenerateToken() *AuthGenerateToken {
	this := AuthGenerateToken{}
	var ttl int32 = 600
	this.Ttl = *NewNullableInt32(&ttl)
	var matchOrigin bool
	this.MatchOrigin = &matchOrigin
	return &this
}

// NewAuthGenerateTokenWithDefaults instantiates a new AuthGenerateToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthGenerateTokenWithDefaults() *AuthGenerateToken {
	this := AuthGenerateToken{}
	var ttl int32 = 600
	this.Ttl = *NewNullableInt32(&ttl)
	var matchOrigin bool
	this.MatchOrigin = &matchOrigin
	return &this
}

// GetTtl returns the Ttl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthGenerateToken) GetTtl() int32 {
	if o == nil || IsNil(o.Ttl.Get()) {
		var ret int32
		return ret
	}
	return *o.Ttl.Get()
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthGenerateToken) GetTtlOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ttl.Get(), o.Ttl.IsSet()
}

// HasTtl returns a boolean if a field has been set.
func (o *AuthGenerateToken) HasTtl() bool {
	if o != nil && o.Ttl.IsSet() {
		return true
	}

	return false
}

// SetTtl gets a reference to the given NullableInt32 and assigns it to the Ttl field.
func (o *AuthGenerateToken) SetTtl(v int32) {
	o.Ttl.Set(&v)
}

// SetTtlNil sets the value for Ttl to be an explicit nil
func (o *AuthGenerateToken) SetTtlNil() {
	o.Ttl.Set(nil)
}

// UnsetTtl ensures that no value is present for Ttl, not even an explicit nil
func (o *AuthGenerateToken) UnsetTtl() {
	o.Ttl.Unset()
}

// GetAttrs returns the Attrs field value if set, zero value otherwise.
func (o *AuthGenerateToken) GetAttrs() map[string]interface{} {
	if o == nil || IsNil(o.Attrs) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attrs
}

// GetAttrsOk returns a tuple with the Attrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthGenerateToken) GetAttrsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attrs) {
		return map[string]interface{}{}, false
	}
	return o.Attrs, true
}

// HasAttrs returns a boolean if a field has been set.
func (o *AuthGenerateToken) HasAttrs() bool {
	if o != nil && !IsNil(o.Attrs) {
		return true
	}

	return false
}

// SetAttrs gets a reference to the given map[string]interface{} and assigns it to the Attrs field.
func (o *AuthGenerateToken) SetAttrs(v map[string]interface{}) {
	o.Attrs = v
}

// GetMatchOrigin returns the MatchOrigin field value if set, zero value otherwise.
func (o *AuthGenerateToken) GetMatchOrigin() bool {
	if o == nil || IsNil(o.MatchOrigin) {
		var ret bool
		return ret
	}
	return *o.MatchOrigin
}

// GetMatchOriginOk returns a tuple with the MatchOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthGenerateToken) GetMatchOriginOk() (*bool, bool) {
	if o == nil || IsNil(o.MatchOrigin) {
		return nil, false
	}
	return o.MatchOrigin, true
}

// HasMatchOrigin returns a boolean if a field has been set.
func (o *AuthGenerateToken) HasMatchOrigin() bool {
	if o != nil && !IsNil(o.MatchOrigin) {
		return true
	}

	return false
}

// SetMatchOrigin gets a reference to the given bool and assigns it to the MatchOrigin field.
func (o *AuthGenerateToken) SetMatchOrigin(v bool) {
	o.MatchOrigin = &v
}

func (o AuthGenerateToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthGenerateToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Ttl.IsSet() {
		toSerialize["ttl"] = o.Ttl.Get()
	}
	if !IsNil(o.Attrs) {
		toSerialize["attrs"] = o.Attrs
	}
	if !IsNil(o.MatchOrigin) {
		toSerialize["match_origin"] = o.MatchOrigin
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthGenerateToken) UnmarshalJSON(bytes []byte) (err error) {
	varAuthGenerateToken := _AuthGenerateToken{}

	if err = json.Unmarshal(bytes, &varAuthGenerateToken); err == nil {
		*o = AuthGenerateToken(varAuthGenerateToken)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "ttl")
		delete(additionalProperties, "attrs")
		delete(additionalProperties, "match_origin")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthGenerateToken struct {
	value *AuthGenerateToken
	isSet bool
}

func (v NullableAuthGenerateToken) Get() *AuthGenerateToken {
	return v.value
}

func (v *NullableAuthGenerateToken) Set(val *AuthGenerateToken) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthGenerateToken) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthGenerateToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthGenerateToken(val *AuthGenerateToken) *NullableAuthGenerateToken {
	return &NullableAuthGenerateToken{value: val, isSet: true}
}

func (v NullableAuthGenerateToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthGenerateToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
