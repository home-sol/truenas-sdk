/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the IscsiHostSetInitiators type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IscsiHostSetInitiators{}

// IscsiHostSetInitiators struct for IscsiHostSetInitiators
type IscsiHostSetInitiators struct {
	// Associates initiator groups `ids` with host `id`.
	Id *int32 `json:"id,omitempty"`
	// Associates initiator groups `ids` with host `id`.
	Ids                  []int32 `json:"ids,omitempty"`
	Force                *bool   `json:"force,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IscsiHostSetInitiators IscsiHostSetInitiators

// NewIscsiHostSetInitiators instantiates a new IscsiHostSetInitiators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIscsiHostSetInitiators() *IscsiHostSetInitiators {
	this := IscsiHostSetInitiators{}
	var force bool
	this.Force = &force
	return &this
}

// NewIscsiHostSetInitiatorsWithDefaults instantiates a new IscsiHostSetInitiators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIscsiHostSetInitiatorsWithDefaults() *IscsiHostSetInitiators {
	this := IscsiHostSetInitiators{}
	var force bool
	this.Force = &force
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IscsiHostSetInitiators) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiHostSetInitiators) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IscsiHostSetInitiators) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *IscsiHostSetInitiators) SetId(v int32) {
	o.Id = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *IscsiHostSetInitiators) GetIds() []int32 {
	if o == nil || IsNil(o.Ids) {
		var ret []int32
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiHostSetInitiators) GetIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *IscsiHostSetInitiators) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []int32 and assigns it to the Ids field.
func (o *IscsiHostSetInitiators) SetIds(v []int32) {
	o.Ids = v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *IscsiHostSetInitiators) GetForce() bool {
	if o == nil || IsNil(o.Force) {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IscsiHostSetInitiators) GetForceOk() (*bool, bool) {
	if o == nil || IsNil(o.Force) {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *IscsiHostSetInitiators) HasForce() bool {
	if o != nil && !IsNil(o.Force) {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *IscsiHostSetInitiators) SetForce(v bool) {
	o.Force = &v
}

func (o IscsiHostSetInitiators) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IscsiHostSetInitiators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.Force) {
		toSerialize["force"] = o.Force
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IscsiHostSetInitiators) UnmarshalJSON(bytes []byte) (err error) {
	varIscsiHostSetInitiators := _IscsiHostSetInitiators{}

	if err = json.Unmarshal(bytes, &varIscsiHostSetInitiators); err == nil {
		*o = IscsiHostSetInitiators(varIscsiHostSetInitiators)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "ids")
		delete(additionalProperties, "force")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIscsiHostSetInitiators struct {
	value *IscsiHostSetInitiators
	isSet bool
}

func (v NullableIscsiHostSetInitiators) Get() *IscsiHostSetInitiators {
	return v.value
}

func (v *NullableIscsiHostSetInitiators) Set(val *IscsiHostSetInitiators) {
	v.value = val
	v.isSet = true
}

func (v NullableIscsiHostSetInitiators) IsSet() bool {
	return v.isSet
}

func (v *NullableIscsiHostSetInitiators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIscsiHostSetInitiators(val *IscsiHostSetInitiators) *NullableIscsiHostSetInitiators {
	return &NullableIscsiHostSetInitiators{value: val, isSet: true}
}

func (v NullableIscsiHostSetInitiators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIscsiHostSetInitiators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
