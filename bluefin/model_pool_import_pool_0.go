/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the PoolImportPool0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoolImportPool0{}

// PoolImportPool0 struct for PoolImportPool0
type PoolImportPool0 struct {
	Guid *string `json:"guid,omitempty"`
	// If a `name` is specified the pool will be imported using that new name.
	Name *string `json:"name,omitempty"`
	// `passphrase` DEPRECATED. GELI not supported on SCALE.
	Passphrase *string `json:"passphrase,omitempty"`
	// If `enable_attachments` is set to true, attachments that were disabled during pool export will be re-enabled.
	EnableAttachments *bool `json:"enable_attachments,omitempty"`
}

// NewPoolImportPool0 instantiates a new PoolImportPool0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolImportPool0() *PoolImportPool0 {
	this := PoolImportPool0{}
	return &this
}

// NewPoolImportPool0WithDefaults instantiates a new PoolImportPool0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolImportPool0WithDefaults() *PoolImportPool0 {
	this := PoolImportPool0{}
	return &this
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *PoolImportPool0) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolImportPool0) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *PoolImportPool0) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *PoolImportPool0) SetGuid(v string) {
	o.Guid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PoolImportPool0) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolImportPool0) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PoolImportPool0) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PoolImportPool0) SetName(v string) {
	o.Name = &v
}

// GetPassphrase returns the Passphrase field value if set, zero value otherwise.
func (o *PoolImportPool0) GetPassphrase() string {
	if o == nil || IsNil(o.Passphrase) {
		var ret string
		return ret
	}
	return *o.Passphrase
}

// GetPassphraseOk returns a tuple with the Passphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolImportPool0) GetPassphraseOk() (*string, bool) {
	if o == nil || IsNil(o.Passphrase) {
		return nil, false
	}
	return o.Passphrase, true
}

// HasPassphrase returns a boolean if a field has been set.
func (o *PoolImportPool0) HasPassphrase() bool {
	if o != nil && !IsNil(o.Passphrase) {
		return true
	}

	return false
}

// SetPassphrase gets a reference to the given string and assigns it to the Passphrase field.
func (o *PoolImportPool0) SetPassphrase(v string) {
	o.Passphrase = &v
}

// GetEnableAttachments returns the EnableAttachments field value if set, zero value otherwise.
func (o *PoolImportPool0) GetEnableAttachments() bool {
	if o == nil || IsNil(o.EnableAttachments) {
		var ret bool
		return ret
	}
	return *o.EnableAttachments
}

// GetEnableAttachmentsOk returns a tuple with the EnableAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolImportPool0) GetEnableAttachmentsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAttachments) {
		return nil, false
	}
	return o.EnableAttachments, true
}

// HasEnableAttachments returns a boolean if a field has been set.
func (o *PoolImportPool0) HasEnableAttachments() bool {
	if o != nil && !IsNil(o.EnableAttachments) {
		return true
	}

	return false
}

// SetEnableAttachments gets a reference to the given bool and assigns it to the EnableAttachments field.
func (o *PoolImportPool0) SetEnableAttachments(v bool) {
	o.EnableAttachments = &v
}

func (o PoolImportPool0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoolImportPool0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Passphrase) {
		toSerialize["passphrase"] = o.Passphrase
	}
	if !IsNil(o.EnableAttachments) {
		toSerialize["enable_attachments"] = o.EnableAttachments
	}
	return toSerialize, nil
}

type NullablePoolImportPool0 struct {
	value *PoolImportPool0
	isSet bool
}

func (v NullablePoolImportPool0) Get() *PoolImportPool0 {
	return v.value
}

func (v *NullablePoolImportPool0) Set(val *PoolImportPool0) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolImportPool0) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolImportPool0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolImportPool0(val *PoolImportPool0) *NullablePoolImportPool0 {
	return &NullablePoolImportPool0{value: val, isSet: true}
}

func (v NullablePoolImportPool0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolImportPool0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
