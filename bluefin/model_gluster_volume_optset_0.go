/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the GlusterVolumeOptset0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlusterVolumeOptset0{}

// GlusterVolumeOptset0 struct for GlusterVolumeOptset0
type GlusterVolumeOptset0 struct {
	// `name` String representing name of gluster volume
	Name *string                `json:"name,omitempty"`
	Opts map[string]interface{} `json:"opts,omitempty"`
}

// NewGlusterVolumeOptset0 instantiates a new GlusterVolumeOptset0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlusterVolumeOptset0() *GlusterVolumeOptset0 {
	this := GlusterVolumeOptset0{}
	return &this
}

// NewGlusterVolumeOptset0WithDefaults instantiates a new GlusterVolumeOptset0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlusterVolumeOptset0WithDefaults() *GlusterVolumeOptset0 {
	this := GlusterVolumeOptset0{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GlusterVolumeOptset0) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeOptset0) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GlusterVolumeOptset0) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GlusterVolumeOptset0) SetName(v string) {
	o.Name = &v
}

// GetOpts returns the Opts field value if set, zero value otherwise.
func (o *GlusterVolumeOptset0) GetOpts() map[string]interface{} {
	if o == nil || IsNil(o.Opts) {
		var ret map[string]interface{}
		return ret
	}
	return o.Opts
}

// GetOptsOk returns a tuple with the Opts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeOptset0) GetOptsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Opts) {
		return map[string]interface{}{}, false
	}
	return o.Opts, true
}

// HasOpts returns a boolean if a field has been set.
func (o *GlusterVolumeOptset0) HasOpts() bool {
	if o != nil && !IsNil(o.Opts) {
		return true
	}

	return false
}

// SetOpts gets a reference to the given map[string]interface{} and assigns it to the Opts field.
func (o *GlusterVolumeOptset0) SetOpts(v map[string]interface{}) {
	o.Opts = v
}

func (o GlusterVolumeOptset0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlusterVolumeOptset0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Opts) {
		toSerialize["opts"] = o.Opts
	}
	return toSerialize, nil
}

type NullableGlusterVolumeOptset0 struct {
	value *GlusterVolumeOptset0
	isSet bool
}

func (v NullableGlusterVolumeOptset0) Get() *GlusterVolumeOptset0 {
	return v.value
}

func (v *NullableGlusterVolumeOptset0) Set(val *GlusterVolumeOptset0) {
	v.value = val
	v.isSet = true
}

func (v NullableGlusterVolumeOptset0) IsSet() bool {
	return v.isSet
}

func (v *NullableGlusterVolumeOptset0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlusterVolumeOptset0(val *GlusterVolumeOptset0) *NullableGlusterVolumeOptset0 {
	return &NullableGlusterVolumeOptset0{value: val, isSet: true}
}

func (v NullableGlusterVolumeOptset0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlusterVolumeOptset0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
