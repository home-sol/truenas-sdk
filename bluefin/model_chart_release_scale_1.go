/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the ChartReleaseScale1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChartReleaseScale1{}

// ChartReleaseScale1 struct for ChartReleaseScale1
type ChartReleaseScale1 struct {
	ReplicaCount *int32 `json:"replica_count,omitempty"`
}

// NewChartReleaseScale1 instantiates a new ChartReleaseScale1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChartReleaseScale1() *ChartReleaseScale1 {
	this := ChartReleaseScale1{}
	return &this
}

// NewChartReleaseScale1WithDefaults instantiates a new ChartReleaseScale1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChartReleaseScale1WithDefaults() *ChartReleaseScale1 {
	this := ChartReleaseScale1{}
	return &this
}

// GetReplicaCount returns the ReplicaCount field value if set, zero value otherwise.
func (o *ChartReleaseScale1) GetReplicaCount() int32 {
	if o == nil || IsNil(o.ReplicaCount) {
		var ret int32
		return ret
	}
	return *o.ReplicaCount
}

// GetReplicaCountOk returns a tuple with the ReplicaCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleaseScale1) GetReplicaCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ReplicaCount) {
		return nil, false
	}
	return o.ReplicaCount, true
}

// HasReplicaCount returns a boolean if a field has been set.
func (o *ChartReleaseScale1) HasReplicaCount() bool {
	if o != nil && !IsNil(o.ReplicaCount) {
		return true
	}

	return false
}

// SetReplicaCount gets a reference to the given int32 and assigns it to the ReplicaCount field.
func (o *ChartReleaseScale1) SetReplicaCount(v int32) {
	o.ReplicaCount = &v
}

func (o ChartReleaseScale1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChartReleaseScale1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReplicaCount) {
		toSerialize["replica_count"] = o.ReplicaCount
	}
	return toSerialize, nil
}

type NullableChartReleaseScale1 struct {
	value *ChartReleaseScale1
	isSet bool
}

func (v NullableChartReleaseScale1) Get() *ChartReleaseScale1 {
	return v.value
}

func (v *NullableChartReleaseScale1) Set(val *ChartReleaseScale1) {
	v.value = val
	v.isSet = true
}

func (v NullableChartReleaseScale1) IsSet() bool {
	return v.isSet
}

func (v *NullableChartReleaseScale1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChartReleaseScale1(val *ChartReleaseScale1) *NullableChartReleaseScale1 {
	return &NullableChartReleaseScale1{value: val, isSet: true}
}

func (v NullableChartReleaseScale1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChartReleaseScale1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
