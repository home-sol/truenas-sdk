/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the KeychaincredentialRemoteSshSemiautomaticSetup0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeychaincredentialRemoteSshSemiautomaticSetup0{}

// KeychaincredentialRemoteSshSemiautomaticSetup0 struct for KeychaincredentialRemoteSshSemiautomaticSetup0
type KeychaincredentialRemoteSshSemiautomaticSetup0 struct {
	// Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS` credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
	Name *string `json:"name,omitempty"`
	// Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS` credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
	Url *string `json:"url,omitempty"`
	// Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS` credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
	Token         *string `json:"token,omitempty"`
	AdminUsername *string `json:"admin_username,omitempty"`
	Password      *string `json:"password,omitempty"`
	OtpToken      *string `json:"otp_token,omitempty"`
	// Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS` credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
	Username *string `json:"username,omitempty"`
	// Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS` credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
	PrivateKey *int32 `json:"private_key,omitempty"`
	// `SSH_CREDENTIALS` attributes such as `cipher` and `connect_timeout` can be specified as well.
	Cipher *string `json:"cipher,omitempty"`
	// `SSH_CREDENTIALS` attributes such as `cipher` and `connect_timeout` can be specified as well.
	ConnectTimeout *int32 `json:"connect_timeout,omitempty"`
	Sudo           *bool  `json:"sudo,omitempty"`
}

// NewKeychaincredentialRemoteSshSemiautomaticSetup0 instantiates a new KeychaincredentialRemoteSshSemiautomaticSetup0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeychaincredentialRemoteSshSemiautomaticSetup0() *KeychaincredentialRemoteSshSemiautomaticSetup0 {
	this := KeychaincredentialRemoteSshSemiautomaticSetup0{}
	var adminUsername string
	this.AdminUsername = &adminUsername
	var username string
	this.Username = &username
	var cipher string
	this.Cipher = &cipher
	var connectTimeout int32
	this.ConnectTimeout = &connectTimeout
	var sudo bool
	this.Sudo = &sudo
	return &this
}

// NewKeychaincredentialRemoteSshSemiautomaticSetup0WithDefaults instantiates a new KeychaincredentialRemoteSshSemiautomaticSetup0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeychaincredentialRemoteSshSemiautomaticSetup0WithDefaults() *KeychaincredentialRemoteSshSemiautomaticSetup0 {
	this := KeychaincredentialRemoteSshSemiautomaticSetup0{}
	var adminUsername string
	this.AdminUsername = &adminUsername
	var username string
	this.Username = &username
	var cipher string
	this.Cipher = &cipher
	var connectTimeout int32
	this.ConnectTimeout = &connectTimeout
	var sudo bool
	this.Sudo = &sudo
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetUrl(v string) {
	o.Url = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetToken(v string) {
	o.Token = &v
}

// GetAdminUsername returns the AdminUsername field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetAdminUsername() string {
	if o == nil || IsNil(o.AdminUsername) {
		var ret string
		return ret
	}
	return *o.AdminUsername
}

// GetAdminUsernameOk returns a tuple with the AdminUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetAdminUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.AdminUsername) {
		return nil, false
	}
	return o.AdminUsername, true
}

// HasAdminUsername returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasAdminUsername() bool {
	if o != nil && !IsNil(o.AdminUsername) {
		return true
	}

	return false
}

// SetAdminUsername gets a reference to the given string and assigns it to the AdminUsername field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetAdminUsername(v string) {
	o.AdminUsername = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetPassword(v string) {
	o.Password = &v
}

// GetOtpToken returns the OtpToken field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetOtpToken() string {
	if o == nil || IsNil(o.OtpToken) {
		var ret string
		return ret
	}
	return *o.OtpToken
}

// GetOtpTokenOk returns a tuple with the OtpToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetOtpTokenOk() (*string, bool) {
	if o == nil || IsNil(o.OtpToken) {
		return nil, false
	}
	return o.OtpToken, true
}

// HasOtpToken returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasOtpToken() bool {
	if o != nil && !IsNil(o.OtpToken) {
		return true
	}

	return false
}

// SetOtpToken gets a reference to the given string and assigns it to the OtpToken field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetOtpToken(v string) {
	o.OtpToken = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetUsername(v string) {
	o.Username = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetPrivateKey() int32 {
	if o == nil || IsNil(o.PrivateKey) {
		var ret int32
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetPrivateKeyOk() (*int32, bool) {
	if o == nil || IsNil(o.PrivateKey) {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasPrivateKey() bool {
	if o != nil && !IsNil(o.PrivateKey) {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given int32 and assigns it to the PrivateKey field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetPrivateKey(v int32) {
	o.PrivateKey = &v
}

// GetCipher returns the Cipher field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetCipher() string {
	if o == nil || IsNil(o.Cipher) {
		var ret string
		return ret
	}
	return *o.Cipher
}

// GetCipherOk returns a tuple with the Cipher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetCipherOk() (*string, bool) {
	if o == nil || IsNil(o.Cipher) {
		return nil, false
	}
	return o.Cipher, true
}

// HasCipher returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasCipher() bool {
	if o != nil && !IsNil(o.Cipher) {
		return true
	}

	return false
}

// SetCipher gets a reference to the given string and assigns it to the Cipher field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetCipher(v string) {
	o.Cipher = &v
}

// GetConnectTimeout returns the ConnectTimeout field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetConnectTimeout() int32 {
	if o == nil || IsNil(o.ConnectTimeout) {
		var ret int32
		return ret
	}
	return *o.ConnectTimeout
}

// GetConnectTimeoutOk returns a tuple with the ConnectTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetConnectTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectTimeout) {
		return nil, false
	}
	return o.ConnectTimeout, true
}

// HasConnectTimeout returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasConnectTimeout() bool {
	if o != nil && !IsNil(o.ConnectTimeout) {
		return true
	}

	return false
}

// SetConnectTimeout gets a reference to the given int32 and assigns it to the ConnectTimeout field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetConnectTimeout(v int32) {
	o.ConnectTimeout = &v
}

// GetSudo returns the Sudo field value if set, zero value otherwise.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetSudo() bool {
	if o == nil || IsNil(o.Sudo) {
		var ret bool
		return ret
	}
	return *o.Sudo
}

// GetSudoOk returns a tuple with the Sudo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) GetSudoOk() (*bool, bool) {
	if o == nil || IsNil(o.Sudo) {
		return nil, false
	}
	return o.Sudo, true
}

// HasSudo returns a boolean if a field has been set.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) HasSudo() bool {
	if o != nil && !IsNil(o.Sudo) {
		return true
	}

	return false
}

// SetSudo gets a reference to the given bool and assigns it to the Sudo field.
func (o *KeychaincredentialRemoteSshSemiautomaticSetup0) SetSudo(v bool) {
	o.Sudo = &v
}

func (o KeychaincredentialRemoteSshSemiautomaticSetup0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeychaincredentialRemoteSshSemiautomaticSetup0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.AdminUsername) {
		toSerialize["admin_username"] = o.AdminUsername
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.OtpToken) {
		toSerialize["otp_token"] = o.OtpToken
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.PrivateKey) {
		toSerialize["private_key"] = o.PrivateKey
	}
	if !IsNil(o.Cipher) {
		toSerialize["cipher"] = o.Cipher
	}
	if !IsNil(o.ConnectTimeout) {
		toSerialize["connect_timeout"] = o.ConnectTimeout
	}
	if !IsNil(o.Sudo) {
		toSerialize["sudo"] = o.Sudo
	}
	return toSerialize, nil
}

type NullableKeychaincredentialRemoteSshSemiautomaticSetup0 struct {
	value *KeychaincredentialRemoteSshSemiautomaticSetup0
	isSet bool
}

func (v NullableKeychaincredentialRemoteSshSemiautomaticSetup0) Get() *KeychaincredentialRemoteSshSemiautomaticSetup0 {
	return v.value
}

func (v *NullableKeychaincredentialRemoteSshSemiautomaticSetup0) Set(val *KeychaincredentialRemoteSshSemiautomaticSetup0) {
	v.value = val
	v.isSet = true
}

func (v NullableKeychaincredentialRemoteSshSemiautomaticSetup0) IsSet() bool {
	return v.isSet
}

func (v *NullableKeychaincredentialRemoteSshSemiautomaticSetup0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeychaincredentialRemoteSshSemiautomaticSetup0(val *KeychaincredentialRemoteSshSemiautomaticSetup0) *NullableKeychaincredentialRemoteSshSemiautomaticSetup0 {
	return &NullableKeychaincredentialRemoteSshSemiautomaticSetup0{value: val, isSet: true}
}

func (v NullableKeychaincredentialRemoteSshSemiautomaticSetup0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeychaincredentialRemoteSshSemiautomaticSetup0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
