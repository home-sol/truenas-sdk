/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the StatsGetData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatsGetData{}

// StatsGetData struct for StatsGetData
type StatsGetData struct {
	StatsList            []StatsData    `json:"stats_list,omitempty"`
	StatsFilter          *StatsGetData1 `json:"stats-filter,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StatsGetData StatsGetData

// NewStatsGetData instantiates a new StatsGetData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatsGetData() *StatsGetData {
	this := StatsGetData{}
	var statsFilter StatsGetData1
	this.StatsFilter = &statsFilter
	return &this
}

// NewStatsGetDataWithDefaults instantiates a new StatsGetData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatsGetDataWithDefaults() *StatsGetData {
	this := StatsGetData{}
	var statsFilter StatsGetData1
	this.StatsFilter = &statsFilter
	return &this
}

// GetStatsList returns the StatsList field value if set, zero value otherwise.
func (o *StatsGetData) GetStatsList() []StatsData {
	if o == nil || IsNil(o.StatsList) {
		var ret []StatsData
		return ret
	}
	return o.StatsList
}

// GetStatsListOk returns a tuple with the StatsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsGetData) GetStatsListOk() ([]StatsData, bool) {
	if o == nil || IsNil(o.StatsList) {
		return nil, false
	}
	return o.StatsList, true
}

// HasStatsList returns a boolean if a field has been set.
func (o *StatsGetData) HasStatsList() bool {
	if o != nil && !IsNil(o.StatsList) {
		return true
	}

	return false
}

// SetStatsList gets a reference to the given []StatsData and assigns it to the StatsList field.
func (o *StatsGetData) SetStatsList(v []StatsData) {
	o.StatsList = v
}

// GetStatsFilter returns the StatsFilter field value if set, zero value otherwise.
func (o *StatsGetData) GetStatsFilter() StatsGetData1 {
	if o == nil || IsNil(o.StatsFilter) {
		var ret StatsGetData1
		return ret
	}
	return *o.StatsFilter
}

// GetStatsFilterOk returns a tuple with the StatsFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsGetData) GetStatsFilterOk() (*StatsGetData1, bool) {
	if o == nil || IsNil(o.StatsFilter) {
		return nil, false
	}
	return o.StatsFilter, true
}

// HasStatsFilter returns a boolean if a field has been set.
func (o *StatsGetData) HasStatsFilter() bool {
	if o != nil && !IsNil(o.StatsFilter) {
		return true
	}

	return false
}

// SetStatsFilter gets a reference to the given StatsGetData1 and assigns it to the StatsFilter field.
func (o *StatsGetData) SetStatsFilter(v StatsGetData1) {
	o.StatsFilter = &v
}

func (o StatsGetData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatsGetData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StatsList) {
		toSerialize["stats_list"] = o.StatsList
	}
	if !IsNil(o.StatsFilter) {
		toSerialize["stats-filter"] = o.StatsFilter
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StatsGetData) UnmarshalJSON(bytes []byte) (err error) {
	varStatsGetData := _StatsGetData{}

	if err = json.Unmarshal(bytes, &varStatsGetData); err == nil {
		*o = StatsGetData(varStatsGetData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "stats_list")
		delete(additionalProperties, "stats-filter")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStatsGetData struct {
	value *StatsGetData
	isSet bool
}

func (v NullableStatsGetData) Get() *StatsGetData {
	return v.value
}

func (v *NullableStatsGetData) Set(val *StatsGetData) {
	v.value = val
	v.isSet = true
}

func (v NullableStatsGetData) IsSet() bool {
	return v.isSet
}

func (v *NullableStatsGetData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatsGetData(val *StatsGetData) *NullableStatsGetData {
	return &NullableStatsGetData{value: val, isSet: true}
}

func (v NullableStatsGetData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatsGetData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
