/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the ChartReleasePullContainerImages type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChartReleasePullContainerImages{}

// ChartReleasePullContainerImages struct for ChartReleasePullContainerImages
type ChartReleasePullContainerImages struct {
	// Update container images being used by `release_name` chart release.
	ReleaseName                *string                           `json:"release_name,omitempty"`
	PullContainerImagesOptions *ChartReleasePullContainerImages1 `json:"pull_container_images_options,omitempty"`
	AdditionalProperties       map[string]interface{}
}

type _ChartReleasePullContainerImages ChartReleasePullContainerImages

// NewChartReleasePullContainerImages instantiates a new ChartReleasePullContainerImages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChartReleasePullContainerImages() *ChartReleasePullContainerImages {
	this := ChartReleasePullContainerImages{}
	var pullContainerImagesOptions ChartReleasePullContainerImages1
	this.PullContainerImagesOptions = &pullContainerImagesOptions
	return &this
}

// NewChartReleasePullContainerImagesWithDefaults instantiates a new ChartReleasePullContainerImages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChartReleasePullContainerImagesWithDefaults() *ChartReleasePullContainerImages {
	this := ChartReleasePullContainerImages{}
	var pullContainerImagesOptions ChartReleasePullContainerImages1
	this.PullContainerImagesOptions = &pullContainerImagesOptions
	return &this
}

// GetReleaseName returns the ReleaseName field value if set, zero value otherwise.
func (o *ChartReleasePullContainerImages) GetReleaseName() string {
	if o == nil || IsNil(o.ReleaseName) {
		var ret string
		return ret
	}
	return *o.ReleaseName
}

// GetReleaseNameOk returns a tuple with the ReleaseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleasePullContainerImages) GetReleaseNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseName) {
		return nil, false
	}
	return o.ReleaseName, true
}

// HasReleaseName returns a boolean if a field has been set.
func (o *ChartReleasePullContainerImages) HasReleaseName() bool {
	if o != nil && !IsNil(o.ReleaseName) {
		return true
	}

	return false
}

// SetReleaseName gets a reference to the given string and assigns it to the ReleaseName field.
func (o *ChartReleasePullContainerImages) SetReleaseName(v string) {
	o.ReleaseName = &v
}

// GetPullContainerImagesOptions returns the PullContainerImagesOptions field value if set, zero value otherwise.
func (o *ChartReleasePullContainerImages) GetPullContainerImagesOptions() ChartReleasePullContainerImages1 {
	if o == nil || IsNil(o.PullContainerImagesOptions) {
		var ret ChartReleasePullContainerImages1
		return ret
	}
	return *o.PullContainerImagesOptions
}

// GetPullContainerImagesOptionsOk returns a tuple with the PullContainerImagesOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleasePullContainerImages) GetPullContainerImagesOptionsOk() (*ChartReleasePullContainerImages1, bool) {
	if o == nil || IsNil(o.PullContainerImagesOptions) {
		return nil, false
	}
	return o.PullContainerImagesOptions, true
}

// HasPullContainerImagesOptions returns a boolean if a field has been set.
func (o *ChartReleasePullContainerImages) HasPullContainerImagesOptions() bool {
	if o != nil && !IsNil(o.PullContainerImagesOptions) {
		return true
	}

	return false
}

// SetPullContainerImagesOptions gets a reference to the given ChartReleasePullContainerImages1 and assigns it to the PullContainerImagesOptions field.
func (o *ChartReleasePullContainerImages) SetPullContainerImagesOptions(v ChartReleasePullContainerImages1) {
	o.PullContainerImagesOptions = &v
}

func (o ChartReleasePullContainerImages) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChartReleasePullContainerImages) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReleaseName) {
		toSerialize["release_name"] = o.ReleaseName
	}
	if !IsNil(o.PullContainerImagesOptions) {
		toSerialize["pull_container_images_options"] = o.PullContainerImagesOptions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ChartReleasePullContainerImages) UnmarshalJSON(bytes []byte) (err error) {
	varChartReleasePullContainerImages := _ChartReleasePullContainerImages{}

	if err = json.Unmarshal(bytes, &varChartReleasePullContainerImages); err == nil {
		*o = ChartReleasePullContainerImages(varChartReleasePullContainerImages)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "release_name")
		delete(additionalProperties, "pull_container_images_options")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChartReleasePullContainerImages struct {
	value *ChartReleasePullContainerImages
	isSet bool
}

func (v NullableChartReleasePullContainerImages) Get() *ChartReleasePullContainerImages {
	return v.value
}

func (v *NullableChartReleasePullContainerImages) Set(val *ChartReleasePullContainerImages) {
	v.value = val
	v.isSet = true
}

func (v NullableChartReleasePullContainerImages) IsSet() bool {
	return v.isSet
}

func (v *NullableChartReleasePullContainerImages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChartReleasePullContainerImages(val *ChartReleasePullContainerImages) *NullableChartReleasePullContainerImages {
	return &NullableChartReleasePullContainerImages{value: val, isSet: true}
}

func (v NullableChartReleasePullContainerImages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChartReleasePullContainerImages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
