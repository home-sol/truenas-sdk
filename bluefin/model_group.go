/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the Group type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Group{}

// Group struct for Group
type Group struct {
	Portal     *int32      `json:"portal,omitempty"`
	Initiator  interface{} `json:"initiator,omitempty"`
	Authmethod *string     `json:"authmethod,omitempty"`
	Auth       interface{} `json:"auth,omitempty"`
}

// NewGroup instantiates a new Group object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroup() *Group {
	this := Group{}
	var authmethod string
	this.Authmethod = &authmethod
	return &this
}

// NewGroupWithDefaults instantiates a new Group object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupWithDefaults() *Group {
	this := Group{}
	var authmethod string
	this.Authmethod = &authmethod
	return &this
}

// GetPortal returns the Portal field value if set, zero value otherwise.
func (o *Group) GetPortal() int32 {
	if o == nil || IsNil(o.Portal) {
		var ret int32
		return ret
	}
	return *o.Portal
}

// GetPortalOk returns a tuple with the Portal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetPortalOk() (*int32, bool) {
	if o == nil || IsNil(o.Portal) {
		return nil, false
	}
	return o.Portal, true
}

// HasPortal returns a boolean if a field has been set.
func (o *Group) HasPortal() bool {
	if o != nil && !IsNil(o.Portal) {
		return true
	}

	return false
}

// SetPortal gets a reference to the given int32 and assigns it to the Portal field.
func (o *Group) SetPortal(v int32) {
	o.Portal = &v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Group) GetInitiator() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Group) GetInitiatorOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Initiator) {
		return nil, false
	}
	return &o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *Group) HasInitiator() bool {
	if o != nil && IsNil(o.Initiator) {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given interface{} and assigns it to the Initiator field.
func (o *Group) SetInitiator(v interface{}) {
	o.Initiator = v
}

// GetAuthmethod returns the Authmethod field value if set, zero value otherwise.
func (o *Group) GetAuthmethod() string {
	if o == nil || IsNil(o.Authmethod) {
		var ret string
		return ret
	}
	return *o.Authmethod
}

// GetAuthmethodOk returns a tuple with the Authmethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetAuthmethodOk() (*string, bool) {
	if o == nil || IsNil(o.Authmethod) {
		return nil, false
	}
	return o.Authmethod, true
}

// HasAuthmethod returns a boolean if a field has been set.
func (o *Group) HasAuthmethod() bool {
	if o != nil && !IsNil(o.Authmethod) {
		return true
	}

	return false
}

// SetAuthmethod gets a reference to the given string and assigns it to the Authmethod field.
func (o *Group) SetAuthmethod(v string) {
	o.Authmethod = &v
}

// GetAuth returns the Auth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Group) GetAuth() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Group) GetAuthOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Auth) {
		return nil, false
	}
	return &o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *Group) HasAuth() bool {
	if o != nil && IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given interface{} and assigns it to the Auth field.
func (o *Group) SetAuth(v interface{}) {
	o.Auth = v
}

func (o Group) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Group) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Portal) {
		toSerialize["portal"] = o.Portal
	}
	if o.Initiator != nil {
		toSerialize["initiator"] = o.Initiator
	}
	if !IsNil(o.Authmethod) {
		toSerialize["authmethod"] = o.Authmethod
	}
	if o.Auth != nil {
		toSerialize["auth"] = o.Auth
	}
	return toSerialize, nil
}

type NullableGroup struct {
	value *Group
	isSet bool
}

func (v NullableGroup) Get() *Group {
	return v.value
}

func (v *NullableGroup) Set(val *Group) {
	v.value = val
	v.isSet = true
}

func (v NullableGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroup(val *Group) *NullableGroup {
	return &NullableGroup{value: val, isSet: true}
}

func (v NullableGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
