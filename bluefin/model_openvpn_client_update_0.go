/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the OpenvpnClientUpdate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenvpnClientUpdate0{}

// OpenvpnClientUpdate0 struct for OpenvpnClientUpdate0
type OpenvpnClientUpdate0 struct {
	Nobind                  *bool          `json:"nobind,omitempty"`
	TlsCryptAuthEnabled     *bool          `json:"tls_crypt_auth_enabled,omitempty"`
	ClientCertificate       NullableInt32  `json:"client_certificate,omitempty"`
	RootCa                  NullableInt32  `json:"root_ca,omitempty"`
	Port                    *int32         `json:"port,omitempty"`
	AdditionalParameters    *string        `json:"additional_parameters,omitempty"`
	AuthenticationAlgorithm NullableString `json:"authentication_algorithm,omitempty"`
	Cipher                  NullableString `json:"cipher,omitempty"`
	Compression             NullableString `json:"compression,omitempty"`
	DeviceType              *string        `json:"device_type,omitempty"`
	Protocol                *string        `json:"protocol,omitempty"`
	// `remote` can be a valid ip address / domain which openvpn will try to connect to.
	Remote             *string        `json:"remote,omitempty"`
	TlsCryptAuth       NullableString `json:"tls_crypt_auth,omitempty"`
	RemoveCertificates *bool          `json:"remove_certificates,omitempty"`
}

// NewOpenvpnClientUpdate0 instantiates a new OpenvpnClientUpdate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenvpnClientUpdate0() *OpenvpnClientUpdate0 {
	this := OpenvpnClientUpdate0{}
	var removeCertificates bool
	this.RemoveCertificates = &removeCertificates
	return &this
}

// NewOpenvpnClientUpdate0WithDefaults instantiates a new OpenvpnClientUpdate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenvpnClientUpdate0WithDefaults() *OpenvpnClientUpdate0 {
	this := OpenvpnClientUpdate0{}
	var removeCertificates bool
	this.RemoveCertificates = &removeCertificates
	return &this
}

// GetNobind returns the Nobind field value if set, zero value otherwise.
func (o *OpenvpnClientUpdate0) GetNobind() bool {
	if o == nil || IsNil(o.Nobind) {
		var ret bool
		return ret
	}
	return *o.Nobind
}

// GetNobindOk returns a tuple with the Nobind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnClientUpdate0) GetNobindOk() (*bool, bool) {
	if o == nil || IsNil(o.Nobind) {
		return nil, false
	}
	return o.Nobind, true
}

// HasNobind returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasNobind() bool {
	if o != nil && !IsNil(o.Nobind) {
		return true
	}

	return false
}

// SetNobind gets a reference to the given bool and assigns it to the Nobind field.
func (o *OpenvpnClientUpdate0) SetNobind(v bool) {
	o.Nobind = &v
}

// GetTlsCryptAuthEnabled returns the TlsCryptAuthEnabled field value if set, zero value otherwise.
func (o *OpenvpnClientUpdate0) GetTlsCryptAuthEnabled() bool {
	if o == nil || IsNil(o.TlsCryptAuthEnabled) {
		var ret bool
		return ret
	}
	return *o.TlsCryptAuthEnabled
}

// GetTlsCryptAuthEnabledOk returns a tuple with the TlsCryptAuthEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnClientUpdate0) GetTlsCryptAuthEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TlsCryptAuthEnabled) {
		return nil, false
	}
	return o.TlsCryptAuthEnabled, true
}

// HasTlsCryptAuthEnabled returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasTlsCryptAuthEnabled() bool {
	if o != nil && !IsNil(o.TlsCryptAuthEnabled) {
		return true
	}

	return false
}

// SetTlsCryptAuthEnabled gets a reference to the given bool and assigns it to the TlsCryptAuthEnabled field.
func (o *OpenvpnClientUpdate0) SetTlsCryptAuthEnabled(v bool) {
	o.TlsCryptAuthEnabled = &v
}

// GetClientCertificate returns the ClientCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnClientUpdate0) GetClientCertificate() int32 {
	if o == nil || IsNil(o.ClientCertificate.Get()) {
		var ret int32
		return ret
	}
	return *o.ClientCertificate.Get()
}

// GetClientCertificateOk returns a tuple with the ClientCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnClientUpdate0) GetClientCertificateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientCertificate.Get(), o.ClientCertificate.IsSet()
}

// HasClientCertificate returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasClientCertificate() bool {
	if o != nil && o.ClientCertificate.IsSet() {
		return true
	}

	return false
}

// SetClientCertificate gets a reference to the given NullableInt32 and assigns it to the ClientCertificate field.
func (o *OpenvpnClientUpdate0) SetClientCertificate(v int32) {
	o.ClientCertificate.Set(&v)
}

// SetClientCertificateNil sets the value for ClientCertificate to be an explicit nil
func (o *OpenvpnClientUpdate0) SetClientCertificateNil() {
	o.ClientCertificate.Set(nil)
}

// UnsetClientCertificate ensures that no value is present for ClientCertificate, not even an explicit nil
func (o *OpenvpnClientUpdate0) UnsetClientCertificate() {
	o.ClientCertificate.Unset()
}

// GetRootCa returns the RootCa field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnClientUpdate0) GetRootCa() int32 {
	if o == nil || IsNil(o.RootCa.Get()) {
		var ret int32
		return ret
	}
	return *o.RootCa.Get()
}

// GetRootCaOk returns a tuple with the RootCa field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnClientUpdate0) GetRootCaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RootCa.Get(), o.RootCa.IsSet()
}

// HasRootCa returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasRootCa() bool {
	if o != nil && o.RootCa.IsSet() {
		return true
	}

	return false
}

// SetRootCa gets a reference to the given NullableInt32 and assigns it to the RootCa field.
func (o *OpenvpnClientUpdate0) SetRootCa(v int32) {
	o.RootCa.Set(&v)
}

// SetRootCaNil sets the value for RootCa to be an explicit nil
func (o *OpenvpnClientUpdate0) SetRootCaNil() {
	o.RootCa.Set(nil)
}

// UnsetRootCa ensures that no value is present for RootCa, not even an explicit nil
func (o *OpenvpnClientUpdate0) UnsetRootCa() {
	o.RootCa.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *OpenvpnClientUpdate0) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnClientUpdate0) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *OpenvpnClientUpdate0) SetPort(v int32) {
	o.Port = &v
}

// GetAdditionalParameters returns the AdditionalParameters field value if set, zero value otherwise.
func (o *OpenvpnClientUpdate0) GetAdditionalParameters() string {
	if o == nil || IsNil(o.AdditionalParameters) {
		var ret string
		return ret
	}
	return *o.AdditionalParameters
}

// GetAdditionalParametersOk returns a tuple with the AdditionalParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnClientUpdate0) GetAdditionalParametersOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalParameters) {
		return nil, false
	}
	return o.AdditionalParameters, true
}

// HasAdditionalParameters returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasAdditionalParameters() bool {
	if o != nil && !IsNil(o.AdditionalParameters) {
		return true
	}

	return false
}

// SetAdditionalParameters gets a reference to the given string and assigns it to the AdditionalParameters field.
func (o *OpenvpnClientUpdate0) SetAdditionalParameters(v string) {
	o.AdditionalParameters = &v
}

// GetAuthenticationAlgorithm returns the AuthenticationAlgorithm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnClientUpdate0) GetAuthenticationAlgorithm() string {
	if o == nil || IsNil(o.AuthenticationAlgorithm.Get()) {
		var ret string
		return ret
	}
	return *o.AuthenticationAlgorithm.Get()
}

// GetAuthenticationAlgorithmOk returns a tuple with the AuthenticationAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnClientUpdate0) GetAuthenticationAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationAlgorithm.Get(), o.AuthenticationAlgorithm.IsSet()
}

// HasAuthenticationAlgorithm returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasAuthenticationAlgorithm() bool {
	if o != nil && o.AuthenticationAlgorithm.IsSet() {
		return true
	}

	return false
}

// SetAuthenticationAlgorithm gets a reference to the given NullableString and assigns it to the AuthenticationAlgorithm field.
func (o *OpenvpnClientUpdate0) SetAuthenticationAlgorithm(v string) {
	o.AuthenticationAlgorithm.Set(&v)
}

// SetAuthenticationAlgorithmNil sets the value for AuthenticationAlgorithm to be an explicit nil
func (o *OpenvpnClientUpdate0) SetAuthenticationAlgorithmNil() {
	o.AuthenticationAlgorithm.Set(nil)
}

// UnsetAuthenticationAlgorithm ensures that no value is present for AuthenticationAlgorithm, not even an explicit nil
func (o *OpenvpnClientUpdate0) UnsetAuthenticationAlgorithm() {
	o.AuthenticationAlgorithm.Unset()
}

// GetCipher returns the Cipher field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnClientUpdate0) GetCipher() string {
	if o == nil || IsNil(o.Cipher.Get()) {
		var ret string
		return ret
	}
	return *o.Cipher.Get()
}

// GetCipherOk returns a tuple with the Cipher field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnClientUpdate0) GetCipherOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cipher.Get(), o.Cipher.IsSet()
}

// HasCipher returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasCipher() bool {
	if o != nil && o.Cipher.IsSet() {
		return true
	}

	return false
}

// SetCipher gets a reference to the given NullableString and assigns it to the Cipher field.
func (o *OpenvpnClientUpdate0) SetCipher(v string) {
	o.Cipher.Set(&v)
}

// SetCipherNil sets the value for Cipher to be an explicit nil
func (o *OpenvpnClientUpdate0) SetCipherNil() {
	o.Cipher.Set(nil)
}

// UnsetCipher ensures that no value is present for Cipher, not even an explicit nil
func (o *OpenvpnClientUpdate0) UnsetCipher() {
	o.Cipher.Unset()
}

// GetCompression returns the Compression field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnClientUpdate0) GetCompression() string {
	if o == nil || IsNil(o.Compression.Get()) {
		var ret string
		return ret
	}
	return *o.Compression.Get()
}

// GetCompressionOk returns a tuple with the Compression field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnClientUpdate0) GetCompressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Compression.Get(), o.Compression.IsSet()
}

// HasCompression returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasCompression() bool {
	if o != nil && o.Compression.IsSet() {
		return true
	}

	return false
}

// SetCompression gets a reference to the given NullableString and assigns it to the Compression field.
func (o *OpenvpnClientUpdate0) SetCompression(v string) {
	o.Compression.Set(&v)
}

// SetCompressionNil sets the value for Compression to be an explicit nil
func (o *OpenvpnClientUpdate0) SetCompressionNil() {
	o.Compression.Set(nil)
}

// UnsetCompression ensures that no value is present for Compression, not even an explicit nil
func (o *OpenvpnClientUpdate0) UnsetCompression() {
	o.Compression.Unset()
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *OpenvpnClientUpdate0) GetDeviceType() string {
	if o == nil || IsNil(o.DeviceType) {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnClientUpdate0) GetDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *OpenvpnClientUpdate0) SetDeviceType(v string) {
	o.DeviceType = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *OpenvpnClientUpdate0) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnClientUpdate0) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *OpenvpnClientUpdate0) SetProtocol(v string) {
	o.Protocol = &v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *OpenvpnClientUpdate0) GetRemote() string {
	if o == nil || IsNil(o.Remote) {
		var ret string
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnClientUpdate0) GetRemoteOk() (*string, bool) {
	if o == nil || IsNil(o.Remote) {
		return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasRemote() bool {
	if o != nil && !IsNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given string and assigns it to the Remote field.
func (o *OpenvpnClientUpdate0) SetRemote(v string) {
	o.Remote = &v
}

// GetTlsCryptAuth returns the TlsCryptAuth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenvpnClientUpdate0) GetTlsCryptAuth() string {
	if o == nil || IsNil(o.TlsCryptAuth.Get()) {
		var ret string
		return ret
	}
	return *o.TlsCryptAuth.Get()
}

// GetTlsCryptAuthOk returns a tuple with the TlsCryptAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenvpnClientUpdate0) GetTlsCryptAuthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TlsCryptAuth.Get(), o.TlsCryptAuth.IsSet()
}

// HasTlsCryptAuth returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasTlsCryptAuth() bool {
	if o != nil && o.TlsCryptAuth.IsSet() {
		return true
	}

	return false
}

// SetTlsCryptAuth gets a reference to the given NullableString and assigns it to the TlsCryptAuth field.
func (o *OpenvpnClientUpdate0) SetTlsCryptAuth(v string) {
	o.TlsCryptAuth.Set(&v)
}

// SetTlsCryptAuthNil sets the value for TlsCryptAuth to be an explicit nil
func (o *OpenvpnClientUpdate0) SetTlsCryptAuthNil() {
	o.TlsCryptAuth.Set(nil)
}

// UnsetTlsCryptAuth ensures that no value is present for TlsCryptAuth, not even an explicit nil
func (o *OpenvpnClientUpdate0) UnsetTlsCryptAuth() {
	o.TlsCryptAuth.Unset()
}

// GetRemoveCertificates returns the RemoveCertificates field value if set, zero value otherwise.
func (o *OpenvpnClientUpdate0) GetRemoveCertificates() bool {
	if o == nil || IsNil(o.RemoveCertificates) {
		var ret bool
		return ret
	}
	return *o.RemoveCertificates
}

// GetRemoveCertificatesOk returns a tuple with the RemoveCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenvpnClientUpdate0) GetRemoveCertificatesOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoveCertificates) {
		return nil, false
	}
	return o.RemoveCertificates, true
}

// HasRemoveCertificates returns a boolean if a field has been set.
func (o *OpenvpnClientUpdate0) HasRemoveCertificates() bool {
	if o != nil && !IsNil(o.RemoveCertificates) {
		return true
	}

	return false
}

// SetRemoveCertificates gets a reference to the given bool and assigns it to the RemoveCertificates field.
func (o *OpenvpnClientUpdate0) SetRemoveCertificates(v bool) {
	o.RemoveCertificates = &v
}

func (o OpenvpnClientUpdate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenvpnClientUpdate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Nobind) {
		toSerialize["nobind"] = o.Nobind
	}
	if !IsNil(o.TlsCryptAuthEnabled) {
		toSerialize["tls_crypt_auth_enabled"] = o.TlsCryptAuthEnabled
	}
	if o.ClientCertificate.IsSet() {
		toSerialize["client_certificate"] = o.ClientCertificate.Get()
	}
	if o.RootCa.IsSet() {
		toSerialize["root_ca"] = o.RootCa.Get()
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.AdditionalParameters) {
		toSerialize["additional_parameters"] = o.AdditionalParameters
	}
	if o.AuthenticationAlgorithm.IsSet() {
		toSerialize["authentication_algorithm"] = o.AuthenticationAlgorithm.Get()
	}
	if o.Cipher.IsSet() {
		toSerialize["cipher"] = o.Cipher.Get()
	}
	if o.Compression.IsSet() {
		toSerialize["compression"] = o.Compression.Get()
	}
	if !IsNil(o.DeviceType) {
		toSerialize["device_type"] = o.DeviceType
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	if o.TlsCryptAuth.IsSet() {
		toSerialize["tls_crypt_auth"] = o.TlsCryptAuth.Get()
	}
	if !IsNil(o.RemoveCertificates) {
		toSerialize["remove_certificates"] = o.RemoveCertificates
	}
	return toSerialize, nil
}

type NullableOpenvpnClientUpdate0 struct {
	value *OpenvpnClientUpdate0
	isSet bool
}

func (v NullableOpenvpnClientUpdate0) Get() *OpenvpnClientUpdate0 {
	return v.value
}

func (v *NullableOpenvpnClientUpdate0) Set(val *OpenvpnClientUpdate0) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenvpnClientUpdate0) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenvpnClientUpdate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenvpnClientUpdate0(val *OpenvpnClientUpdate0) *NullableOpenvpnClientUpdate0 {
	return &NullableOpenvpnClientUpdate0{value: val, isSet: true}
}

func (v NullableOpenvpnClientUpdate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenvpnClientUpdate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
