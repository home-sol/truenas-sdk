/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the ChartReleaseUpgradeSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChartReleaseUpgradeSummary{}

// ChartReleaseUpgradeSummary struct for ChartReleaseUpgradeSummary
type ChartReleaseUpgradeSummary struct {
	// Retrieve upgrade summary for `release_name` which will include which container images will be updated and changelog for `options.item_version` chart version specified if applicable. If only container images need to be updated, changelog will be `null`.
	ReleaseName          *string                      `json:"release_name,omitempty"`
	Options              *ChartReleaseUpgradeSummary1 `json:"options,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChartReleaseUpgradeSummary ChartReleaseUpgradeSummary

// NewChartReleaseUpgradeSummary instantiates a new ChartReleaseUpgradeSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChartReleaseUpgradeSummary() *ChartReleaseUpgradeSummary {
	this := ChartReleaseUpgradeSummary{}
	var options ChartReleaseUpgradeSummary1
	this.Options = &options
	return &this
}

// NewChartReleaseUpgradeSummaryWithDefaults instantiates a new ChartReleaseUpgradeSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChartReleaseUpgradeSummaryWithDefaults() *ChartReleaseUpgradeSummary {
	this := ChartReleaseUpgradeSummary{}
	var options ChartReleaseUpgradeSummary1
	this.Options = &options
	return &this
}

// GetReleaseName returns the ReleaseName field value if set, zero value otherwise.
func (o *ChartReleaseUpgradeSummary) GetReleaseName() string {
	if o == nil || IsNil(o.ReleaseName) {
		var ret string
		return ret
	}
	return *o.ReleaseName
}

// GetReleaseNameOk returns a tuple with the ReleaseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleaseUpgradeSummary) GetReleaseNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseName) {
		return nil, false
	}
	return o.ReleaseName, true
}

// HasReleaseName returns a boolean if a field has been set.
func (o *ChartReleaseUpgradeSummary) HasReleaseName() bool {
	if o != nil && !IsNil(o.ReleaseName) {
		return true
	}

	return false
}

// SetReleaseName gets a reference to the given string and assigns it to the ReleaseName field.
func (o *ChartReleaseUpgradeSummary) SetReleaseName(v string) {
	o.ReleaseName = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ChartReleaseUpgradeSummary) GetOptions() ChartReleaseUpgradeSummary1 {
	if o == nil || IsNil(o.Options) {
		var ret ChartReleaseUpgradeSummary1
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartReleaseUpgradeSummary) GetOptionsOk() (*ChartReleaseUpgradeSummary1, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ChartReleaseUpgradeSummary) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given ChartReleaseUpgradeSummary1 and assigns it to the Options field.
func (o *ChartReleaseUpgradeSummary) SetOptions(v ChartReleaseUpgradeSummary1) {
	o.Options = &v
}

func (o ChartReleaseUpgradeSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChartReleaseUpgradeSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReleaseName) {
		toSerialize["release_name"] = o.ReleaseName
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ChartReleaseUpgradeSummary) UnmarshalJSON(bytes []byte) (err error) {
	varChartReleaseUpgradeSummary := _ChartReleaseUpgradeSummary{}

	if err = json.Unmarshal(bytes, &varChartReleaseUpgradeSummary); err == nil {
		*o = ChartReleaseUpgradeSummary(varChartReleaseUpgradeSummary)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "release_name")
		delete(additionalProperties, "options")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChartReleaseUpgradeSummary struct {
	value *ChartReleaseUpgradeSummary
	isSet bool
}

func (v NullableChartReleaseUpgradeSummary) Get() *ChartReleaseUpgradeSummary {
	return v.value
}

func (v *NullableChartReleaseUpgradeSummary) Set(val *ChartReleaseUpgradeSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableChartReleaseUpgradeSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableChartReleaseUpgradeSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChartReleaseUpgradeSummary(val *ChartReleaseUpgradeSummary) *NullableChartReleaseUpgradeSummary {
	return &NullableChartReleaseUpgradeSummary{value: val, isSet: true}
}

func (v NullableChartReleaseUpgradeSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChartReleaseUpgradeSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
