/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
	"fmt"
)

// FilesystemSetacl0Dacl `dacl` ACL entries. Formatting depends on the underlying `acltype`. NFS4ACL requires NFSv4 entries. POSIX1e requires POSIX1e entries.
type FilesystemSetacl0Dacl struct {
	Array *Array
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *FilesystemSetacl0Dacl) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into Array
	err = json.Unmarshal(data, &dst.Array)
	if err == nil {
		jsonArray, _ := json.Marshal(dst.Array)
		if string(jsonArray) == "{}" { // empty struct
			dst.Array = nil
		} else {
			return nil // data stored in dst.Array, return on the first match
		}
	} else {
		dst.Array = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(FilesystemSetacl0Dacl)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *FilesystemSetacl0Dacl) MarshalJSON() ([]byte, error) {
	if src.Array != nil {
		return json.Marshal(&src.Array)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableFilesystemSetacl0Dacl struct {
	value *FilesystemSetacl0Dacl
	isSet bool
}

func (v NullableFilesystemSetacl0Dacl) Get() *FilesystemSetacl0Dacl {
	return v.value
}

func (v *NullableFilesystemSetacl0Dacl) Set(val *FilesystemSetacl0Dacl) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesystemSetacl0Dacl) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesystemSetacl0Dacl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesystemSetacl0Dacl(val *FilesystemSetacl0Dacl) *NullableFilesystemSetacl0Dacl {
	return &NullableFilesystemSetacl0Dacl{value: val, isSet: true}
}

func (v NullableFilesystemSetacl0Dacl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesystemSetacl0Dacl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
