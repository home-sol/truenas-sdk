/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the PoolDatasetExportKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoolDatasetExportKey{}

// PoolDatasetExportKey struct for PoolDatasetExportKey
type PoolDatasetExportKey struct {
	// Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file where the same file can be used to unlock the dataset, otherwise it will be returned as string.
	Id *string `json:"id,omitempty"`
	// Export own encryption key for dataset `id`. If `download` is `true`, key will be downloaded in a json file where the same file can be used to unlock the dataset, otherwise it will be returned as string.
	Download             *bool `json:"download,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PoolDatasetExportKey PoolDatasetExportKey

// NewPoolDatasetExportKey instantiates a new PoolDatasetExportKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolDatasetExportKey() *PoolDatasetExportKey {
	this := PoolDatasetExportKey{}
	var download bool
	this.Download = &download
	return &this
}

// NewPoolDatasetExportKeyWithDefaults instantiates a new PoolDatasetExportKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolDatasetExportKeyWithDefaults() *PoolDatasetExportKey {
	this := PoolDatasetExportKey{}
	var download bool
	this.Download = &download
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PoolDatasetExportKey) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetExportKey) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PoolDatasetExportKey) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PoolDatasetExportKey) SetId(v string) {
	o.Id = &v
}

// GetDownload returns the Download field value if set, zero value otherwise.
func (o *PoolDatasetExportKey) GetDownload() bool {
	if o == nil || IsNil(o.Download) {
		var ret bool
		return ret
	}
	return *o.Download
}

// GetDownloadOk returns a tuple with the Download field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetExportKey) GetDownloadOk() (*bool, bool) {
	if o == nil || IsNil(o.Download) {
		return nil, false
	}
	return o.Download, true
}

// HasDownload returns a boolean if a field has been set.
func (o *PoolDatasetExportKey) HasDownload() bool {
	if o != nil && !IsNil(o.Download) {
		return true
	}

	return false
}

// SetDownload gets a reference to the given bool and assigns it to the Download field.
func (o *PoolDatasetExportKey) SetDownload(v bool) {
	o.Download = &v
}

func (o PoolDatasetExportKey) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoolDatasetExportKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Download) {
		toSerialize["download"] = o.Download
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PoolDatasetExportKey) UnmarshalJSON(bytes []byte) (err error) {
	varPoolDatasetExportKey := _PoolDatasetExportKey{}

	if err = json.Unmarshal(bytes, &varPoolDatasetExportKey); err == nil {
		*o = PoolDatasetExportKey(varPoolDatasetExportKey)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "download")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePoolDatasetExportKey struct {
	value *PoolDatasetExportKey
	isSet bool
}

func (v NullablePoolDatasetExportKey) Get() *PoolDatasetExportKey {
	return v.value
}

func (v *NullablePoolDatasetExportKey) Set(val *PoolDatasetExportKey) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolDatasetExportKey) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolDatasetExportKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolDatasetExportKey(val *PoolDatasetExportKey) *NullablePoolDatasetExportKey {
	return &NullablePoolDatasetExportKey{value: val, isSet: true}
}

func (v NullablePoolDatasetExportKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolDatasetExportKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
