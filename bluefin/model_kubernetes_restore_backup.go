/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the KubernetesRestoreBackup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesRestoreBackup{}

// KubernetesRestoreBackup struct for KubernetesRestoreBackup
type KubernetesRestoreBackup struct {
	// Restore `backup_name` chart releases backup.
	BackupName           *string                   `json:"backup_name,omitempty"`
	Options              *KubernetesRestoreBackup1 `json:"options,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KubernetesRestoreBackup KubernetesRestoreBackup

// NewKubernetesRestoreBackup instantiates a new KubernetesRestoreBackup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesRestoreBackup() *KubernetesRestoreBackup {
	this := KubernetesRestoreBackup{}
	var options KubernetesRestoreBackup1
	this.Options = &options
	return &this
}

// NewKubernetesRestoreBackupWithDefaults instantiates a new KubernetesRestoreBackup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesRestoreBackupWithDefaults() *KubernetesRestoreBackup {
	this := KubernetesRestoreBackup{}
	var options KubernetesRestoreBackup1
	this.Options = &options
	return &this
}

// GetBackupName returns the BackupName field value if set, zero value otherwise.
func (o *KubernetesRestoreBackup) GetBackupName() string {
	if o == nil || IsNil(o.BackupName) {
		var ret string
		return ret
	}
	return *o.BackupName
}

// GetBackupNameOk returns a tuple with the BackupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRestoreBackup) GetBackupNameOk() (*string, bool) {
	if o == nil || IsNil(o.BackupName) {
		return nil, false
	}
	return o.BackupName, true
}

// HasBackupName returns a boolean if a field has been set.
func (o *KubernetesRestoreBackup) HasBackupName() bool {
	if o != nil && !IsNil(o.BackupName) {
		return true
	}

	return false
}

// SetBackupName gets a reference to the given string and assigns it to the BackupName field.
func (o *KubernetesRestoreBackup) SetBackupName(v string) {
	o.BackupName = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *KubernetesRestoreBackup) GetOptions() KubernetesRestoreBackup1 {
	if o == nil || IsNil(o.Options) {
		var ret KubernetesRestoreBackup1
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRestoreBackup) GetOptionsOk() (*KubernetesRestoreBackup1, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *KubernetesRestoreBackup) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given KubernetesRestoreBackup1 and assigns it to the Options field.
func (o *KubernetesRestoreBackup) SetOptions(v KubernetesRestoreBackup1) {
	o.Options = &v
}

func (o KubernetesRestoreBackup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesRestoreBackup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupName) {
		toSerialize["backup_name"] = o.BackupName
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KubernetesRestoreBackup) UnmarshalJSON(bytes []byte) (err error) {
	varKubernetesRestoreBackup := _KubernetesRestoreBackup{}

	if err = json.Unmarshal(bytes, &varKubernetesRestoreBackup); err == nil {
		*o = KubernetesRestoreBackup(varKubernetesRestoreBackup)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "backup_name")
		delete(additionalProperties, "options")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKubernetesRestoreBackup struct {
	value *KubernetesRestoreBackup
	isSet bool
}

func (v NullableKubernetesRestoreBackup) Get() *KubernetesRestoreBackup {
	return v.value
}

func (v *NullableKubernetesRestoreBackup) Set(val *KubernetesRestoreBackup) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesRestoreBackup) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesRestoreBackup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesRestoreBackup(val *KubernetesRestoreBackup) *NullableKubernetesRestoreBackup {
	return &NullableKubernetesRestoreBackup{value: val, isSet: true}
}

func (v NullableKubernetesRestoreBackup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesRestoreBackup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
