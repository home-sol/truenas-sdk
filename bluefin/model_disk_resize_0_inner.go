/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the DiskResize0Inner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiskResize0Inner{}

// DiskResize0Inner struct for DiskResize0Inner
type DiskResize0Inner struct {
	Name *string `json:"name,omitempty"`
	Size *int32  `json:"size,omitempty"`
}

// NewDiskResize0Inner instantiates a new DiskResize0Inner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiskResize0Inner() *DiskResize0Inner {
	this := DiskResize0Inner{}
	return &this
}

// NewDiskResize0InnerWithDefaults instantiates a new DiskResize0Inner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiskResize0InnerWithDefaults() *DiskResize0Inner {
	this := DiskResize0Inner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DiskResize0Inner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskResize0Inner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DiskResize0Inner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DiskResize0Inner) SetName(v string) {
	o.Name = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *DiskResize0Inner) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskResize0Inner) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *DiskResize0Inner) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *DiskResize0Inner) SetSize(v int32) {
	o.Size = &v
}

func (o DiskResize0Inner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiskResize0Inner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

type NullableDiskResize0Inner struct {
	value *DiskResize0Inner
	isSet bool
}

func (v NullableDiskResize0Inner) Get() *DiskResize0Inner {
	return v.value
}

func (v *NullableDiskResize0Inner) Set(val *DiskResize0Inner) {
	v.value = val
	v.isSet = true
}

func (v NullableDiskResize0Inner) IsSet() bool {
	return v.isSet
}

func (v *NullableDiskResize0Inner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiskResize0Inner(val *DiskResize0Inner) *NullableDiskResize0Inner {
	return &NullableDiskResize0Inner{value: val, isSet: true}
}

func (v NullableDiskResize0Inner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiskResize0Inner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
