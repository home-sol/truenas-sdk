/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the CoreJobUpdate1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreJobUpdate1{}

// CoreJobUpdate1 struct for CoreJobUpdate1
type CoreJobUpdate1 struct {
	Progress map[string]interface{} `json:"progress,omitempty"`
}

// NewCoreJobUpdate1 instantiates a new CoreJobUpdate1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreJobUpdate1() *CoreJobUpdate1 {
	this := CoreJobUpdate1{}
	return &this
}

// NewCoreJobUpdate1WithDefaults instantiates a new CoreJobUpdate1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreJobUpdate1WithDefaults() *CoreJobUpdate1 {
	this := CoreJobUpdate1{}
	return &this
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *CoreJobUpdate1) GetProgress() map[string]interface{} {
	if o == nil || IsNil(o.Progress) {
		var ret map[string]interface{}
		return ret
	}
	return o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreJobUpdate1) GetProgressOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Progress) {
		return map[string]interface{}{}, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *CoreJobUpdate1) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given map[string]interface{} and assigns it to the Progress field.
func (o *CoreJobUpdate1) SetProgress(v map[string]interface{}) {
	o.Progress = v
}

func (o CoreJobUpdate1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreJobUpdate1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	return toSerialize, nil
}

type NullableCoreJobUpdate1 struct {
	value *CoreJobUpdate1
	isSet bool
}

func (v NullableCoreJobUpdate1) Get() *CoreJobUpdate1 {
	return v.value
}

func (v *NullableCoreJobUpdate1) Set(val *CoreJobUpdate1) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreJobUpdate1) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreJobUpdate1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreJobUpdate1(val *CoreJobUpdate1) *NullableCoreJobUpdate1 {
	return &NullableCoreJobUpdate1{value: val, isSet: true}
}

func (v NullableCoreJobUpdate1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreJobUpdate1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
