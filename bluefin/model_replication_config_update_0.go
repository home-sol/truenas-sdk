/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the ReplicationConfigUpdate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationConfigUpdate0{}

// ReplicationConfigUpdate0 struct for ReplicationConfigUpdate0
type ReplicationConfigUpdate0 struct {
	MaxParallelReplicationTasks NullableInt32 `json:"max_parallel_replication_tasks,omitempty"`
}

// NewReplicationConfigUpdate0 instantiates a new ReplicationConfigUpdate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationConfigUpdate0() *ReplicationConfigUpdate0 {
	this := ReplicationConfigUpdate0{}
	return &this
}

// NewReplicationConfigUpdate0WithDefaults instantiates a new ReplicationConfigUpdate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationConfigUpdate0WithDefaults() *ReplicationConfigUpdate0 {
	this := ReplicationConfigUpdate0{}
	return &this
}

// GetMaxParallelReplicationTasks returns the MaxParallelReplicationTasks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicationConfigUpdate0) GetMaxParallelReplicationTasks() int32 {
	if o == nil || IsNil(o.MaxParallelReplicationTasks.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxParallelReplicationTasks.Get()
}

// GetMaxParallelReplicationTasksOk returns a tuple with the MaxParallelReplicationTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicationConfigUpdate0) GetMaxParallelReplicationTasksOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxParallelReplicationTasks.Get(), o.MaxParallelReplicationTasks.IsSet()
}

// HasMaxParallelReplicationTasks returns a boolean if a field has been set.
func (o *ReplicationConfigUpdate0) HasMaxParallelReplicationTasks() bool {
	if o != nil && o.MaxParallelReplicationTasks.IsSet() {
		return true
	}

	return false
}

// SetMaxParallelReplicationTasks gets a reference to the given NullableInt32 and assigns it to the MaxParallelReplicationTasks field.
func (o *ReplicationConfigUpdate0) SetMaxParallelReplicationTasks(v int32) {
	o.MaxParallelReplicationTasks.Set(&v)
}

// SetMaxParallelReplicationTasksNil sets the value for MaxParallelReplicationTasks to be an explicit nil
func (o *ReplicationConfigUpdate0) SetMaxParallelReplicationTasksNil() {
	o.MaxParallelReplicationTasks.Set(nil)
}

// UnsetMaxParallelReplicationTasks ensures that no value is present for MaxParallelReplicationTasks, not even an explicit nil
func (o *ReplicationConfigUpdate0) UnsetMaxParallelReplicationTasks() {
	o.MaxParallelReplicationTasks.Unset()
}

func (o ReplicationConfigUpdate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationConfigUpdate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxParallelReplicationTasks.IsSet() {
		toSerialize["max_parallel_replication_tasks"] = o.MaxParallelReplicationTasks.Get()
	}
	return toSerialize, nil
}

type NullableReplicationConfigUpdate0 struct {
	value *ReplicationConfigUpdate0
	isSet bool
}

func (v NullableReplicationConfigUpdate0) Get() *ReplicationConfigUpdate0 {
	return v.value
}

func (v *NullableReplicationConfigUpdate0) Set(val *ReplicationConfigUpdate0) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationConfigUpdate0) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationConfigUpdate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationConfigUpdate0(val *ReplicationConfigUpdate0) *NullableReplicationConfigUpdate0 {
	return &NullableReplicationConfigUpdate0{value: val, isSet: true}
}

func (v NullableReplicationConfigUpdate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationConfigUpdate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
