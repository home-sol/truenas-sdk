/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the PoolDatasetMountpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoolDatasetMountpoint{}

// PoolDatasetMountpoint struct for PoolDatasetMountpoint
type PoolDatasetMountpoint struct {
	Dataset              *string `json:"dataset,omitempty"`
	Raise                *bool   `json:"raise,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PoolDatasetMountpoint PoolDatasetMountpoint

// NewPoolDatasetMountpoint instantiates a new PoolDatasetMountpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolDatasetMountpoint() *PoolDatasetMountpoint {
	this := PoolDatasetMountpoint{}
	var raise bool
	this.Raise = &raise
	return &this
}

// NewPoolDatasetMountpointWithDefaults instantiates a new PoolDatasetMountpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolDatasetMountpointWithDefaults() *PoolDatasetMountpoint {
	this := PoolDatasetMountpoint{}
	var raise bool
	this.Raise = &raise
	return &this
}

// GetDataset returns the Dataset field value if set, zero value otherwise.
func (o *PoolDatasetMountpoint) GetDataset() string {
	if o == nil || IsNil(o.Dataset) {
		var ret string
		return ret
	}
	return *o.Dataset
}

// GetDatasetOk returns a tuple with the Dataset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetMountpoint) GetDatasetOk() (*string, bool) {
	if o == nil || IsNil(o.Dataset) {
		return nil, false
	}
	return o.Dataset, true
}

// HasDataset returns a boolean if a field has been set.
func (o *PoolDatasetMountpoint) HasDataset() bool {
	if o != nil && !IsNil(o.Dataset) {
		return true
	}

	return false
}

// SetDataset gets a reference to the given string and assigns it to the Dataset field.
func (o *PoolDatasetMountpoint) SetDataset(v string) {
	o.Dataset = &v
}

// GetRaise returns the Raise field value if set, zero value otherwise.
func (o *PoolDatasetMountpoint) GetRaise() bool {
	if o == nil || IsNil(o.Raise) {
		var ret bool
		return ret
	}
	return *o.Raise
}

// GetRaiseOk returns a tuple with the Raise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolDatasetMountpoint) GetRaiseOk() (*bool, bool) {
	if o == nil || IsNil(o.Raise) {
		return nil, false
	}
	return o.Raise, true
}

// HasRaise returns a boolean if a field has been set.
func (o *PoolDatasetMountpoint) HasRaise() bool {
	if o != nil && !IsNil(o.Raise) {
		return true
	}

	return false
}

// SetRaise gets a reference to the given bool and assigns it to the Raise field.
func (o *PoolDatasetMountpoint) SetRaise(v bool) {
	o.Raise = &v
}

func (o PoolDatasetMountpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoolDatasetMountpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dataset) {
		toSerialize["dataset"] = o.Dataset
	}
	if !IsNil(o.Raise) {
		toSerialize["raise"] = o.Raise
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PoolDatasetMountpoint) UnmarshalJSON(bytes []byte) (err error) {
	varPoolDatasetMountpoint := _PoolDatasetMountpoint{}

	if err = json.Unmarshal(bytes, &varPoolDatasetMountpoint); err == nil {
		*o = PoolDatasetMountpoint(varPoolDatasetMountpoint)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "dataset")
		delete(additionalProperties, "raise")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePoolDatasetMountpoint struct {
	value *PoolDatasetMountpoint
	isSet bool
}

func (v NullablePoolDatasetMountpoint) Get() *PoolDatasetMountpoint {
	return v.value
}

func (v *NullablePoolDatasetMountpoint) Set(val *PoolDatasetMountpoint) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolDatasetMountpoint) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolDatasetMountpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolDatasetMountpoint(val *PoolDatasetMountpoint) *NullablePoolDatasetMountpoint {
	return &NullablePoolDatasetMountpoint{value: val, isSet: true}
}

func (v NullablePoolDatasetMountpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolDatasetMountpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
