openapi: "3.0.0"
info:
  title: "TrueNAS RESTful API"
  version: "v2.0"

servers:
  - url: https://{server}/api/v2.0
    variables:
      server:
        default: truenas
        description: host name or ip

security:
  - BasicAuth: []
  - BearerAuth: []

paths:
  /disk:
    get:
      operationId: listDisks
      tags:
        - disk
      responses:
        200:
          description: 'A list of disks'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisksResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
        - $ref: '#/components/parameters/CountParam'
        - $ref: '#/components/parameters/SortParam'
        - name: extra.include_expired
          in: query
          required: false
          description: will also include expired disks
          schema:
            type: boolean
            default: false
        - name: extra.passwords
          in: query
          required: false
          description: will not hide KMIP password for the disks
          schema:
            type: boolean
            default: false
        - name: extra.supports_smart
          in: query
          required: false
          description: will query if disks support S.M.A.R.T. Only supported if resulting disks count is not larger than one; otherwise, raises an error.
          schema:
            type: boolean
            default: false
        - name: extra.pools
          in: query
          required: false
          description: will join pool name for each disk
          schema:
            type: boolean
            default: false
  /disk/id/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Disk ID
        schema:
          type: string
    get:
      operationId: getDisk
      tags:
        - disk
      responses:
        200:
          description: 'A disk'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'

    put:
      operationId: updateDisk
      tags:
        - disk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - number
                - lunid
                - description
                - hddstandby
                - advpowermgmt
                - critical
                - difference
                - informational
                - togglesmart
              properties:
                number:
                  type: integer
                lunid:
                  type: string
                  nullable: true
                description:
                  type: string
                  nullable: true
                critical:
                  type: integer
                  nullable: true
                difference:
                  type: integer
                  nullable: true
                informational:
                  type: integer
                  nullable: true
                hddstandby:
                  $ref: '#/components/schemas/HDDStandby'
                advpowermgmt:
                  $ref: '#/components/schemas/AdvPowermgmt'
                togglesmart:
                  type: boolean
                supports_smart:
                  type: boolean
                smartoptions:
                  type: string
                passwd:
                  type: string
      responses:
        200:
          description: 'A disk'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'

  /pool:
    get:
      operationId: listPools
      tags:
        - pool
      responses:
        200:
          description: 'A list of pools'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolList'
        401:
          $ref: '#/components/responses/Unauthorized'
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
        - $ref: '#/components/parameters/CountParam'
        - $ref: '#/components/parameters/SortParam'

components:
  schemas:
    AdvPowermgmt:
      type: string
      enum:
        - "DISABLED"
        - "1"
        - "64"
        - "127"
        - "128"
        - "192"
        - "254"
    Device:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        guid:
          type: string
        status:
          type: string
        stats:
          type: object
          additionalProperties: true
        device:
          type: string
        disk:
          type: string
        children:
          type: array
          items:
            type: object
            additionalProperties: true
        unavail_disk:
          type: object
          additionalProperties: true
      additionalProperties: true
    DisksResponse:
      type: array
      items:
        $ref: '#/components/schemas/Disk'
    Disk:
      type: object
      required:
        - identifier
        - name
        - subsystem
        - number
        - serial
        - lunid
        - size
        - description
        - transfermode
        - hddstandby
        - advpowermgmt
        - togglesmart
        - smartoptions
        - expiretime
        - critical
        - difference
        - informational
        - model
        - rotationrate
        - type
        - zfs_guid
        - bus
        - devname
        - enclosure
        - pool
      properties:
        identifier:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        subsystem:
          type: string
          readOnly: true
        number:
          type: integer
        serial:
          type: string
          readOnly: true
        lunid:
          type: string
          nullable: true
        size:
          type: integer
          format: int64
          readOnly: true
        description:
          type: string
        transfermode:
          type: string
          readOnly: true
        hddstandby:
          $ref: '#/components/schemas/HDDStandby'
        advpowermgmt:
          $ref: '#/components/schemas/AdvPowermgmt'
        togglesmart:
          type: boolean
        smartoptions:
          type: string
        expiretime:
          type: string
          nullable: true
          readOnly: true
        critical:
          type: integer
          nullable: true
        difference:
          type: integer
          nullable: true
        informational:
          type: integer
          nullable: true
        model:
          type: string
          nullable: true
          readOnly: true
        rotationrate:
          type: integer
          nullable: true
          readOnly: true
        type:
          type: string
          nullable: true
          readOnly: true
        zfs_guid:
          type: string
          nullable: true
          readOnly: true
        bus:
          type: string
        devname:
          type: string
          readOnly: true
        enclosure:
          type: object
          properties:
            number:
              type: integer
            slot:
              type: integer
          additionalProperties: false
        pool:
          type: string
          nullable: true
        passwd:
          type: string
        kmip_uid:
          type: string
          nullable: true
          readOnly: true
        supports_smart:
          type: boolean
          nullable: true
      additionalProperties: false
    HDDStandby:
      type: string
      enum:
        - "ALWAYS ON"
        - "5"
        - "10"
        - "20"
        - "30"
        - "60"
        - "120"
        - "180"
        - "240"
        - "300"
        - "330"
    Pool:
      type: object
      required:
        - id
        - name
        - guid
        - encrypt
        - encryptkey
        - encryptkey_path
        - is_decrypted
        - status
        - path
        - scan
        - healthy
        - warning
        - status_detail
        - size
        - allocated
        - free
        - freeing
        - fragmentation
        - autotrim
        - topology
      properties:
        id:
          type: integer
        name:
          type: string
        guid:
          type: string
        encrypt:
          type: integer
        encryptkey:
          type: string
        encryptkey_path:
          type: string
          nullable: true
        is_decrypted:
          type: boolean
        status:
          type: string
        path:
          type: string
        scan:
          type: object
          additionalProperties: true
        is_upgraded:
          type: boolean
        healthy:
          type: boolean
        warning:
          type: boolean
        status_detail:
          type: string
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
        allocated:
          type: integer
          format: int64
          nullable: true
        free:
          type: integer
          format: int64
          nullable: true
        freeing:
          type: integer
          format: int64
          nullable: true
        fragmentation:
          type: string
          nullable: true
        autotrim:
          type: object
          additionalProperties: true
        topology:
          type: object
          required:
            - data
            - log
            - cache
            - spare
            - special
            - dedup
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/VDev'
            log:
              type: array
              items:
                $ref: '#/components/schemas/VDev'
            cache:
              type: array
              items:
                  $ref: '#/components/schemas/VDev'
            spare:
              type: array
              items:
                $ref: '#/components/schemas/VDev'
            special:
              type: array
              items:
                  $ref: '#/components/schemas/VDev'
            dedup:
              type: array
              items:
                  $ref: '#/components/schemas/VDev'
          additionalProperties: true
    PoolList:
      type: array
      items:
        $ref: '#/components/schemas/Pool'

    VDev:
      type: object
      required:
        - guid
        - name
        - type
        - path
        - status
        - stats
      properties:
        guid:
          type: string
        name:
          type: string
        type:
          type: string
        path:
          type: string
          nullable: true
        status:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/Device'
      additionalProperties: true
  responses:
    NotFound:
      description: Endpoint not found
    Unauthorized:
      description: No authorization for this endpoint
    Success:
      description: Operation succeeded

  parameters:
    LimitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
    OffsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
    CountParam:
      in: query
      name: count
      required: false
      schema:
        type: boolean
    SortParam:
      in: query
      name: sort
      required: false
      schema:
        type: string

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: APIKey



