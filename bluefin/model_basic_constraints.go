/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the BasicConstraints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BasicConstraints{}

// BasicConstraints struct for BasicConstraints
type BasicConstraints struct {
	Ca                *bool         `json:"ca,omitempty"`
	Enabled           *bool         `json:"enabled,omitempty"`
	PathLength        NullableInt32 `json:"path_length,omitempty"`
	ExtensionCritical *bool         `json:"extension_critical,omitempty"`
}

// NewBasicConstraints instantiates a new BasicConstraints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBasicConstraints() *BasicConstraints {
	this := BasicConstraints{}
	var ca bool
	this.Ca = &ca
	var enabled bool
	this.Enabled = &enabled
	var extensionCritical bool
	this.ExtensionCritical = &extensionCritical
	return &this
}

// NewBasicConstraintsWithDefaults instantiates a new BasicConstraints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBasicConstraintsWithDefaults() *BasicConstraints {
	this := BasicConstraints{}
	var ca bool
	this.Ca = &ca
	var enabled bool
	this.Enabled = &enabled
	var extensionCritical bool
	this.ExtensionCritical = &extensionCritical
	return &this
}

// GetCa returns the Ca field value if set, zero value otherwise.
func (o *BasicConstraints) GetCa() bool {
	if o == nil || IsNil(o.Ca) {
		var ret bool
		return ret
	}
	return *o.Ca
}

// GetCaOk returns a tuple with the Ca field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BasicConstraints) GetCaOk() (*bool, bool) {
	if o == nil || IsNil(o.Ca) {
		return nil, false
	}
	return o.Ca, true
}

// HasCa returns a boolean if a field has been set.
func (o *BasicConstraints) HasCa() bool {
	if o != nil && !IsNil(o.Ca) {
		return true
	}

	return false
}

// SetCa gets a reference to the given bool and assigns it to the Ca field.
func (o *BasicConstraints) SetCa(v bool) {
	o.Ca = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *BasicConstraints) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BasicConstraints) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *BasicConstraints) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *BasicConstraints) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetPathLength returns the PathLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicConstraints) GetPathLength() int32 {
	if o == nil || IsNil(o.PathLength.Get()) {
		var ret int32
		return ret
	}
	return *o.PathLength.Get()
}

// GetPathLengthOk returns a tuple with the PathLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicConstraints) GetPathLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PathLength.Get(), o.PathLength.IsSet()
}

// HasPathLength returns a boolean if a field has been set.
func (o *BasicConstraints) HasPathLength() bool {
	if o != nil && o.PathLength.IsSet() {
		return true
	}

	return false
}

// SetPathLength gets a reference to the given NullableInt32 and assigns it to the PathLength field.
func (o *BasicConstraints) SetPathLength(v int32) {
	o.PathLength.Set(&v)
}

// SetPathLengthNil sets the value for PathLength to be an explicit nil
func (o *BasicConstraints) SetPathLengthNil() {
	o.PathLength.Set(nil)
}

// UnsetPathLength ensures that no value is present for PathLength, not even an explicit nil
func (o *BasicConstraints) UnsetPathLength() {
	o.PathLength.Unset()
}

// GetExtensionCritical returns the ExtensionCritical field value if set, zero value otherwise.
func (o *BasicConstraints) GetExtensionCritical() bool {
	if o == nil || IsNil(o.ExtensionCritical) {
		var ret bool
		return ret
	}
	return *o.ExtensionCritical
}

// GetExtensionCriticalOk returns a tuple with the ExtensionCritical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BasicConstraints) GetExtensionCriticalOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtensionCritical) {
		return nil, false
	}
	return o.ExtensionCritical, true
}

// HasExtensionCritical returns a boolean if a field has been set.
func (o *BasicConstraints) HasExtensionCritical() bool {
	if o != nil && !IsNil(o.ExtensionCritical) {
		return true
	}

	return false
}

// SetExtensionCritical gets a reference to the given bool and assigns it to the ExtensionCritical field.
func (o *BasicConstraints) SetExtensionCritical(v bool) {
	o.ExtensionCritical = &v
}

func (o BasicConstraints) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BasicConstraints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ca) {
		toSerialize["ca"] = o.Ca
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if o.PathLength.IsSet() {
		toSerialize["path_length"] = o.PathLength.Get()
	}
	if !IsNil(o.ExtensionCritical) {
		toSerialize["extension_critical"] = o.ExtensionCritical
	}
	return toSerialize, nil
}

type NullableBasicConstraints struct {
	value *BasicConstraints
	isSet bool
}

func (v NullableBasicConstraints) Get() *BasicConstraints {
	return v.value
}

func (v *NullableBasicConstraints) Set(val *BasicConstraints) {
	v.value = val
	v.isSet = true
}

func (v NullableBasicConstraints) IsSet() bool {
	return v.isSet
}

func (v *NullableBasicConstraints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBasicConstraints(val *BasicConstraints) *NullableBasicConstraints {
	return &NullableBasicConstraints{value: val, isSet: true}
}

func (v NullableBasicConstraints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBasicConstraints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
