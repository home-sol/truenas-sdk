/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bluefin

import (
	"encoding/json"
)

// checks if the InterfaceCreate0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfaceCreate0{}

// InterfaceCreate0 struct for InterfaceCreate0
type InterfaceCreate0 struct {
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	// For BRIDGE `type` the following attribute is required: bridge_members. For LINK_AGGREGATION `type` the following attributes are required: lag_ports, lag_protocol. For VLAN `type` the following attributes are required: vlan_parent_interface, vlan_tag and vlan_pcp.
	Type                   *string                  `json:"type,omitempty"`
	Ipv4Dhcp               *bool                    `json:"ipv4_dhcp,omitempty"`
	Ipv6Auto               *bool                    `json:"ipv6_auto,omitempty"`
	Aliases                []InterfaceAlias         `json:"aliases,omitempty"`
	FailoverCritical       *bool                    `json:"failover_critical,omitempty"`
	FailoverGroup          NullableInt32            `json:"failover_group,omitempty"`
	FailoverVhid           NullableInt32            `json:"failover_vhid,omitempty"`
	FailoverAliases        []InterfaceFailoverAlias `json:"failover_aliases,omitempty"`
	FailoverVirtualAliases []InterfaceVirtualAlias  `json:"failover_virtual_aliases,omitempty"`
	BridgeMembers          []interface{}            `json:"bridge_members,omitempty"`
	Stp                    *bool                    `json:"stp,omitempty"`
	LagProtocol            *string                  `json:"lag_protocol,omitempty"`
	XmitHashPolicy         NullableString           `json:"xmit_hash_policy,omitempty"`
	LacpduRate             NullableString           `json:"lacpdu_rate,omitempty"`
	LagPorts               []string                 `json:"lag_ports,omitempty"`
	VlanParentInterface    *string                  `json:"vlan_parent_interface,omitempty"`
	VlanTag                *int32                   `json:"vlan_tag,omitempty"`
	VlanPcp                NullableInt32            `json:"vlan_pcp,omitempty"`
	Mtu                    NullableInt32            `json:"mtu,omitempty"`
}

// NewInterfaceCreate0 instantiates a new InterfaceCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceCreate0() *InterfaceCreate0 {
	this := InterfaceCreate0{}
	var description string
	this.Description = &description
	var ipv4Dhcp bool
	this.Ipv4Dhcp = &ipv4Dhcp
	var ipv6Auto bool
	this.Ipv6Auto = &ipv6Auto
	var failoverCritical bool
	this.FailoverCritical = &failoverCritical
	var stp bool
	this.Stp = &stp
	return &this
}

// NewInterfaceCreate0WithDefaults instantiates a new InterfaceCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceCreate0WithDefaults() *InterfaceCreate0 {
	this := InterfaceCreate0{}
	var description string
	this.Description = &description
	var ipv4Dhcp bool
	this.Ipv4Dhcp = &ipv4Dhcp
	var ipv6Auto bool
	this.Ipv6Auto = &ipv6Auto
	var failoverCritical bool
	this.FailoverCritical = &failoverCritical
	var stp bool
	this.Stp = &stp
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InterfaceCreate0) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InterfaceCreate0) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InterfaceCreate0) SetType(v string) {
	o.Type = &v
}

// GetIpv4Dhcp returns the Ipv4Dhcp field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetIpv4Dhcp() bool {
	if o == nil || IsNil(o.Ipv4Dhcp) {
		var ret bool
		return ret
	}
	return *o.Ipv4Dhcp
}

// GetIpv4DhcpOk returns a tuple with the Ipv4Dhcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetIpv4DhcpOk() (*bool, bool) {
	if o == nil || IsNil(o.Ipv4Dhcp) {
		return nil, false
	}
	return o.Ipv4Dhcp, true
}

// HasIpv4Dhcp returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasIpv4Dhcp() bool {
	if o != nil && !IsNil(o.Ipv4Dhcp) {
		return true
	}

	return false
}

// SetIpv4Dhcp gets a reference to the given bool and assigns it to the Ipv4Dhcp field.
func (o *InterfaceCreate0) SetIpv4Dhcp(v bool) {
	o.Ipv4Dhcp = &v
}

// GetIpv6Auto returns the Ipv6Auto field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetIpv6Auto() bool {
	if o == nil || IsNil(o.Ipv6Auto) {
		var ret bool
		return ret
	}
	return *o.Ipv6Auto
}

// GetIpv6AutoOk returns a tuple with the Ipv6Auto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetIpv6AutoOk() (*bool, bool) {
	if o == nil || IsNil(o.Ipv6Auto) {
		return nil, false
	}
	return o.Ipv6Auto, true
}

// HasIpv6Auto returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasIpv6Auto() bool {
	if o != nil && !IsNil(o.Ipv6Auto) {
		return true
	}

	return false
}

// SetIpv6Auto gets a reference to the given bool and assigns it to the Ipv6Auto field.
func (o *InterfaceCreate0) SetIpv6Auto(v bool) {
	o.Ipv6Auto = &v
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetAliases() []InterfaceAlias {
	if o == nil || IsNil(o.Aliases) {
		var ret []InterfaceAlias
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetAliasesOk() ([]InterfaceAlias, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasAliases() bool {
	if o != nil && !IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []InterfaceAlias and assigns it to the Aliases field.
func (o *InterfaceCreate0) SetAliases(v []InterfaceAlias) {
	o.Aliases = v
}

// GetFailoverCritical returns the FailoverCritical field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetFailoverCritical() bool {
	if o == nil || IsNil(o.FailoverCritical) {
		var ret bool
		return ret
	}
	return *o.FailoverCritical
}

// GetFailoverCriticalOk returns a tuple with the FailoverCritical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetFailoverCriticalOk() (*bool, bool) {
	if o == nil || IsNil(o.FailoverCritical) {
		return nil, false
	}
	return o.FailoverCritical, true
}

// HasFailoverCritical returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasFailoverCritical() bool {
	if o != nil && !IsNil(o.FailoverCritical) {
		return true
	}

	return false
}

// SetFailoverCritical gets a reference to the given bool and assigns it to the FailoverCritical field.
func (o *InterfaceCreate0) SetFailoverCritical(v bool) {
	o.FailoverCritical = &v
}

// GetFailoverGroup returns the FailoverGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InterfaceCreate0) GetFailoverGroup() int32 {
	if o == nil || IsNil(o.FailoverGroup.Get()) {
		var ret int32
		return ret
	}
	return *o.FailoverGroup.Get()
}

// GetFailoverGroupOk returns a tuple with the FailoverGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InterfaceCreate0) GetFailoverGroupOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailoverGroup.Get(), o.FailoverGroup.IsSet()
}

// HasFailoverGroup returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasFailoverGroup() bool {
	if o != nil && o.FailoverGroup.IsSet() {
		return true
	}

	return false
}

// SetFailoverGroup gets a reference to the given NullableInt32 and assigns it to the FailoverGroup field.
func (o *InterfaceCreate0) SetFailoverGroup(v int32) {
	o.FailoverGroup.Set(&v)
}

// SetFailoverGroupNil sets the value for FailoverGroup to be an explicit nil
func (o *InterfaceCreate0) SetFailoverGroupNil() {
	o.FailoverGroup.Set(nil)
}

// UnsetFailoverGroup ensures that no value is present for FailoverGroup, not even an explicit nil
func (o *InterfaceCreate0) UnsetFailoverGroup() {
	o.FailoverGroup.Unset()
}

// GetFailoverVhid returns the FailoverVhid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InterfaceCreate0) GetFailoverVhid() int32 {
	if o == nil || IsNil(o.FailoverVhid.Get()) {
		var ret int32
		return ret
	}
	return *o.FailoverVhid.Get()
}

// GetFailoverVhidOk returns a tuple with the FailoverVhid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InterfaceCreate0) GetFailoverVhidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailoverVhid.Get(), o.FailoverVhid.IsSet()
}

// HasFailoverVhid returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasFailoverVhid() bool {
	if o != nil && o.FailoverVhid.IsSet() {
		return true
	}

	return false
}

// SetFailoverVhid gets a reference to the given NullableInt32 and assigns it to the FailoverVhid field.
func (o *InterfaceCreate0) SetFailoverVhid(v int32) {
	o.FailoverVhid.Set(&v)
}

// SetFailoverVhidNil sets the value for FailoverVhid to be an explicit nil
func (o *InterfaceCreate0) SetFailoverVhidNil() {
	o.FailoverVhid.Set(nil)
}

// UnsetFailoverVhid ensures that no value is present for FailoverVhid, not even an explicit nil
func (o *InterfaceCreate0) UnsetFailoverVhid() {
	o.FailoverVhid.Unset()
}

// GetFailoverAliases returns the FailoverAliases field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetFailoverAliases() []InterfaceFailoverAlias {
	if o == nil || IsNil(o.FailoverAliases) {
		var ret []InterfaceFailoverAlias
		return ret
	}
	return o.FailoverAliases
}

// GetFailoverAliasesOk returns a tuple with the FailoverAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetFailoverAliasesOk() ([]InterfaceFailoverAlias, bool) {
	if o == nil || IsNil(o.FailoverAliases) {
		return nil, false
	}
	return o.FailoverAliases, true
}

// HasFailoverAliases returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasFailoverAliases() bool {
	if o != nil && !IsNil(o.FailoverAliases) {
		return true
	}

	return false
}

// SetFailoverAliases gets a reference to the given []InterfaceFailoverAlias and assigns it to the FailoverAliases field.
func (o *InterfaceCreate0) SetFailoverAliases(v []InterfaceFailoverAlias) {
	o.FailoverAliases = v
}

// GetFailoverVirtualAliases returns the FailoverVirtualAliases field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetFailoverVirtualAliases() []InterfaceVirtualAlias {
	if o == nil || IsNil(o.FailoverVirtualAliases) {
		var ret []InterfaceVirtualAlias
		return ret
	}
	return o.FailoverVirtualAliases
}

// GetFailoverVirtualAliasesOk returns a tuple with the FailoverVirtualAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetFailoverVirtualAliasesOk() ([]InterfaceVirtualAlias, bool) {
	if o == nil || IsNil(o.FailoverVirtualAliases) {
		return nil, false
	}
	return o.FailoverVirtualAliases, true
}

// HasFailoverVirtualAliases returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasFailoverVirtualAliases() bool {
	if o != nil && !IsNil(o.FailoverVirtualAliases) {
		return true
	}

	return false
}

// SetFailoverVirtualAliases gets a reference to the given []InterfaceVirtualAlias and assigns it to the FailoverVirtualAliases field.
func (o *InterfaceCreate0) SetFailoverVirtualAliases(v []InterfaceVirtualAlias) {
	o.FailoverVirtualAliases = v
}

// GetBridgeMembers returns the BridgeMembers field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetBridgeMembers() []interface{} {
	if o == nil || IsNil(o.BridgeMembers) {
		var ret []interface{}
		return ret
	}
	return o.BridgeMembers
}

// GetBridgeMembersOk returns a tuple with the BridgeMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetBridgeMembersOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.BridgeMembers) {
		return nil, false
	}
	return o.BridgeMembers, true
}

// HasBridgeMembers returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasBridgeMembers() bool {
	if o != nil && !IsNil(o.BridgeMembers) {
		return true
	}

	return false
}

// SetBridgeMembers gets a reference to the given []interface{} and assigns it to the BridgeMembers field.
func (o *InterfaceCreate0) SetBridgeMembers(v []interface{}) {
	o.BridgeMembers = v
}

// GetStp returns the Stp field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetStp() bool {
	if o == nil || IsNil(o.Stp) {
		var ret bool
		return ret
	}
	return *o.Stp
}

// GetStpOk returns a tuple with the Stp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetStpOk() (*bool, bool) {
	if o == nil || IsNil(o.Stp) {
		return nil, false
	}
	return o.Stp, true
}

// HasStp returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasStp() bool {
	if o != nil && !IsNil(o.Stp) {
		return true
	}

	return false
}

// SetStp gets a reference to the given bool and assigns it to the Stp field.
func (o *InterfaceCreate0) SetStp(v bool) {
	o.Stp = &v
}

// GetLagProtocol returns the LagProtocol field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetLagProtocol() string {
	if o == nil || IsNil(o.LagProtocol) {
		var ret string
		return ret
	}
	return *o.LagProtocol
}

// GetLagProtocolOk returns a tuple with the LagProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetLagProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.LagProtocol) {
		return nil, false
	}
	return o.LagProtocol, true
}

// HasLagProtocol returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasLagProtocol() bool {
	if o != nil && !IsNil(o.LagProtocol) {
		return true
	}

	return false
}

// SetLagProtocol gets a reference to the given string and assigns it to the LagProtocol field.
func (o *InterfaceCreate0) SetLagProtocol(v string) {
	o.LagProtocol = &v
}

// GetXmitHashPolicy returns the XmitHashPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InterfaceCreate0) GetXmitHashPolicy() string {
	if o == nil || IsNil(o.XmitHashPolicy.Get()) {
		var ret string
		return ret
	}
	return *o.XmitHashPolicy.Get()
}

// GetXmitHashPolicyOk returns a tuple with the XmitHashPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InterfaceCreate0) GetXmitHashPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.XmitHashPolicy.Get(), o.XmitHashPolicy.IsSet()
}

// HasXmitHashPolicy returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasXmitHashPolicy() bool {
	if o != nil && o.XmitHashPolicy.IsSet() {
		return true
	}

	return false
}

// SetXmitHashPolicy gets a reference to the given NullableString and assigns it to the XmitHashPolicy field.
func (o *InterfaceCreate0) SetXmitHashPolicy(v string) {
	o.XmitHashPolicy.Set(&v)
}

// SetXmitHashPolicyNil sets the value for XmitHashPolicy to be an explicit nil
func (o *InterfaceCreate0) SetXmitHashPolicyNil() {
	o.XmitHashPolicy.Set(nil)
}

// UnsetXmitHashPolicy ensures that no value is present for XmitHashPolicy, not even an explicit nil
func (o *InterfaceCreate0) UnsetXmitHashPolicy() {
	o.XmitHashPolicy.Unset()
}

// GetLacpduRate returns the LacpduRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InterfaceCreate0) GetLacpduRate() string {
	if o == nil || IsNil(o.LacpduRate.Get()) {
		var ret string
		return ret
	}
	return *o.LacpduRate.Get()
}

// GetLacpduRateOk returns a tuple with the LacpduRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InterfaceCreate0) GetLacpduRateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LacpduRate.Get(), o.LacpduRate.IsSet()
}

// HasLacpduRate returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasLacpduRate() bool {
	if o != nil && o.LacpduRate.IsSet() {
		return true
	}

	return false
}

// SetLacpduRate gets a reference to the given NullableString and assigns it to the LacpduRate field.
func (o *InterfaceCreate0) SetLacpduRate(v string) {
	o.LacpduRate.Set(&v)
}

// SetLacpduRateNil sets the value for LacpduRate to be an explicit nil
func (o *InterfaceCreate0) SetLacpduRateNil() {
	o.LacpduRate.Set(nil)
}

// UnsetLacpduRate ensures that no value is present for LacpduRate, not even an explicit nil
func (o *InterfaceCreate0) UnsetLacpduRate() {
	o.LacpduRate.Unset()
}

// GetLagPorts returns the LagPorts field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetLagPorts() []string {
	if o == nil || IsNil(o.LagPorts) {
		var ret []string
		return ret
	}
	return o.LagPorts
}

// GetLagPortsOk returns a tuple with the LagPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetLagPortsOk() ([]string, bool) {
	if o == nil || IsNil(o.LagPorts) {
		return nil, false
	}
	return o.LagPorts, true
}

// HasLagPorts returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasLagPorts() bool {
	if o != nil && !IsNil(o.LagPorts) {
		return true
	}

	return false
}

// SetLagPorts gets a reference to the given []string and assigns it to the LagPorts field.
func (o *InterfaceCreate0) SetLagPorts(v []string) {
	o.LagPorts = v
}

// GetVlanParentInterface returns the VlanParentInterface field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetVlanParentInterface() string {
	if o == nil || IsNil(o.VlanParentInterface) {
		var ret string
		return ret
	}
	return *o.VlanParentInterface
}

// GetVlanParentInterfaceOk returns a tuple with the VlanParentInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetVlanParentInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.VlanParentInterface) {
		return nil, false
	}
	return o.VlanParentInterface, true
}

// HasVlanParentInterface returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasVlanParentInterface() bool {
	if o != nil && !IsNil(o.VlanParentInterface) {
		return true
	}

	return false
}

// SetVlanParentInterface gets a reference to the given string and assigns it to the VlanParentInterface field.
func (o *InterfaceCreate0) SetVlanParentInterface(v string) {
	o.VlanParentInterface = &v
}

// GetVlanTag returns the VlanTag field value if set, zero value otherwise.
func (o *InterfaceCreate0) GetVlanTag() int32 {
	if o == nil || IsNil(o.VlanTag) {
		var ret int32
		return ret
	}
	return *o.VlanTag
}

// GetVlanTagOk returns a tuple with the VlanTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCreate0) GetVlanTagOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanTag) {
		return nil, false
	}
	return o.VlanTag, true
}

// HasVlanTag returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasVlanTag() bool {
	if o != nil && !IsNil(o.VlanTag) {
		return true
	}

	return false
}

// SetVlanTag gets a reference to the given int32 and assigns it to the VlanTag field.
func (o *InterfaceCreate0) SetVlanTag(v int32) {
	o.VlanTag = &v
}

// GetVlanPcp returns the VlanPcp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InterfaceCreate0) GetVlanPcp() int32 {
	if o == nil || IsNil(o.VlanPcp.Get()) {
		var ret int32
		return ret
	}
	return *o.VlanPcp.Get()
}

// GetVlanPcpOk returns a tuple with the VlanPcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InterfaceCreate0) GetVlanPcpOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.VlanPcp.Get(), o.VlanPcp.IsSet()
}

// HasVlanPcp returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasVlanPcp() bool {
	if o != nil && o.VlanPcp.IsSet() {
		return true
	}

	return false
}

// SetVlanPcp gets a reference to the given NullableInt32 and assigns it to the VlanPcp field.
func (o *InterfaceCreate0) SetVlanPcp(v int32) {
	o.VlanPcp.Set(&v)
}

// SetVlanPcpNil sets the value for VlanPcp to be an explicit nil
func (o *InterfaceCreate0) SetVlanPcpNil() {
	o.VlanPcp.Set(nil)
}

// UnsetVlanPcp ensures that no value is present for VlanPcp, not even an explicit nil
func (o *InterfaceCreate0) UnsetVlanPcp() {
	o.VlanPcp.Unset()
}

// GetMtu returns the Mtu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InterfaceCreate0) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu.Get()) {
		var ret int32
		return ret
	}
	return *o.Mtu.Get()
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InterfaceCreate0) GetMtuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mtu.Get(), o.Mtu.IsSet()
}

// HasMtu returns a boolean if a field has been set.
func (o *InterfaceCreate0) HasMtu() bool {
	if o != nil && o.Mtu.IsSet() {
		return true
	}

	return false
}

// SetMtu gets a reference to the given NullableInt32 and assigns it to the Mtu field.
func (o *InterfaceCreate0) SetMtu(v int32) {
	o.Mtu.Set(&v)
}

// SetMtuNil sets the value for Mtu to be an explicit nil
func (o *InterfaceCreate0) SetMtuNil() {
	o.Mtu.Set(nil)
}

// UnsetMtu ensures that no value is present for Mtu, not even an explicit nil
func (o *InterfaceCreate0) UnsetMtu() {
	o.Mtu.Unset()
}

func (o InterfaceCreate0) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfaceCreate0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Ipv4Dhcp) {
		toSerialize["ipv4_dhcp"] = o.Ipv4Dhcp
	}
	if !IsNil(o.Ipv6Auto) {
		toSerialize["ipv6_auto"] = o.Ipv6Auto
	}
	if !IsNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	if !IsNil(o.FailoverCritical) {
		toSerialize["failover_critical"] = o.FailoverCritical
	}
	if o.FailoverGroup.IsSet() {
		toSerialize["failover_group"] = o.FailoverGroup.Get()
	}
	if o.FailoverVhid.IsSet() {
		toSerialize["failover_vhid"] = o.FailoverVhid.Get()
	}
	if !IsNil(o.FailoverAliases) {
		toSerialize["failover_aliases"] = o.FailoverAliases
	}
	if !IsNil(o.FailoverVirtualAliases) {
		toSerialize["failover_virtual_aliases"] = o.FailoverVirtualAliases
	}
	if !IsNil(o.BridgeMembers) {
		toSerialize["bridge_members"] = o.BridgeMembers
	}
	if !IsNil(o.Stp) {
		toSerialize["stp"] = o.Stp
	}
	if !IsNil(o.LagProtocol) {
		toSerialize["lag_protocol"] = o.LagProtocol
	}
	if o.XmitHashPolicy.IsSet() {
		toSerialize["xmit_hash_policy"] = o.XmitHashPolicy.Get()
	}
	if o.LacpduRate.IsSet() {
		toSerialize["lacpdu_rate"] = o.LacpduRate.Get()
	}
	if !IsNil(o.LagPorts) {
		toSerialize["lag_ports"] = o.LagPorts
	}
	if !IsNil(o.VlanParentInterface) {
		toSerialize["vlan_parent_interface"] = o.VlanParentInterface
	}
	if !IsNil(o.VlanTag) {
		toSerialize["vlan_tag"] = o.VlanTag
	}
	if o.VlanPcp.IsSet() {
		toSerialize["vlan_pcp"] = o.VlanPcp.Get()
	}
	if o.Mtu.IsSet() {
		toSerialize["mtu"] = o.Mtu.Get()
	}
	return toSerialize, nil
}

type NullableInterfaceCreate0 struct {
	value *InterfaceCreate0
	isSet bool
}

func (v NullableInterfaceCreate0) Get() *InterfaceCreate0 {
	return v.value
}

func (v *NullableInterfaceCreate0) Set(val *InterfaceCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceCreate0(val *InterfaceCreate0) *NullableInterfaceCreate0 {
	return &NullableInterfaceCreate0{value: val, isSet: true}
}

func (v NullableInterfaceCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
